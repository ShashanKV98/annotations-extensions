{"version":3,"file":"annotorious-selector-pack.es.js","sources":["../node_modules/@annotorious/annotorious/dist/annotorious.es.js","../node_modules/svelte/internal/index.mjs","../node_modules/@annotorious/annotorious/src/model/core/Shape.ts","../node_modules/@annotorious/annotorious/src/model/core/shapeUtils.ts","../node_modules/@annotorious/annotorious/src/model/core/ellipse/ellipseUtils.ts","../node_modules/@annotorious/annotorious/src/model/core/polygon/polygonUtils.ts","../node_modules/@annotorious/annotorious/src/model/core/rectangle/rectangleUtils.ts","../node_modules/nanoid/index.browser.js","../node_modules/@annotorious/core/src/presence/PresenceState.ts","../node_modules/@annotorious/annotorious/src/annotation/editors/polygon/PolygonEditor.svelte","../node_modules/@annotorious/annotorious/src/annotation/editors/rectangle/RectangleEditor.svelte","../node_modules/@annotorious/annotorious/src/annotation/editors/editorsRegistry.ts","../node_modules/@annotorious/annotorious/src/annotation/editors/Handle.ts","../node_modules/@annotorious/annotorious/src/annotation/editors/Editor.svelte","../src/ellipse/EllipseEditor.svelte","../src/ellipse/RubberbandEllipse.svelte","../src/selectorPack.ts"],"sourcesContent":["function G() {\n}\nfunction Wt(e, t) {\n  for (const n in t)\n    e[n] = t[n];\n  return e;\n}\nfunction Rt(e) {\n  return e();\n}\nfunction lt() {\n  return /* @__PURE__ */ Object.create(null);\n}\nfunction le(e) {\n  e.forEach(Rt);\n}\nfunction j(e) {\n  return typeof e == \"function\";\n}\nfunction K(e, t) {\n  return e != e ? t == t : e !== t || e && typeof e == \"object\" || typeof e == \"function\";\n}\nfunction Jt(e) {\n  return Object.keys(e).length === 0;\n}\nfunction Xt(e, ...t) {\n  if (e == null)\n    return G;\n  const n = e.subscribe(...t);\n  return n.unsubscribe ? () => n.unsubscribe() : n;\n}\nfunction at(e, t, n) {\n  e.$$.on_destroy.push(Xt(t, n));\n}\nfunction Qt(e, t, n, o) {\n  if (e) {\n    const i = Dt(e, t, n, o);\n    return e[0](i);\n  }\n}\nfunction Dt(e, t, n, o) {\n  return e[1] && o ? Wt(n.ctx.slice(), e[1](o(t))) : n.ctx;\n}\nfunction Zt(e, t, n, o) {\n  if (e[2] && o) {\n    const i = e[2](o(n));\n    if (t.dirty === void 0)\n      return i;\n    if (typeof i == \"object\") {\n      const s = [], r = Math.max(t.dirty.length, i.length);\n      for (let l = 0; l < r; l += 1)\n        s[l] = t.dirty[l] | i[l];\n      return s;\n    }\n    return t.dirty | i;\n  }\n  return t.dirty;\n}\nfunction Kt(e, t, n, o, i, s) {\n  if (i) {\n    const r = Dt(t, n, o, s);\n    e.p(r, i);\n  }\n}\nfunction xt(e) {\n  if (e.ctx.length > 32) {\n    const t = [], n = e.ctx.length / 32;\n    for (let o = 0; o < n; o++)\n      t[o] = -1;\n    return t;\n  }\n  return -1;\n}\nfunction fe(e, t) {\n  e.appendChild(t);\n}\nfunction v(e, t, n) {\n  e.insertBefore(t, n || null);\n}\nfunction O(e) {\n  e.parentNode && e.parentNode.removeChild(e);\n}\nfunction tt(e, t) {\n  for (let n = 0; n < e.length; n += 1)\n    e[n] && e[n].d(t);\n}\nfunction R(e) {\n  return document.createElementNS(\"http://www.w3.org/2000/svg\", e);\n}\nfunction Nt(e) {\n  return document.createTextNode(e);\n}\nfunction ee() {\n  return Nt(\" \");\n}\nfunction ae() {\n  return Nt(\"\");\n}\nfunction W(e, t, n, o) {\n  return e.addEventListener(t, n, o), () => e.removeEventListener(t, n, o);\n}\nfunction u(e, t, n) {\n  n == null ? e.removeAttribute(t) : e.getAttribute(t) !== n && e.setAttribute(t, n);\n}\nfunction $t(e) {\n  return Array.from(e.childNodes);\n}\nfunction ct(e, t, n) {\n  e.classList[n ? \"add\" : \"remove\"](t);\n}\nfunction en(e, t, { bubbles: n = !1, cancelable: o = !1 } = {}) {\n  const i = document.createEvent(\"CustomEvent\");\n  return i.initCustomEvent(e, n, o, t), i;\n}\nlet Ie;\nfunction ke(e) {\n  Ie = e;\n}\nfunction Ut() {\n  if (!Ie)\n    throw new Error(\"Function called outside component initialization\");\n  return Ie;\n}\nfunction Ce(e) {\n  Ut().$$.on_mount.push(e);\n}\nfunction Me() {\n  const e = Ut();\n  return (t, n, { cancelable: o = !1 } = {}) => {\n    const i = e.$$.callbacks[t];\n    if (i) {\n      const s = en(t, n, { cancelable: o });\n      return i.slice().forEach((r) => {\n        r.call(e, s);\n      }), !s.defaultPrevented;\n    }\n    return !0;\n  };\n}\nfunction Ae(e, t) {\n  const n = e.$$.callbacks[t.type];\n  n && n.slice().forEach((o) => o.call(this, t));\n}\nconst be = [], Se = [];\nlet Te = [];\nconst ft = [], tn = /* @__PURE__ */ Promise.resolve();\nlet $e = !1;\nfunction nn() {\n  $e || ($e = !0, tn.then(Gt));\n}\nfunction et(e) {\n  Te.push(e);\n}\nconst We = /* @__PURE__ */ new Set();\nlet _e = 0;\nfunction Gt() {\n  if (_e !== 0)\n    return;\n  const e = Ie;\n  do {\n    try {\n      for (; _e < be.length; ) {\n        const t = be[_e];\n        _e++, ke(t), on(t.$$);\n      }\n    } catch (t) {\n      throw be.length = 0, _e = 0, t;\n    }\n    for (ke(null), be.length = 0, _e = 0; Se.length; )\n      Se.pop()();\n    for (let t = 0; t < Te.length; t += 1) {\n      const n = Te[t];\n      We.has(n) || (We.add(n), n());\n    }\n    Te.length = 0;\n  } while (be.length);\n  for (; ft.length; )\n    ft.pop()();\n  $e = !1, We.clear(), ke(e);\n}\nfunction on(e) {\n  if (e.fragment !== null) {\n    e.update(), le(e.before_update);\n    const t = e.dirty;\n    e.dirty = [-1], e.fragment && e.fragment.p(e.ctx, t), e.after_update.forEach(et);\n  }\n}\nfunction sn(e) {\n  const t = [], n = [];\n  Te.forEach((o) => e.indexOf(o) === -1 ? t.push(o) : n.push(o)), n.forEach((o) => o()), Te = t;\n}\nconst Ge = /* @__PURE__ */ new Set();\nlet me;\nfunction se() {\n  me = {\n    r: 0,\n    c: [],\n    p: me\n    // parent group\n  };\n}\nfunction re() {\n  me.r || le(me.c), me = me.p;\n}\nfunction D(e, t) {\n  e && e.i && (Ge.delete(e), e.i(t));\n}\nfunction N(e, t, n, o) {\n  if (e && e.o) {\n    if (Ge.has(e))\n      return;\n    Ge.add(e), me.c.push(() => {\n      Ge.delete(e), o && (n && e.d(1), o());\n    }), e.o(t);\n  } else\n    o && o();\n}\nfunction pe(e) {\n  e && e.c();\n}\nfunction ue(e, t, n, o) {\n  const { fragment: i, after_update: s } = e.$$;\n  i && i.m(t, n), o || et(() => {\n    const r = e.$$.on_mount.map(Rt).filter(j);\n    e.$$.on_destroy ? e.$$.on_destroy.push(...r) : le(r), e.$$.on_mount = [];\n  }), s.forEach(et);\n}\nfunction de(e, t) {\n  const n = e.$$;\n  n.fragment !== null && (sn(n.after_update), le(n.on_destroy), n.fragment && n.fragment.d(t), n.on_destroy = n.fragment = null, n.ctx = []);\n}\nfunction rn(e, t) {\n  e.$$.dirty[0] === -1 && (be.push(e), nn(), e.$$.dirty.fill(0)), e.$$.dirty[t / 31 | 0] |= 1 << t % 31;\n}\nfunction te(e, t, n, o, i, s, r, l = [-1]) {\n  const a = Ie;\n  ke(e);\n  const d = e.$$ = {\n    fragment: null,\n    ctx: [],\n    // state\n    props: s,\n    update: G,\n    not_equal: i,\n    bound: lt(),\n    // lifecycle\n    on_mount: [],\n    on_destroy: [],\n    on_disconnect: [],\n    before_update: [],\n    after_update: [],\n    context: new Map(t.context || (a ? a.$$.context : [])),\n    // everything else\n    callbacks: lt(),\n    dirty: l,\n    skip_bound: !1,\n    root: t.target || a.$$.root\n  };\n  r && r(d.root);\n  let h = !1;\n  if (d.ctx = n ? n(e, t.props || {}, (c, f, ...m) => {\n    const g = m.length ? m[0] : f;\n    return d.ctx && i(d.ctx[c], d.ctx[c] = g) && (!d.skip_bound && d.bound[c] && d.bound[c](g), h && rn(e, c)), f;\n  }) : [], d.update(), h = !0, le(d.before_update), d.fragment = o ? o(d.ctx) : !1, t.target) {\n    if (t.hydrate) {\n      const c = $t(t.target);\n      d.fragment && d.fragment.l(c), c.forEach(O);\n    } else\n      d.fragment && d.fragment.c();\n    t.intro && D(e.$$.fragment), ue(e, t.target, t.anchor, t.customElement), Gt();\n  }\n  ke(a);\n}\nclass ne {\n  $destroy() {\n    de(this, 1), this.$destroy = G;\n  }\n  $on(t, n) {\n    if (!j(n))\n      return G;\n    const o = this.$$.callbacks[t] || (this.$$.callbacks[t] = []);\n    return o.push(n), () => {\n      const i = o.indexOf(n);\n      i !== -1 && o.splice(i, 1);\n    };\n  }\n  $set(t) {\n    this.$$set && !Jt(t) && (this.$$.skip_bound = !0, this.$$set(t), this.$$.skip_bound = !1);\n  }\n}\nvar z = /* @__PURE__ */ ((e) => (e.ELLIPSE = \"ELLIPSE\", e.POLYGON = \"POLYGON\", e.RECTANGLE = \"RECTANGLE\", e))(z || {});\nconst nt = {}, ot = (e, t) => nt[e] = t, ut = (e) => nt[e.type].area(e), ln = (e, t, n) => nt[e.type].intersects(e, t, n), He = (e) => {\n  let t = 1 / 0, n = 1 / 0, o = -1 / 0, i = -1 / 0;\n  return e.forEach(([s, r]) => {\n    t = Math.min(t, s), n = Math.min(n, r), o = Math.max(o, s), i = Math.max(i, r);\n  }), { minX: t, minY: n, maxX: o, maxY: i };\n}, an = {\n  area: (e) => Math.PI * e.geometry.rx * e.geometry.ry,\n  intersects: (e, t, n) => {\n    const { cx: o, cy: i, rx: s, ry: r } = e.geometry, l = 0, a = Math.cos(l), d = Math.sin(l), h = t - o, c = n - i, f = a * h + d * c, m = d * h - a * c;\n    return f * f / (s * s) + m * m / (r * r) <= 1;\n  }\n};\not(z.ELLIPSE, an);\nconst cn = {\n  area: (e) => {\n    const { points: t } = e.geometry;\n    let n = 0, o = t.length - 1;\n    for (let i = 0; i < t.length; i++)\n      n += (t[o][0] + t[i][0]) * (t[o][1] - t[i][1]), o = i;\n    return Math.abs(0.5 * n);\n  },\n  intersects: (e, t, n) => {\n    const { points: o } = e.geometry;\n    let i = !1;\n    for (let s = 0, r = o.length - 1; s < o.length; r = s++) {\n      const l = o[s][0], a = o[s][1], d = o[r][0], h = o[r][1];\n      a > n != h > n && t < (d - l) * (n - a) / (h - a) + l && (i = !i);\n    }\n    return i;\n  }\n};\not(z.POLYGON, cn);\nconst fn = {\n  area: (e) => e.geometry.w * e.geometry.h,\n  intersects: (e, t, n) => t >= e.geometry.x && t <= e.geometry.x + e.geometry.w && n >= e.geometry.y && n <= e.geometry.y + e.geometry.h\n};\not(z.RECTANGLE, fn);\nconst un = (e, t = !1) => {\n  const n = typeof e == \"string\" ? e : e.value, o = /^(xywh)=(pixel|percent)?:?(.+?),(.+?),(.+?),(.+)*/g, i = [...n.matchAll(o)][0], [s, r, l, a, d, h, c] = i;\n  if (r !== \"xywh\")\n    throw new Error(\"Unsupported MediaFragment: \" + n);\n  if (l && l !== \"pixel\")\n    throw new Error(`Unsupported MediaFragment unit: ${l}`);\n  const [f, m, g, p] = [a, d, h, c].map(parseFloat);\n  return {\n    type: z.RECTANGLE,\n    geometry: {\n      x: f,\n      y: m,\n      w: g,\n      h: p,\n      bounds: {\n        minX: f,\n        minY: t ? m - p : m,\n        maxX: f + g,\n        maxY: t ? m : m + p\n      }\n    }\n  };\n}, dn = (e) => {\n  const { x: t, y: n, w: o, h: i } = e;\n  return {\n    type: \"FragmentSelector\",\n    conformsTo: \"http://www.w3.org/TR/media-frags/\",\n    value: `xywh=pixel:${t},${n},${o},${i}`\n  };\n}, Ht = \"http://www.w3.org/2000/svg\", dt = (e) => {\n  const t = (o) => {\n    Array.from(o.attributes).forEach((i) => {\n      i.name.startsWith(\"on\") && o.removeAttribute(i.name);\n    });\n  }, n = e.getElementsByTagName(\"script\");\n  return Array.from(n).reverse().forEach((o) => o.parentNode.removeChild(o)), Array.from(e.querySelectorAll(\"*\")).forEach(t), e;\n}, hn = (e) => {\n  const o = new XMLSerializer().serializeToString(e.documentElement).replace(\"<svg>\", `<svg xmlns=\"${Ht}\">`);\n  return new DOMParser().parseFromString(o, \"image/svg+xml\").documentElement;\n}, mn = (e) => {\n  const n = new DOMParser().parseFromString(e, \"image/svg+xml\"), o = n.lookupPrefix(Ht), i = n.lookupNamespaceURI(null);\n  return o || i ? dt(n).firstChild : dt(hn(n)).firstChild;\n}, gn = (e) => {\n  const [t, n, o] = e.match(/(<polygon points=[\"|'])([^(\"|')]*)/) || [];\n  if (!o)\n    return;\n  const i = o.split(\" \").map((s) => s.split(\",\").map(parseFloat));\n  return {\n    type: z.POLYGON,\n    geometry: {\n      points: i,\n      bounds: He(i)\n    }\n  };\n}, pn = (e) => {\n  const t = mn(e), n = parseFloat(t.getAttribute(\"cx\")), o = parseFloat(t.getAttribute(\"cy\")), i = parseFloat(t.getAttribute(\"rx\")), s = parseFloat(t.getAttribute(\"ry\")), r = {\n    minX: n - i,\n    minY: o - s,\n    maxX: n + i,\n    maxY: o + s\n  };\n  return {\n    type: z.ELLIPSE,\n    geometry: {\n      cx: n,\n      cy: o,\n      rx: i,\n      ry: s,\n      bounds: r\n    }\n  };\n}, _n = (e) => {\n  const t = typeof e == \"string\" ? e : e.value;\n  if (t.includes(\"<polygon points=\"))\n    return gn(t);\n  if (t.includes(\"<ellipse \"))\n    return pn(t);\n}, yn = (e) => {\n  let t;\n  if (e.type === z.POLYGON) {\n    const n = e.geometry, { points: o } = n;\n    t = `<svg><polygon points=\"${o.map((i) => i.join(\",\")).join(\" \")}\" /></svg>`;\n  } else if (e.type === z.ELLIPSE) {\n    const n = e.geometry;\n    t = `<svg><ellipse cx=\"${n.cx}\" cy=\"${n.cy}\" rx=\"${n.rx}\" ry=\"${n.ry}\" /></svg>`;\n  }\n  if (t)\n    return { type: \"SvgSelector\", value: t };\n  throw `Unsupported shape type: ${e.type}`;\n};\nlet De;\nconst wn = new Uint8Array(16);\nfunction bn() {\n  if (!De && (De = typeof crypto < \"u\" && crypto.getRandomValues && crypto.getRandomValues.bind(crypto), !De))\n    throw new Error(\"crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported\");\n  return De(wn);\n}\nconst q = [];\nfor (let e = 0; e < 256; ++e)\n  q.push((e + 256).toString(16).slice(1));\nfunction En(e, t = 0) {\n  return q[e[t + 0]] + q[e[t + 1]] + q[e[t + 2]] + q[e[t + 3]] + \"-\" + q[e[t + 4]] + q[e[t + 5]] + \"-\" + q[e[t + 6]] + q[e[t + 7]] + \"-\" + q[e[t + 8]] + q[e[t + 9]] + \"-\" + q[e[t + 10]] + q[e[t + 11]] + q[e[t + 12]] + q[e[t + 13]] + q[e[t + 14]] + q[e[t + 15]];\n}\nconst An = typeof crypto < \"u\" && crypto.randomUUID && crypto.randomUUID.bind(crypto), ht = {\n  randomUUID: An\n};\nfunction it(e, t, n) {\n  if (ht.randomUUID && !t && !e)\n    return ht.randomUUID();\n  e = e || {};\n  const o = e.random || (e.rng || bn)();\n  if (o[6] = o[6] & 15 | 64, o[8] = o[8] & 63 | 128, t) {\n    n = n || 0;\n    for (let i = 0; i < 16; ++i)\n      t[n + i] = o[i];\n    return t;\n  }\n  return En(o);\n}\nvar mt = Object.prototype.hasOwnProperty;\nfunction ge(e, t) {\n  var n, o;\n  if (e === t)\n    return !0;\n  if (e && t && (n = e.constructor) === t.constructor) {\n    if (n === Date)\n      return e.getTime() === t.getTime();\n    if (n === RegExp)\n      return e.toString() === t.toString();\n    if (n === Array) {\n      if ((o = e.length) === t.length)\n        for (; o-- && ge(e[o], t[o]); )\n          ;\n      return o === -1;\n    }\n    if (!n || typeof e == \"object\") {\n      o = 0;\n      for (n in e)\n        if (mt.call(e, n) && ++o && !mt.call(t, n) || !(n in t) || !ge(e[n], t[n]))\n          return !1;\n      return Object.keys(t).length === o;\n    }\n  }\n  return e !== e && t !== t;\n}\nconst ye = [];\nfunction Fe(e, t = G) {\n  let n;\n  const o = /* @__PURE__ */ new Set();\n  function i(l) {\n    if (K(e, l) && (e = l, n)) {\n      const a = !ye.length;\n      for (const d of o)\n        d[1](), ye.push(d, e);\n      if (a) {\n        for (let d = 0; d < ye.length; d += 2)\n          ye[d][0](ye[d + 1]);\n        ye.length = 0;\n      }\n    }\n  }\n  function s(l) {\n    i(l(e));\n  }\n  function r(l, a = G) {\n    const d = [l, a];\n    return o.add(d), o.size === 1 && (n = t(i) || G), l(e), () => {\n      o.delete(d), o.size === 0 && n && (n(), n = null);\n    };\n  }\n  return { set: i, update: s, subscribe: r };\n}\nconst Tn = (e) => {\n  const { subscribe: t, set: n } = Fe(null);\n  let o = null;\n  return t((i) => o = i), e.observe(({ changes: i }) => {\n    if (o) {\n      i.deleted.some((l) => l.id === o) && n(null);\n      const r = i.updated.find(({ oldValue: l }) => l.id === o);\n      r && n(r.newValue.id);\n    }\n  }), {\n    get current() {\n      return o;\n    },\n    subscribe: t,\n    set: n\n  };\n};\nvar Ft = /* @__PURE__ */ ((e) => (e.EDIT = \"EDIT\", e.SELECT = \"SELECT\", e.NONE = \"NONE\", e))(Ft || {});\nconst Je = { selected: [] }, Sn = (e, t = \"EDIT\") => {\n  const { subscribe: n, set: o } = Fe(Je);\n  let i = Je;\n  n((c) => i = c);\n  const s = () => o(Je), r = () => {\n    var c;\n    return ((c = i.selected) == null ? void 0 : c.length) === 0;\n  }, l = (c) => {\n    if (i.selected.length === 0)\n      return !1;\n    const f = typeof c == \"string\" ? c : c.id;\n    return i.selected.some((m) => m.id === f);\n  }, a = (c, f) => {\n    const m = e.getAnnotation(c);\n    if (m) {\n      const g = Mn(m, t);\n      o(g === \"EDIT\" ? { selected: [{ id: c, editable: !0 }], pointerEvent: f } : g === \"SELECT\" ? { selected: [{ id: c }], pointerEvent: f } : { selected: [], pointerEvent: f });\n    } else\n      console.warn(\"Invalid selection: \" + c);\n  }, d = (c, f = !0) => {\n    const m = Array.isArray(c) ? c : [c], g = m.map((p) => e.getAnnotation(p)).filter((p) => p);\n    o({ selected: g.map(({ id: p }) => ({ id: p, editable: f })) }), g.length !== m.length && console.warn(\"Invalid selection\", c);\n  }, h = (c) => {\n    if (i.selected.length === 0)\n      return !1;\n    const { selected: f } = i;\n    f.filter(({ id: g }) => c.includes(g)).length > 0 && o({ selected: f.filter(({ id: g }) => !c.includes(g)) });\n  };\n  return e.observe(({ changes: c }) => h(c.deleted.map((f) => f.id))), {\n    clear: s,\n    clickSelect: a,\n    get selected() {\n      return i ? [...i.selected] : null;\n    },\n    get pointerEvent() {\n      return i ? i.pointerEvent : null;\n    },\n    isEmpty: r,\n    isSelected: l,\n    setSelected: d,\n    subscribe: n\n  };\n}, Mn = (e, t) => typeof t == \"function\" ? t(e) || \"EDIT\" : t || \"EDIT\", ui = (e) => {\n  const { creator: t, updatedBy: n } = e.target, o = e.bodies.reduce((i, s) => [...i, s.creator, s.updatedBy], []);\n  return [\n    t,\n    n,\n    ...o\n  ].filter((i) => i);\n}, di = (e, t, n, o) => ({\n  id: it(),\n  annotation: e.id,\n  created: n || /* @__PURE__ */ new Date(),\n  creator: o,\n  ...t\n}), Ln = (e, t) => {\n  const n = new Set(e.bodies.map((o) => o.id));\n  return t.bodies.filter((o) => !n.has(o.id));\n}, On = (e, t) => {\n  const n = new Set(t.bodies.map((o) => o.id));\n  return e.bodies.filter((o) => !n.has(o.id));\n}, vn = (e, t) => t.bodies.map((n) => {\n  const o = e.bodies.find((i) => i.id === n.id);\n  return { newBody: n, oldBody: o && !ge(o, n) ? o : void 0 };\n}).filter(({ oldBody: n }) => n), Bn = (e, t) => !ge(e.target, t.target), kn = (e, t) => ({\n  oldValue: e,\n  newValue: t,\n  bodiesCreated: Ln(e, t),\n  bodiesDeleted: On(e, t),\n  bodiesUpdated: vn(e, t),\n  targetUpdated: Bn(e, t) ? { oldTarget: e.target, newTarget: t.target } : void 0\n});\nvar F = /* @__PURE__ */ ((e) => (e.LOCAL = \"LOCAL\", e.REMOTE = \"REMOTE\", e))(F || {});\nconst In = (e, t) => {\n  var s, r;\n  const { changes: n, origin: o } = t;\n  if (!(!e.options.origin || e.options.origin === o))\n    return !1;\n  if (e.options.ignore) {\n    const { ignore: l } = e.options, a = (h) => (h == null ? void 0 : h.length) > 0;\n    if (!(a(n.created) || a(n.deleted))) {\n      const h = (s = n.updated) == null ? void 0 : s.some((f) => a(f.bodiesCreated) || a(f.bodiesDeleted) || a(f.bodiesUpdated)), c = (r = n.updated) == null ? void 0 : r.some((f) => f.targetUpdated);\n      if (l === \"BODY_ONLY\" && h && !c || l === \"TARGET_ONLY\" && c && !h)\n        return !1;\n    }\n  }\n  if (e.options.annotations) {\n    const l = /* @__PURE__ */ new Set([\n      ...n.created.map((d) => d.id),\n      ...n.deleted.map((d) => d.id),\n      ...n.updated.map(({ oldValue: d }) => d.id)\n    ]);\n    return !!(Array.isArray(e.options.annotations) ? e.options.annotations : [e.options.annotations]).find((d) => l.has(d));\n  } else\n    return !0;\n}, Cn = (e) => e.id !== void 0, Pn = () => {\n  const e = /* @__PURE__ */ new Map(), t = /* @__PURE__ */ new Map(), n = [], o = (_, w = {}) => n.push({ onChange: _, options: w }), i = (_) => {\n    const w = n.findIndex((A) => A.onChange == _);\n    w > -1 && n.splice(w, 1);\n  }, s = (_, w) => {\n    const A = {\n      origin: _,\n      changes: {\n        created: w.created || [],\n        updated: w.updated || [],\n        deleted: w.deleted || []\n      },\n      state: [...e.values()]\n    };\n    n.forEach((S) => {\n      In(S, A) && S.onChange(A);\n    });\n  }, r = (_, w = F.LOCAL) => {\n    if (e.get(_.id))\n      throw Error(`Cannot add annotation ${_.id} - exists already`);\n    e.set(_.id, _), _.bodies.forEach((S) => t.set(S.id, _.id)), s(w, { created: [_] });\n  }, l = (_, w = F.LOCAL, A = F.LOCAL) => {\n    const S = Cn(w) ? A : w, B = typeof _ == \"string\" ? w : _, P = typeof _ == \"string\" ? _ : _.id, Q = e.get(P);\n    if (Q) {\n      const ce = kn(Q, B);\n      P === B.id ? e.set(P, B) : (e.delete(P), e.set(B.id, B)), Q.bodies.forEach((oe) => t.delete(oe.id)), B.bodies.forEach((oe) => t.set(oe.id, B.id)), s(S, { updated: [ce] });\n    } else\n      throw Error(`Cannot update annotation ${P} - does not exist`);\n  }, a = (_, w = F.LOCAL) => {\n    const A = e.get(_.annotation);\n    if (A) {\n      const S = {\n        ...A,\n        bodies: [...A.bodies, _]\n      };\n      e.set(A.id, S), t.set(_.id, S.id), s(w, { updated: [{\n        oldValue: A,\n        newValue: S,\n        bodiesCreated: [_]\n      }] });\n    } else\n      console.warn(`Attempt to add body to missing annotation: ${_.annotation}`);\n  }, d = () => [...e.values()], h = (_ = F.LOCAL) => {\n    const w = [...e.values()];\n    e.clear(), t.clear(), s(_, { deleted: w });\n  }, c = (_, w = !0, A = F.LOCAL) => {\n    if (w) {\n      const S = [...e.values()];\n      e.clear(), t.clear(), _.forEach((B) => {\n        e.set(B.id, B), B.bodies.forEach((P) => t.set(P.id, B.id));\n      }), s(A, { created: _, deleted: S });\n    } else {\n      const S = _.reduce((B, P) => {\n        const Q = e.get(P.id);\n        return Q ? [...B, Q] : B;\n      }, []);\n      if (S.length > 0)\n        throw Error(`Bulk insert would overwrite the following annotations: ${S.map((B) => B.id).join(\", \")}`);\n      _.forEach((B) => {\n        e.set(B.id, B), B.bodies.forEach((P) => t.set(P.id, B.id));\n      }), s(A, { created: _ });\n    }\n  }, f = (_) => {\n    const w = typeof _ == \"string\" ? _ : _.id, A = e.get(w);\n    if (A)\n      return e.delete(w), A.bodies.forEach((S) => t.delete(S.id)), A;\n    console.warn(`Attempt to delete missing annotation: ${w}`);\n  }, m = (_, w = F.LOCAL) => {\n    const A = f(_);\n    A && s(w, { deleted: [A] });\n  }, g = (_, w = F.LOCAL) => {\n    const A = _.reduce((S, B) => {\n      const P = f(B);\n      return P ? [...S, P] : S;\n    }, []);\n    A.length > 0 && s(w, { deleted: A });\n  }, p = (_, w = F.LOCAL) => {\n    const A = e.get(_.annotation);\n    if (A) {\n      const S = A.bodies.find((B) => B.id === _.id);\n      if (S) {\n        t.delete(S.id);\n        const B = {\n          ...A,\n          bodies: A.bodies.filter((Q) => Q.id !== _.id)\n        };\n        e.set(A.id, B), s(w, { updated: [{\n          oldValue: A,\n          newValue: B,\n          bodiesDeleted: [S]\n        }] });\n      } else\n        console.warn(`Attempt to delete missing body ${_.id} from annotation ${_.annotation}`);\n    } else\n      console.warn(`Attempt to delete body from missing annotation ${_.annotation}`);\n  }, y = (_) => {\n    const w = e.get(_);\n    return w ? { ...w } : void 0;\n  }, L = (_) => {\n    const w = t.get(_);\n    if (w) {\n      const S = y(w).bodies.find((B) => B.id === _);\n      if (S)\n        return S;\n      console.error(`Store integrity error: body ${_} in index, but not in annotation`);\n    } else\n      console.warn(`Attempt to retrieve missing body: ${_}`);\n  }, E = (_, w) => {\n    if (_.annotation !== w.annotation)\n      throw \"Annotation integrity violation: annotation ID must be the same when updating bodies\";\n    const A = e.get(_.annotation);\n    if (A) {\n      const S = A.bodies.find((P) => P.id === _.id), B = {\n        ...A,\n        bodies: A.bodies.map((P) => P.id === S.id ? w : P)\n      };\n      return e.set(A.id, B), S.id !== w.id && (t.delete(S.id), t.set(w.id, B.id)), {\n        oldValue: A,\n        newValue: B,\n        bodiesUpdated: [{ oldBody: S, newBody: w }]\n      };\n    } else\n      console.warn(`Attempt to add body to missing annotation ${_.annotation}`);\n  }, k = (_, w, A = F.LOCAL) => {\n    const S = E(_, w);\n    s(A, { updated: [S] });\n  }, b = (_, w = F.LOCAL) => {\n    const A = _.map((S) => E({ id: S.id, annotation: S.annotation }, S));\n    s(w, { updated: A });\n  }, Y = (_) => {\n    const w = e.get(_.annotation);\n    if (w) {\n      const A = {\n        ...w,\n        target: {\n          ...w.target,\n          ..._\n        }\n      };\n      return e.set(w.id, A), {\n        oldValue: w,\n        newValue: A,\n        targetUpdated: {\n          oldTarget: w.target,\n          newTarget: _\n        }\n      };\n    } else\n      console.warn(`Attempt to update target on missing annotation: ${_.annotation}`);\n  };\n  return {\n    addAnnotation: r,\n    addBody: a,\n    all: d,\n    bulkAddAnnotation: c,\n    bulkDeleteAnnotation: g,\n    bulkUpdateBodies: b,\n    bulkUpdateTargets: (_, w = F.LOCAL) => {\n      const A = _.map(Y).filter((S) => S);\n      A.length > 0 && s(w, { updated: A });\n    },\n    clear: h,\n    deleteAnnotation: m,\n    deleteBody: p,\n    getAnnotation: y,\n    getBody: L,\n    observe: o,\n    unobserve: i,\n    updateAnnotation: l,\n    updateBody: k,\n    updateTarget: (_, w = F.LOCAL) => {\n      const A = Y(_);\n      A && s(w, { updated: [A] });\n    }\n  };\n}, Yn = (e) => ({\n  ...e,\n  subscribe: (n) => {\n    const o = (i) => n(i.state);\n    return e.observe(o), n(e.all()), () => e.unobserve(o);\n  }\n}), Rn = () => {\n  const { subscribe: e, set: t } = Fe([]);\n  return {\n    subscribe: e,\n    set: t\n  };\n}, Xn = (e, t, n, o, i, s) => {\n  const r = /* @__PURE__ */ new Map();\n  let l = [], a, d;\n  const h = (g, p) => {\n    r.has(g) ? r.get(g).push(p) : r.set(g, [p]);\n  }, c = (g, p) => {\n    const y = r.get(g);\n    y && y.indexOf(p) > 0 && y.splice(y.indexOf(p), 1);\n  }, f = (g, p, y) => {\n    r.has(g) && setTimeout(() => {\n      r.get(g).forEach((L) => {\n        if (i) {\n          const E = Array.isArray(p) ? p.map((b) => i.serialize(b)) : i.serialize(p), k = y ? y instanceof PointerEvent ? y : i.serialize(y) : void 0;\n          L(E, k);\n        } else\n          L(p, y);\n      });\n    }, 1);\n  }, m = () => {\n    const { selected: g } = t, p = g.map(({ id: y }) => e.getAnnotation(y));\n    p.forEach((y) => {\n      const L = l.find((E) => E.id === y.id);\n      (!L || !ge(L, y)) && f(\"updateAnnotation\", y, L);\n    }), l = l.map((y) => {\n      const L = p.find(({ id: E }) => E === y.id);\n      return L || y;\n    });\n  };\n  return t.subscribe(({ selected: g }) => {\n    if (!(l.length === 0 && g.length === 0)) {\n      if (l.length === 0 && g.length > 0)\n        l = g.map(({ id: p }) => e.getAnnotation(p));\n      else if (l.length > 0 && g.length === 0)\n        l.forEach((p) => {\n          const y = e.getAnnotation(p.id);\n          y && !ge(y, p) && f(\"updateAnnotation\", y, p);\n        }), l = [];\n      else {\n        const p = new Set(l.map((E) => E.id)), y = new Set(g.map(({ id: E }) => E));\n        l.filter((E) => !y.has(E.id)).forEach((E) => {\n          const k = e.getAnnotation(E.id);\n          k && !ge(k, E) && f(\"updateAnnotation\", k, E);\n        }), l = [\n          // Remove annotations that were deselected\n          ...l.filter((E) => y.has(E.id)),\n          // Add editable annotations that were selected\n          ...g.filter(({ id: E }) => !p.has(E)).map(({ id: E }) => e.getAnnotation(E))\n        ];\n      }\n      f(\"selectionChanged\", l);\n    }\n  }), n.subscribe((g) => {\n    !a && g ? f(\"mouseEnterAnnotation\", e.getAnnotation(g)) : a && !g ? f(\"mouseLeaveAnnotation\", e.getAnnotation(a)) : a && g && (f(\"mouseLeaveAnnotation\", e.getAnnotation(a)), f(\"mouseEnterAnnotation\", e.getAnnotation(g))), a = g;\n  }), o == null || o.subscribe((g) => f(\"viewportIntersect\", g.map(e.getAnnotation))), e.observe((g) => {\n    s && (d && clearTimeout(d), d = setTimeout(m, 1e3));\n    const { created: p, deleted: y } = g.changes;\n    p.forEach((E) => f(\"createAnnotation\", E)), y.forEach((E) => f(\"deleteAnnotation\", E)), g.changes.updated.filter((E) => [\n      ...E.bodiesCreated || [],\n      ...E.bodiesDeleted || [],\n      ...E.bodiesUpdated || []\n    ].length > 0).forEach(({ oldValue: E, newValue: k }) => {\n      const b = l.find((Y) => Y.id === E.id) || E;\n      l = l.map((Y) => Y.id === E.id ? k : Y), f(\"updateAnnotation\", k, b);\n    });\n  }, { origin: F.LOCAL }), e.observe((g) => {\n    if (l) {\n      const p = new Set(l.map((L) => L.id)), y = g.changes.updated.filter(({ newValue: L }) => p.has(L.id)).map(({ newValue: L }) => L);\n      y.length > 0 && (l = l.map((L) => {\n        const E = y.find((k) => k.id === L.id);\n        return E || L;\n      }));\n    }\n  }, { origin: F.REMOTE }), { on: h, off: c, emit: f };\n}, hi = (e) => (t) => t.map((n) => e.serialize(n)), Dn = (e) => (t) => t.reduce((n, o) => {\n  const { parsed: i, error: s } = e.parse(o);\n  return s ? {\n    parsed: n.parsed,\n    failed: [...n.failed, o]\n  } : {\n    parsed: [...n.parsed, i],\n    failed: n.failed\n  };\n}, { parsed: [], failed: [] }), Nn = (e, t) => {\n  const n = (h) => {\n    if (t) {\n      const { parsed: c, error: f } = t.parse(h);\n      c ? e.addAnnotation(c, F.REMOTE) : console.error(f);\n    } else\n      e.addAnnotation(h, F.REMOTE);\n  }, o = () => e.clear(), i = (h) => {\n    const c = e.getAnnotation(h);\n    return t && c ? t.serialize(c) : c;\n  }, s = () => t ? e.all().map(t.serialize) : e.all(), r = (h) => fetch(h).then((c) => c.json()).then((c) => (a(c), c)), l = (h) => {\n    if (typeof h == \"string\") {\n      const c = e.getAnnotation(h);\n      return e.deleteAnnotation(h), t ? t.serialize(c) : c;\n    } else {\n      const c = t ? t.parse(h).parsed : h;\n      return e.deleteAnnotation(c), h;\n    }\n  }, a = (h) => {\n    if (t) {\n      const { parsed: c, failed: f } = Dn(t)(h);\n      f.length > 0 && console.warn(`Discarded ${f.length} invalid annotations`, f), e.bulkAddAnnotation(c, !0, F.REMOTE);\n    } else\n      e.bulkAddAnnotation(h, !0, F.REMOTE);\n  };\n  return {\n    addAnnotation: n,\n    clearAnnotations: o,\n    getAnnotationById: i,\n    getAnnotations: s,\n    loadAnnotations: r,\n    removeAnnotation: l,\n    setAnnotations: a,\n    updateAnnotation: (h) => {\n      if (t) {\n        const c = t.parse(h).parsed, f = t.serialize(e.getAnnotation(c.id));\n        return e.updateAnnotation(c), f;\n      } else {\n        const c = e.getAnnotation(h.id);\n        return e.updateAnnotation(h), c;\n      }\n    }\n  };\n};\nlet Un = (e) => crypto.getRandomValues(new Uint8Array(e)), Gn = (e, t, n) => {\n  let o = (2 << Math.log(e.length - 1) / Math.LN2) - 1, i = -~(1.6 * o * t / e.length);\n  return (s = t) => {\n    let r = \"\";\n    for (; ; ) {\n      let l = n(i), a = i;\n      for (; a--; )\n        if (r += e[l[a] & o] || \"\", r.length === s)\n          return r;\n    }\n  };\n}, Hn = (e, t = 21) => Gn(e, t, Un), Fn = (e = 21) => crypto.getRandomValues(new Uint8Array(e)).reduce((t, n) => (n &= 63, n < 36 ? t += n.toString(36) : n < 62 ? t += (n - 26).toString(36).toUpperCase() : n > 62 ? t += \"-\" : t += \"_\", t), \"\");\nconst zn = () => ({ isGuest: !0, id: Hn(\"1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_\", 20)() }), jn = (e) => {\n  const t = JSON.stringify(e);\n  let n = 0;\n  for (let o = 0, i = t.length; o < i; o++) {\n    let s = t.charCodeAt(o);\n    n = (n << 5) - n + s, n |= 0;\n  }\n  return `${n}`;\n}, Vn = (e, t) => (Array.isArray(e) ? e : [e]).map((n) => {\n  const { id: o, type: i, purpose: s, value: r, created: l, creator: a, ...d } = n;\n  return {\n    id: o || `temp-${jn(n)}`,\n    annotation: t,\n    type: i,\n    purpose: s,\n    value: r,\n    created: l,\n    creator: a ? typeof a == \"object\" ? { ...a } : a : void 0,\n    ...d\n  };\n}), qn = (e) => e.map((t) => {\n  var o;\n  const n = { ...t };\n  return delete n.annotation, (o = n.id) != null && o.startsWith(\"temp-\") && delete n.id, n;\n}), Wn = [\n  \"#ff7c00\",\n  // orange\n  \"#1ac938\",\n  // green\n  \"#e8000b\",\n  // red\n  \"#8b2be2\",\n  // purple\n  \"#9f4800\",\n  // brown\n  \"#f14cc1\",\n  // pink\n  \"#ffc400\",\n  // khaki\n  \"#00d7ff\",\n  // cyan\n  \"#023eff\"\n  // blue\n], Jn = () => {\n  const e = [...Wn];\n  return { assignRandomColor: () => {\n    const o = Math.floor(Math.random() * e.length), i = e[o];\n    return e.splice(o, 1), i;\n  }, releaseColor: (o) => e.push(o) };\n}, Qn = () => {\n  const e = Jn();\n  return { addUser: (o, i) => {\n    const s = e.assignRandomColor();\n    return {\n      label: i.name || i.id,\n      avatar: i.avatar,\n      color: s\n    };\n  }, removeUser: (o) => e.releaseColor(o.appearance.color) };\n};\nlet Zn = () => ({\n  emit(e, ...t) {\n    let n = this.events[e] || [];\n    for (let o = 0, i = n.length; o < i; o++)\n      n[o](...t);\n  },\n  events: {},\n  on(e, t) {\n    var n;\n    return (n = this.events[e]) != null && n.push(t) || (this.events[e] = [t]), () => {\n      var o;\n      this.events[e] = (o = this.events[e]) == null ? void 0 : o.filter((i) => t !== i);\n    };\n  }\n});\nconst Kn = (e, t) => e.every((n) => e.includes(n)) && t.every((n) => e.includes(n)), mi = Fn(), gi = (e = Qn()) => {\n  const t = Zn(), n = /* @__PURE__ */ new Map(), o = /* @__PURE__ */ new Map(), i = (c, f) => {\n    if (n.has(c)) {\n      console.warn(\"Attempt to add user that is already present\", c, f);\n      return;\n    }\n    const m = e.addUser(c, f);\n    n.set(c, {\n      ...f,\n      presenceKey: c,\n      appearance: m\n    });\n  }, s = (c) => {\n    const f = n.get(c);\n    if (!f) {\n      console.warn(\"Attempt to remove user that is not present\", c);\n      return;\n    }\n    e.removeUser(f), n.delete(c);\n  }, r = (c) => {\n    const f = new Set(c.map((p) => p.presenceKey)), m = c.filter(({ presenceKey: p }) => !n.has(p)), g = Array.from(n.values()).filter((p) => !f.has(p.presenceKey));\n    m.forEach(({ presenceKey: p, user: y }) => i(p, y)), g.forEach((p) => {\n      const { presenceKey: y } = p;\n      o.has(y) && t.emit(\"selectionChange\", p, null), s(y);\n    }), (m.length > 0 || g.length > 0) && t.emit(\"presence\", d());\n  }, l = (c, f) => {\n    const m = n.get(c);\n    if (!m) {\n      console.warn(\"Activity notification from user that is not present\");\n      return;\n    }\n    const g = o.get(c);\n    (!g || !Kn(g, f)) && (o.set(c, f), t.emit(\"selectionChange\", m, f));\n  }, a = (c, f) => {\n    const m = n.get(c);\n    if (!m) {\n      console.warn(\"Selection change for user that is not present\", c);\n      return;\n    }\n    f ? o.set(c, f) : o.delete(c), t.emit(\"selectionChange\", m, f);\n  }, d = () => [...Array.from(n.values())];\n  return {\n    getPresentUsers: d,\n    notifyActivity: l,\n    on: (c, f) => t.on(c, f),\n    syncUsers: r,\n    updateSelection: a\n  };\n}, pi = (e, t = !1) => ({ parse: (i) => xn(i, t), serialize: (i) => $n(i, e) }), xn = (e, t = !1) => {\n  const n = e.id || it(), o = Vn(e.body, n), i = Array.isArray(e.target) ? e.target[0] : e.target, s = Array.isArray(i.selector) ? i.selector[0] : i.selector, r = s.type === \"FragmentSelector\" ? un(s, t) : s.type === \"SvgSelector\" ? _n(s) : void 0;\n  return r ? {\n    parsed: {\n      ...e,\n      id: n,\n      bodies: o,\n      target: {\n        annotation: n,\n        selector: r\n      }\n    }\n  } : {\n    error: Error(`Unknown selector type: ${r.type}`)\n  };\n}, $n = (e, t) => {\n  const n = e.target.selector, o = n.type == z.RECTANGLE ? dn(n.geometry) : yn(n);\n  return {\n    ...e,\n    \"@context\": \"http://www.w3.org/ns/anno.jsonld\",\n    id: e.id,\n    type: \"Annotation\",\n    body: qn(e.bodies),\n    target: {\n      source: t,\n      selector: o\n    }\n  };\n};\nfunction gt(e, t, n) {\n  const o = e.slice();\n  return o[11] = t[n], o[13] = n, o;\n}\nfunction pt(e) {\n  let t, n, o, i, s;\n  return {\n    c() {\n      t = R(\"rect\"), u(t, \"class\", \"a9s-corner-handle\"), u(t, \"x\", n = /*point*/\n      e[11][0] - /*handleSize*/\n      e[3] / 2), u(t, \"y\", o = /*point*/\n      e[11][1] - /*handleSize*/\n      e[3] / 2), u(\n        t,\n        \"height\",\n        /*handleSize*/\n        e[3]\n      ), u(\n        t,\n        \"width\",\n        /*handleSize*/\n        e[3]\n      );\n    },\n    m(r, l) {\n      v(r, t, l), i || (s = W(t, \"pointerdown\", function() {\n        j(\n          /*grab*/\n          e[10](M(\n            /*idx*/\n            e[13]\n          ))\n        ) && e[10](M(\n          /*idx*/\n          e[13]\n        )).apply(this, arguments);\n      }), i = !0);\n    },\n    p(r, l) {\n      e = r, l & /*geom, handleSize*/\n      24 && n !== (n = /*point*/\n      e[11][0] - /*handleSize*/\n      e[3] / 2) && u(t, \"x\", n), l & /*geom, handleSize*/\n      24 && o !== (o = /*point*/\n      e[11][1] - /*handleSize*/\n      e[3] / 2) && u(t, \"y\", o), l & /*handleSize*/\n      8 && u(\n        t,\n        \"height\",\n        /*handleSize*/\n        e[3]\n      ), l & /*handleSize*/\n      8 && u(\n        t,\n        \"width\",\n        /*handleSize*/\n        e[3]\n      );\n    },\n    d(r) {\n      r && O(t), i = !1, s();\n    }\n  };\n}\nfunction eo(e) {\n  let t, n, o, i, s, r, l, a, d, h, c = (\n    /*geom*/\n    e[4].points\n  ), f = [];\n  for (let m = 0; m < c.length; m += 1)\n    f[m] = pt(gt(e, c, m));\n  return {\n    c() {\n      t = R(\"polygon\"), i = ee(), s = R(\"polygon\"), l = ee();\n      for (let m = 0; m < f.length; m += 1)\n        f[m].c();\n      a = ae(), u(t, \"class\", \"a9s-outer\"), u(t, \"style\", n = /*computedStyle*/\n      e[1] ? \"display:none;\" : void 0), u(t, \"points\", o = /*geom*/\n      e[4].points.map(_t).join(\" \")), u(s, \"class\", \"a9s-inner a9s-shape-handle\"), u(\n        s,\n        \"style\",\n        /*computedStyle*/\n        e[1]\n      ), u(s, \"points\", r = /*geom*/\n      e[4].points.map(yt).join(\" \"));\n    },\n    m(m, g) {\n      v(m, t, g), v(m, i, g), v(m, s, g), v(m, l, g);\n      for (let p = 0; p < f.length; p += 1)\n        f[p] && f[p].m(m, g);\n      v(m, a, g), d || (h = [\n        W(t, \"pointerdown\", function() {\n          j(\n            /*grab*/\n            e[10](M.SHAPE)\n          ) && e[10](M.SHAPE).apply(this, arguments);\n        }),\n        W(s, \"pointerdown\", function() {\n          j(\n            /*grab*/\n            e[10](M.SHAPE)\n          ) && e[10](M.SHAPE).apply(this, arguments);\n        })\n      ], d = !0);\n    },\n    p(m, g) {\n      if (e = m, g & /*computedStyle*/\n      2 && n !== (n = /*computedStyle*/\n      e[1] ? \"display:none;\" : void 0) && u(t, \"style\", n), g & /*geom*/\n      16 && o !== (o = /*geom*/\n      e[4].points.map(_t).join(\" \")) && u(t, \"points\", o), g & /*computedStyle*/\n      2 && u(\n        s,\n        \"style\",\n        /*computedStyle*/\n        e[1]\n      ), g & /*geom*/\n      16 && r !== (r = /*geom*/\n      e[4].points.map(yt).join(\" \")) && u(s, \"points\", r), g & /*geom, handleSize, grab, Handle*/\n      1048) {\n        c = /*geom*/\n        e[4].points;\n        let p;\n        for (p = 0; p < c.length; p += 1) {\n          const y = gt(e, c, p);\n          f[p] ? f[p].p(y, g) : (f[p] = pt(y), f[p].c(), f[p].m(a.parentNode, a));\n        }\n        for (; p < f.length; p += 1)\n          f[p].d(1);\n        f.length = c.length;\n      }\n    },\n    d(m) {\n      m && O(t), m && O(i), m && O(s), m && O(l), tt(f, m), m && O(a), d = !1, le(h);\n    }\n  };\n}\nfunction to(e) {\n  let t, n;\n  return t = new jt({\n    props: {\n      shape: (\n        /*shape*/\n        e[0]\n      ),\n      transform: (\n        /*transform*/\n        e[2]\n      ),\n      editor: (\n        /*editor*/\n        e[5]\n      ),\n      $$slots: {\n        default: [\n          eo,\n          ({ grab: o }) => ({ 10: o }),\n          ({ grab: o }) => o ? 1024 : 0\n        ]\n      },\n      $$scope: { ctx: e }\n    }\n  }), t.$on(\n    \"change\",\n    /*change_handler*/\n    e[7]\n  ), t.$on(\n    \"grab\",\n    /*grab_handler*/\n    e[8]\n  ), t.$on(\n    \"release\",\n    /*release_handler*/\n    e[9]\n  ), {\n    c() {\n      pe(t.$$.fragment);\n    },\n    m(o, i) {\n      ue(t, o, i), n = !0;\n    },\n    p(o, [i]) {\n      const s = {};\n      i & /*shape*/\n      1 && (s.shape = /*shape*/\n      o[0]), i & /*transform*/\n      4 && (s.transform = /*transform*/\n      o[2]), i & /*$$scope, geom, handleSize, grab, computedStyle*/\n      17434 && (s.$$scope = { dirty: i, ctx: o }), t.$set(s);\n    },\n    i(o) {\n      n || (D(t.$$.fragment, o), n = !0);\n    },\n    o(o) {\n      N(t.$$.fragment, o), n = !1;\n    },\n    d(o) {\n      de(t, o);\n    }\n  };\n}\nconst _t = (e) => e.join(\",\"), yt = (e) => e.join(\",\");\nfunction no(e, t, n) {\n  let o, i, { shape: s } = t, { computedStyle: r = void 0 } = t, { transform: l } = t, { viewportScale: a = 1 } = t;\n  const d = (m, g, p) => {\n    let y;\n    g === M.SHAPE ? y = m.geometry.points.map(([E, k]) => [E + p[0], k + p[1]]) : y = m.geometry.points.map(([E, k], b) => g === M(b) ? [E + p[0], k + p[1]] : [E, k]);\n    const L = He(y);\n    return { ...m, geometry: { points: y, bounds: L } };\n  };\n  function h(m) {\n    Ae.call(this, e, m);\n  }\n  function c(m) {\n    Ae.call(this, e, m);\n  }\n  function f(m) {\n    Ae.call(this, e, m);\n  }\n  return e.$$set = (m) => {\n    \"shape\" in m && n(0, s = m.shape), \"computedStyle\" in m && n(1, r = m.computedStyle), \"transform\" in m && n(2, l = m.transform), \"viewportScale\" in m && n(6, a = m.viewportScale);\n  }, e.$$.update = () => {\n    e.$$.dirty & /*shape*/\n    1 && n(4, o = s.geometry), e.$$.dirty & /*viewportScale*/\n    64 && n(3, i = 10 / a);\n  }, [\n    s,\n    r,\n    l,\n    i,\n    o,\n    d,\n    a,\n    h,\n    c,\n    f\n  ];\n}\nclass oo extends ne {\n  constructor(t) {\n    super(), te(this, t, no, to, K, {\n      shape: 0,\n      computedStyle: 1,\n      transform: 2,\n      viewportScale: 6\n    });\n  }\n}\nfunction io(e) {\n  let t, n, o, i, s, r, l, a, d, h, c, f, m, g, p, y, L, E, k, b, Y, U, X, _, w, A, S, B, P, Q, ce, oe, Le, Z, I, J, H, V, ie, he, je, x, Pe, Ye, Ve, $, Re, Xe, qe, rt;\n  return {\n    c() {\n      t = R(\"rect\"), l = ee(), a = R(\"rect\"), m = ee(), g = R(\"rect\"), E = ee(), k = R(\"rect\"), X = ee(), _ = R(\"rect\"), B = ee(), P = R(\"rect\"), Le = ee(), Z = R(\"rect\"), H = ee(), V = R(\"rect\"), je = ee(), x = R(\"rect\"), Ve = ee(), $ = R(\"rect\"), u(t, \"class\", \"a9s-outer\"), u(t, \"style\", n = /*computedStyle*/\n      e[1] ? \"display:none;\" : void 0), u(t, \"x\", o = /*geom*/\n      e[4].x), u(t, \"y\", i = /*geom*/\n      e[4].y), u(t, \"width\", s = /*geom*/\n      e[4].w), u(t, \"height\", r = /*geom*/\n      e[4].h), u(a, \"class\", \"a9s-inner a9s-shape-handle\"), u(\n        a,\n        \"style\",\n        /*computedStyle*/\n        e[1]\n      ), u(a, \"x\", d = /*geom*/\n      e[4].x), u(a, \"y\", h = /*geom*/\n      e[4].y), u(a, \"width\", c = /*geom*/\n      e[4].w), u(a, \"height\", f = /*geom*/\n      e[4].h), u(g, \"class\", \"a9s-edge-handle a9s-edge-handle-top\"), u(g, \"x\", p = /*geom*/\n      e[4].x), u(g, \"y\", y = /*geom*/\n      e[4].y), u(g, \"height\", 1), u(g, \"width\", L = /*geom*/\n      e[4].w), u(k, \"class\", \"a9s-edge-handle a9s-edge-handle-right\"), u(k, \"x\", b = /*geom*/\n      e[4].x + /*geom*/\n      e[4].w), u(k, \"y\", Y = /*geom*/\n      e[4].y), u(k, \"height\", U = /*geom*/\n      e[4].h), u(k, \"width\", 1), u(_, \"class\", \"a9s-edge-handle a9s-edge-handle-bottom\"), u(_, \"x\", w = /*geom*/\n      e[4].x), u(_, \"y\", A = /*geom*/\n      e[4].y + /*geom*/\n      e[4].h), u(_, \"height\", 1), u(_, \"width\", S = /*geom*/\n      e[4].w), u(P, \"class\", \"a9s-edge-handle a9s-edge-handle-left\"), u(P, \"x\", Q = /*geom*/\n      e[4].x), u(P, \"y\", ce = /*geom*/\n      e[4].y), u(P, \"height\", oe = /*geom*/\n      e[4].h), u(P, \"width\", 1), u(Z, \"class\", \"a9s-corner-handle a9s-corner-handle-topleft\"), u(Z, \"x\", I = /*geom*/\n      e[4].x - /*handleSize*/\n      e[3] / 2), u(Z, \"y\", J = /*geom*/\n      e[4].y - /*handleSize*/\n      e[3] / 2), u(\n        Z,\n        \"height\",\n        /*handleSize*/\n        e[3]\n      ), u(\n        Z,\n        \"width\",\n        /*handleSize*/\n        e[3]\n      ), u(V, \"class\", \"a9s-corner-handle a9s-corner-handle-topright\"), u(V, \"x\", ie = /*geom*/\n      e[4].x + /*geom*/\n      e[4].w - /*handleSize*/\n      e[3] / 2), u(V, \"y\", he = /*geom*/\n      e[4].y - /*handleSize*/\n      e[3] / 2), u(\n        V,\n        \"height\",\n        /*handleSize*/\n        e[3]\n      ), u(\n        V,\n        \"width\",\n        /*handleSize*/\n        e[3]\n      ), u(x, \"class\", \"a9s-corner-handle a9s-corner-handle-bottomright\"), u(x, \"x\", Pe = /*geom*/\n      e[4].x + /*geom*/\n      e[4].w - /*handleSize*/\n      e[3] / 2), u(x, \"y\", Ye = /*geom*/\n      e[4].y + /*geom*/\n      e[4].h - /*handleSize*/\n      e[3] / 2), u(\n        x,\n        \"height\",\n        /*handleSize*/\n        e[3]\n      ), u(\n        x,\n        \"width\",\n        /*handleSize*/\n        e[3]\n      ), u($, \"class\", \"a9s-corner-handle a9s-corner-handle-bottomleft\"), u($, \"x\", Re = /*geom*/\n      e[4].x - /*handleSize*/\n      e[3] / 2), u($, \"y\", Xe = /*geom*/\n      e[4].y + /*geom*/\n      e[4].h - /*handleSize*/\n      e[3] / 2), u(\n        $,\n        \"height\",\n        /*handleSize*/\n        e[3]\n      ), u(\n        $,\n        \"width\",\n        /*handleSize*/\n        e[3]\n      );\n    },\n    m(C, T) {\n      v(C, t, T), v(C, l, T), v(C, a, T), v(C, m, T), v(C, g, T), v(C, E, T), v(C, k, T), v(C, X, T), v(C, _, T), v(C, B, T), v(C, P, T), v(C, Le, T), v(C, Z, T), v(C, H, T), v(C, V, T), v(C, je, T), v(C, x, T), v(C, Ve, T), v(C, $, T), qe || (rt = [\n        W(t, \"pointerdown\", function() {\n          j(\n            /*grab*/\n            e[10](M.SHAPE)\n          ) && e[10](M.SHAPE).apply(this, arguments);\n        }),\n        W(a, \"pointerdown\", function() {\n          j(\n            /*grab*/\n            e[10](M.SHAPE)\n          ) && e[10](M.SHAPE).apply(this, arguments);\n        }),\n        W(g, \"pointerdown\", function() {\n          j(\n            /*grab*/\n            e[10](M.TOP)\n          ) && e[10](M.TOP).apply(this, arguments);\n        }),\n        W(k, \"pointerdown\", function() {\n          j(\n            /*grab*/\n            e[10](M.RIGHT)\n          ) && e[10](M.RIGHT).apply(this, arguments);\n        }),\n        W(_, \"pointerdown\", function() {\n          j(\n            /*grab*/\n            e[10](M.BOTTOM)\n          ) && e[10](M.BOTTOM).apply(this, arguments);\n        }),\n        W(P, \"pointerdown\", function() {\n          j(\n            /*grab*/\n            e[10](M.LEFT)\n          ) && e[10](M.LEFT).apply(this, arguments);\n        }),\n        W(Z, \"pointerdown\", function() {\n          j(\n            /*grab*/\n            e[10](M.TOP_LEFT)\n          ) && e[10](M.TOP_LEFT).apply(this, arguments);\n        }),\n        W(V, \"pointerdown\", function() {\n          j(\n            /*grab*/\n            e[10](M.TOP_RIGHT)\n          ) && e[10](M.TOP_RIGHT).apply(this, arguments);\n        }),\n        W(x, \"pointerdown\", function() {\n          j(\n            /*grab*/\n            e[10](M.BOTTOM_RIGHT)\n          ) && e[10](M.BOTTOM_RIGHT).apply(this, arguments);\n        }),\n        W($, \"pointerdown\", function() {\n          j(\n            /*grab*/\n            e[10](M.BOTTOM_LEFT)\n          ) && e[10](M.BOTTOM_LEFT).apply(this, arguments);\n        })\n      ], qe = !0);\n    },\n    p(C, T) {\n      e = C, T & /*computedStyle*/\n      2 && n !== (n = /*computedStyle*/\n      e[1] ? \"display:none;\" : void 0) && u(t, \"style\", n), T & /*geom*/\n      16 && o !== (o = /*geom*/\n      e[4].x) && u(t, \"x\", o), T & /*geom*/\n      16 && i !== (i = /*geom*/\n      e[4].y) && u(t, \"y\", i), T & /*geom*/\n      16 && s !== (s = /*geom*/\n      e[4].w) && u(t, \"width\", s), T & /*geom*/\n      16 && r !== (r = /*geom*/\n      e[4].h) && u(t, \"height\", r), T & /*computedStyle*/\n      2 && u(\n        a,\n        \"style\",\n        /*computedStyle*/\n        e[1]\n      ), T & /*geom*/\n      16 && d !== (d = /*geom*/\n      e[4].x) && u(a, \"x\", d), T & /*geom*/\n      16 && h !== (h = /*geom*/\n      e[4].y) && u(a, \"y\", h), T & /*geom*/\n      16 && c !== (c = /*geom*/\n      e[4].w) && u(a, \"width\", c), T & /*geom*/\n      16 && f !== (f = /*geom*/\n      e[4].h) && u(a, \"height\", f), T & /*geom*/\n      16 && p !== (p = /*geom*/\n      e[4].x) && u(g, \"x\", p), T & /*geom*/\n      16 && y !== (y = /*geom*/\n      e[4].y) && u(g, \"y\", y), T & /*geom*/\n      16 && L !== (L = /*geom*/\n      e[4].w) && u(g, \"width\", L), T & /*geom*/\n      16 && b !== (b = /*geom*/\n      e[4].x + /*geom*/\n      e[4].w) && u(k, \"x\", b), T & /*geom*/\n      16 && Y !== (Y = /*geom*/\n      e[4].y) && u(k, \"y\", Y), T & /*geom*/\n      16 && U !== (U = /*geom*/\n      e[4].h) && u(k, \"height\", U), T & /*geom*/\n      16 && w !== (w = /*geom*/\n      e[4].x) && u(_, \"x\", w), T & /*geom*/\n      16 && A !== (A = /*geom*/\n      e[4].y + /*geom*/\n      e[4].h) && u(_, \"y\", A), T & /*geom*/\n      16 && S !== (S = /*geom*/\n      e[4].w) && u(_, \"width\", S), T & /*geom*/\n      16 && Q !== (Q = /*geom*/\n      e[4].x) && u(P, \"x\", Q), T & /*geom*/\n      16 && ce !== (ce = /*geom*/\n      e[4].y) && u(P, \"y\", ce), T & /*geom*/\n      16 && oe !== (oe = /*geom*/\n      e[4].h) && u(P, \"height\", oe), T & /*geom, handleSize*/\n      24 && I !== (I = /*geom*/\n      e[4].x - /*handleSize*/\n      e[3] / 2) && u(Z, \"x\", I), T & /*geom, handleSize*/\n      24 && J !== (J = /*geom*/\n      e[4].y - /*handleSize*/\n      e[3] / 2) && u(Z, \"y\", J), T & /*handleSize*/\n      8 && u(\n        Z,\n        \"height\",\n        /*handleSize*/\n        e[3]\n      ), T & /*handleSize*/\n      8 && u(\n        Z,\n        \"width\",\n        /*handleSize*/\n        e[3]\n      ), T & /*geom, handleSize*/\n      24 && ie !== (ie = /*geom*/\n      e[4].x + /*geom*/\n      e[4].w - /*handleSize*/\n      e[3] / 2) && u(V, \"x\", ie), T & /*geom, handleSize*/\n      24 && he !== (he = /*geom*/\n      e[4].y - /*handleSize*/\n      e[3] / 2) && u(V, \"y\", he), T & /*handleSize*/\n      8 && u(\n        V,\n        \"height\",\n        /*handleSize*/\n        e[3]\n      ), T & /*handleSize*/\n      8 && u(\n        V,\n        \"width\",\n        /*handleSize*/\n        e[3]\n      ), T & /*geom, handleSize*/\n      24 && Pe !== (Pe = /*geom*/\n      e[4].x + /*geom*/\n      e[4].w - /*handleSize*/\n      e[3] / 2) && u(x, \"x\", Pe), T & /*geom, handleSize*/\n      24 && Ye !== (Ye = /*geom*/\n      e[4].y + /*geom*/\n      e[4].h - /*handleSize*/\n      e[3] / 2) && u(x, \"y\", Ye), T & /*handleSize*/\n      8 && u(\n        x,\n        \"height\",\n        /*handleSize*/\n        e[3]\n      ), T & /*handleSize*/\n      8 && u(\n        x,\n        \"width\",\n        /*handleSize*/\n        e[3]\n      ), T & /*geom, handleSize*/\n      24 && Re !== (Re = /*geom*/\n      e[4].x - /*handleSize*/\n      e[3] / 2) && u($, \"x\", Re), T & /*geom, handleSize*/\n      24 && Xe !== (Xe = /*geom*/\n      e[4].y + /*geom*/\n      e[4].h - /*handleSize*/\n      e[3] / 2) && u($, \"y\", Xe), T & /*handleSize*/\n      8 && u(\n        $,\n        \"height\",\n        /*handleSize*/\n        e[3]\n      ), T & /*handleSize*/\n      8 && u(\n        $,\n        \"width\",\n        /*handleSize*/\n        e[3]\n      );\n    },\n    d(C) {\n      C && O(t), C && O(l), C && O(a), C && O(m), C && O(g), C && O(E), C && O(k), C && O(X), C && O(_), C && O(B), C && O(P), C && O(Le), C && O(Z), C && O(H), C && O(V), C && O(je), C && O(x), C && O(Ve), C && O($), qe = !1, le(rt);\n    }\n  };\n}\nfunction so(e) {\n  let t, n;\n  return t = new jt({\n    props: {\n      shape: (\n        /*shape*/\n        e[0]\n      ),\n      transform: (\n        /*transform*/\n        e[2]\n      ),\n      editor: (\n        /*editor*/\n        e[5]\n      ),\n      $$slots: {\n        default: [\n          io,\n          ({ grab: o }) => ({ 10: o }),\n          ({ grab: o }) => o ? 1024 : 0\n        ]\n      },\n      $$scope: { ctx: e }\n    }\n  }), t.$on(\n    \"grab\",\n    /*grab_handler*/\n    e[7]\n  ), t.$on(\n    \"change\",\n    /*change_handler*/\n    e[8]\n  ), t.$on(\n    \"release\",\n    /*release_handler*/\n    e[9]\n  ), {\n    c() {\n      pe(t.$$.fragment);\n    },\n    m(o, i) {\n      ue(t, o, i), n = !0;\n    },\n    p(o, [i]) {\n      const s = {};\n      i & /*shape*/\n      1 && (s.shape = /*shape*/\n      o[0]), i & /*transform*/\n      4 && (s.transform = /*transform*/\n      o[2]), i & /*$$scope, geom, handleSize, grab, computedStyle*/\n      3098 && (s.$$scope = { dirty: i, ctx: o }), t.$set(s);\n    },\n    i(o) {\n      n || (D(t.$$.fragment, o), n = !0);\n    },\n    o(o) {\n      N(t.$$.fragment, o), n = !1;\n    },\n    d(o) {\n      de(t, o);\n    }\n  };\n}\nfunction ro(e, t, n) {\n  let o, i, { shape: s } = t, { computedStyle: r = void 0 } = t, { transform: l } = t, { viewportScale: a = 1 } = t;\n  const d = (m, g, p) => {\n    const y = m.geometry.bounds;\n    let [L, E] = [y.minX, y.minY], [k, b] = [y.maxX, y.maxY];\n    const [Y, U] = p;\n    if (g === M.SHAPE)\n      L += Y, k += Y, E += U, b += U;\n    else {\n      switch (g) {\n        case M.TOP:\n        case M.TOP_LEFT:\n        case M.TOP_RIGHT: {\n          E += U;\n          break;\n        }\n        case M.BOTTOM:\n        case M.BOTTOM_LEFT:\n        case M.BOTTOM_RIGHT: {\n          b += U;\n          break;\n        }\n      }\n      switch (g) {\n        case M.LEFT:\n        case M.TOP_LEFT:\n        case M.BOTTOM_LEFT: {\n          L += Y;\n          break;\n        }\n        case M.RIGHT:\n        case M.TOP_RIGHT:\n        case M.BOTTOM_RIGHT: {\n          k += Y;\n          break;\n        }\n      }\n    }\n    const X = Math.min(L, k), _ = Math.min(E, b), w = Math.abs(k - L), A = Math.abs(b - E);\n    return {\n      ...m,\n      geometry: {\n        x: X,\n        y: _,\n        w,\n        h: A,\n        bounds: {\n          minX: X,\n          minY: _,\n          maxX: X + w,\n          maxY: _ + A\n        }\n      }\n    };\n  };\n  function h(m) {\n    Ae.call(this, e, m);\n  }\n  function c(m) {\n    Ae.call(this, e, m);\n  }\n  function f(m) {\n    Ae.call(this, e, m);\n  }\n  return e.$$set = (m) => {\n    \"shape\" in m && n(0, s = m.shape), \"computedStyle\" in m && n(1, r = m.computedStyle), \"transform\" in m && n(2, l = m.transform), \"viewportScale\" in m && n(6, a = m.viewportScale);\n  }, e.$$.update = () => {\n    e.$$.dirty & /*shape*/\n    1 && n(4, o = s.geometry), e.$$.dirty & /*viewportScale*/\n    64 && n(3, i = 10 / a);\n  }, [\n    s,\n    r,\n    l,\n    i,\n    o,\n    d,\n    a,\n    h,\n    c,\n    f\n  ];\n}\nclass lo extends ne {\n  constructor(t) {\n    super(), te(this, t, ro, so, K, {\n      shape: 0,\n      computedStyle: 1,\n      transform: 2,\n      viewportScale: 6\n    });\n  }\n}\nconst zt = /* @__PURE__ */ new Map([\n  [z.RECTANGLE, lo],\n  [z.POLYGON, oo]\n]), wt = (e) => zt.get(e.type), ao = (e, t) => zt.set(e, t), M = (e) => `HANDLE-${e}`;\nM.SHAPE = \"SHAPE\";\nM.TOP = \"TOP\";\nM.RIGHT = \"RIGHT\";\nM.BOTTOM = \"BOTTOM\";\nM.LEFT = \"LEFT\";\nM.TOP_LEFT = \"TOP_LEFT\";\nM.TOP_RIGHT = \"TOP_RIGHT\";\nM.BOTTOM_RIGHT = \"BOTTOM_RIGHT\";\nM.BOTTOM_LEFT = \"BOTTOM_LEFT\";\nconst co = (e) => ({}), bt = (e) => ({ grab: (\n  /*onGrab*/\n  e[0]\n) });\nfunction fo(e) {\n  let t, n, o, i;\n  const s = (\n    /*#slots*/\n    e[7].default\n  ), r = Qt(\n    s,\n    e,\n    /*$$scope*/\n    e[6],\n    bt\n  );\n  return {\n    c() {\n      t = R(\"g\"), r && r.c(), u(t, \"class\", \"a9s-annotation selected\");\n    },\n    m(l, a) {\n      v(l, t, a), r && r.m(t, null), n = !0, o || (i = [\n        W(\n          t,\n          \"pointerup\",\n          /*onRelease*/\n          e[2]\n        ),\n        W(\n          t,\n          \"pointermove\",\n          /*onPointerMove*/\n          e[1]\n        )\n      ], o = !0);\n    },\n    p(l, [a]) {\n      r && r.p && (!n || a & /*$$scope*/\n      64) && Kt(\n        r,\n        s,\n        l,\n        /*$$scope*/\n        l[6],\n        n ? Zt(\n          s,\n          /*$$scope*/\n          l[6],\n          a,\n          co\n        ) : xt(\n          /*$$scope*/\n          l[6]\n        ),\n        bt\n      );\n    },\n    i(l) {\n      n || (D(r, l), n = !0);\n    },\n    o(l) {\n      N(r, l), n = !1;\n    },\n    d(l) {\n      l && O(t), r && r.d(l), o = !1, le(i);\n    }\n  };\n}\nfunction uo(e, t, n) {\n  let { $$slots: o = {}, $$scope: i } = t;\n  const s = Me();\n  let { shape: r } = t, { editor: l } = t, { transform: a } = t, d = null, h, c = null;\n  const f = (p) => (y) => {\n    d = p, h = a.elementToImage(y.offsetX, y.offsetY), c = r, y.target.setPointerCapture(y.pointerId), s(\"grab\");\n  }, m = (p) => {\n    if (d) {\n      const [y, L] = a.elementToImage(p.offsetX, p.offsetY), E = [y - h[0], L - h[1]];\n      n(3, r = l(c, d, E)), s(\"change\", r);\n    }\n  }, g = (p) => {\n    p.target.releasePointerCapture(p.pointerId), d = null, c = r, s(\"release\");\n  };\n  return e.$$set = (p) => {\n    \"shape\" in p && n(3, r = p.shape), \"editor\" in p && n(4, l = p.editor), \"transform\" in p && n(5, a = p.transform), \"$$scope\" in p && n(6, i = p.$$scope);\n  }, [f, m, g, r, l, a, i, o];\n}\nclass jt extends ne {\n  constructor(t) {\n    super(), te(this, t, uo, fo, K, { shape: 3, editor: 4, transform: 5 });\n  }\n}\nconst ze = (e, t) => {\n  const n = typeof t == \"function\" ? t(e) : t;\n  if (n) {\n    const { fill: o, fillOpacity: i } = n;\n    let s = \"\";\n    return o && (s += `fill:${o};stroke:${o};`), s += `fill-opacity:${i || \"0.25\"};`, s;\n  }\n};\nfunction ho(e, t, n) {\n  let o;\n  const i = Me();\n  let { annotation: s } = t, { editor: r } = t, { style: l = void 0 } = t, { target: a } = t, { transform: d } = t, { viewportScale: h } = t, c;\n  return Ce(() => (n(6, c = new r({\n    target: a,\n    props: {\n      shape: s.target.selector,\n      computedStyle: o,\n      transform: d,\n      viewportScale: h\n    }\n  })), c.$on(\"change\", (f) => {\n    c.$$set({ shape: f.detail }), i(\"change\", f.detail);\n  }), c.$on(\"grab\", (f) => i(\"grab\", f.detail)), c.$on(\"release\", (f) => i(\"release\", f.detail)), () => {\n    c.$destroy();\n  })), e.$$set = (f) => {\n    \"annotation\" in f && n(0, s = f.annotation), \"editor\" in f && n(1, r = f.editor), \"style\" in f && n(2, l = f.style), \"target\" in f && n(3, a = f.target), \"transform\" in f && n(4, d = f.transform), \"viewportScale\" in f && n(5, h = f.viewportScale);\n  }, e.$$.update = () => {\n    e.$$.dirty & /*annotation, style*/\n    5 && (o = ze(s, l)), e.$$.dirty & /*editorComponent, transform*/\n    80 && c && c.$set({ transform: d }), e.$$.dirty & /*editorComponent, viewportScale*/\n    96 && c && c.$set({ viewportScale: h });\n  }, [s, r, l, a, d, h, c];\n}\nclass mo extends ne {\n  constructor(t) {\n    super(), te(this, t, ho, null, K, {\n      annotation: 0,\n      editor: 1,\n      style: 2,\n      target: 3,\n      transform: 4,\n      viewportScale: 5\n    });\n  }\n}\nfunction go(e, t, n) {\n  const o = Me();\n  let { drawingMode: i } = t, { target: s } = t, { tool: r } = t, { transform: l } = t, { viewportScale: a } = t, d;\n  return Ce(() => {\n    const h = s.closest(\"svg\"), c = [], f = (m, g, p) => {\n      h.addEventListener(m, g, p), c.push(() => h.removeEventListener(m, g, p));\n    };\n    return n(5, d = new r({\n      target: s,\n      props: {\n        addEventListener: f,\n        drawingMode: i,\n        transform: l,\n        viewportScale: a\n      }\n    })), d.$on(\"create\", (m) => o(\"create\", m.detail)), () => {\n      c.forEach((m) => m()), d.$destroy();\n    };\n  }), e.$$set = (h) => {\n    \"drawingMode\" in h && n(0, i = h.drawingMode), \"target\" in h && n(1, s = h.target), \"tool\" in h && n(2, r = h.tool), \"transform\" in h && n(3, l = h.transform), \"viewportScale\" in h && n(4, a = h.viewportScale);\n  }, e.$$.update = () => {\n    e.$$.dirty & /*toolComponent, transform*/\n    40 && d && d.$set({ transform: l }), e.$$.dirty & /*toolComponent, viewportScale*/\n    48 && d && d.$set({ viewportScale: a });\n  }, [i, s, r, l, a, d];\n}\nclass po extends ne {\n  constructor(t) {\n    super(), te(this, t, go, null, K, {\n      drawingMode: 0,\n      target: 1,\n      tool: 2,\n      transform: 3,\n      viewportScale: 4\n    });\n  }\n}\nfunction Et(e) {\n  let t, n;\n  return {\n    c() {\n      t = R(\"rect\"), n = R(\"rect\"), u(t, \"class\", \"a9s-outer\"), u(\n        t,\n        \"x\",\n        /*x*/\n        e[2]\n      ), u(\n        t,\n        \"y\",\n        /*y*/\n        e[3]\n      ), u(\n        t,\n        \"width\",\n        /*w*/\n        e[4]\n      ), u(\n        t,\n        \"height\",\n        /*h*/\n        e[5]\n      ), u(n, \"class\", \"a9s-inner\"), u(\n        n,\n        \"x\",\n        /*x*/\n        e[2]\n      ), u(\n        n,\n        \"y\",\n        /*y*/\n        e[3]\n      ), u(\n        n,\n        \"width\",\n        /*w*/\n        e[4]\n      ), u(\n        n,\n        \"height\",\n        /*h*/\n        e[5]\n      );\n    },\n    m(o, i) {\n      v(o, t, i), v(o, n, i);\n    },\n    p(o, i) {\n      i & /*x*/\n      4 && u(\n        t,\n        \"x\",\n        /*x*/\n        o[2]\n      ), i & /*y*/\n      8 && u(\n        t,\n        \"y\",\n        /*y*/\n        o[3]\n      ), i & /*w*/\n      16 && u(\n        t,\n        \"width\",\n        /*w*/\n        o[4]\n      ), i & /*h*/\n      32 && u(\n        t,\n        \"height\",\n        /*h*/\n        o[5]\n      ), i & /*x*/\n      4 && u(\n        n,\n        \"x\",\n        /*x*/\n        o[2]\n      ), i & /*y*/\n      8 && u(\n        n,\n        \"y\",\n        /*y*/\n        o[3]\n      ), i & /*w*/\n      16 && u(\n        n,\n        \"width\",\n        /*w*/\n        o[4]\n      ), i & /*h*/\n      32 && u(\n        n,\n        \"height\",\n        /*h*/\n        o[5]\n      );\n    },\n    d(o) {\n      o && O(t), o && O(n);\n    }\n  };\n}\nfunction _o(e) {\n  let t, n = (\n    /*origin*/\n    e[1] && Et(e)\n  );\n  return {\n    c() {\n      t = R(\"g\"), n && n.c(), u(t, \"class\", \"a9s-annotation a9s-rubberband\");\n    },\n    m(o, i) {\n      v(o, t, i), n && n.m(t, null), e[9](t);\n    },\n    p(o, [i]) {\n      /*origin*/\n      o[1] ? n ? n.p(o, i) : (n = Et(o), n.c(), n.m(t, null)) : n && (n.d(1), n = null);\n    },\n    i: G,\n    o: G,\n    d(o) {\n      o && O(t), n && n.d(), e[9](null);\n    }\n  };\n}\nfunction yo(e, t, n) {\n  const o = Me();\n  let { addEventListener: i } = t, { drawingMode: s } = t, { transform: r } = t, l, a, d, h, c, f, m, g;\n  const p = (b) => {\n    a = performance.now(), s === \"drag\" && (n(1, d = r.elementToImage(b.offsetX, b.offsetY)), h = d, n(2, c = d[0]), n(3, f = d[1]), n(4, m = 1), n(5, g = 1));\n  }, y = (b) => {\n    d && (h = r.elementToImage(b.offsetX, b.offsetY), n(2, c = Math.min(h[0], d[0])), n(3, f = Math.min(h[1], d[1])), n(4, m = Math.abs(h[0] - d[0])), n(5, g = Math.abs(h[1] - d[1])));\n  }, L = (b) => {\n    const Y = performance.now() - a;\n    if (s === \"click\") {\n      if (Y > 300)\n        return;\n      b.stopPropagation(), d ? E() : (n(1, d = r.elementToImage(b.offsetX, b.offsetY)), h = d, n(2, c = d[0]), n(3, f = d[1]), n(4, m = 1), n(5, g = 1));\n    } else\n      d && (Y > 300 || m * g > 100 ? (b.stopPropagation(), E()) : (n(1, d = null), h = null));\n  }, E = () => {\n    if (m * g > 15) {\n      const b = {\n        type: z.RECTANGLE,\n        geometry: {\n          bounds: {\n            minX: c,\n            minY: f,\n            maxX: c + m,\n            maxY: f + g\n          },\n          x: c,\n          y: f,\n          w: m,\n          h: g\n        }\n      };\n      o(\"create\", b);\n    }\n    n(1, d = null), h = null;\n  };\n  Ce(() => {\n    i(\"pointerdown\", p), i(\"pointermove\", y), i(\"pointerup\", L, !0);\n  });\n  function k(b) {\n    Se[b ? \"unshift\" : \"push\"](() => {\n      l = b, n(0, l);\n    });\n  }\n  return e.$$set = (b) => {\n    \"addEventListener\" in b && n(6, i = b.addEventListener), \"drawingMode\" in b && n(7, s = b.drawingMode), \"transform\" in b && n(8, r = b.transform);\n  }, [\n    l,\n    d,\n    c,\n    f,\n    m,\n    g,\n    i,\n    s,\n    r,\n    k\n  ];\n}\nclass wo extends ne {\n  constructor(t) {\n    super(), te(this, t, yo, _o, K, {\n      addEventListener: 6,\n      drawingMode: 7,\n      transform: 8\n    });\n  }\n}\nconst At = (e, t) => {\n  const n = Math.abs(t[0] - e[0]), o = Math.abs(t[1] - e[1]);\n  return Math.sqrt(Math.pow(n, 2) + Math.pow(o, 2));\n}, bo = (e, t) => {\n  const { naturalWidth: n, naturalHeight: o } = e;\n  if (!n && !o) {\n    const { width: i, height: s } = e;\n    t.setAttribute(\"viewBox\", `0 0 ${i} ${s}`), e.addEventListener(\"load\", (r) => {\n      const l = r.target;\n      t.setAttribute(\"viewBox\", `0 0 ${l.naturalWidth} ${l.naturalHeight}`);\n    });\n  } else\n    t.setAttribute(\"viewBox\", `0 0 ${n} ${o}`);\n}, Eo = (e, t) => {\n  bo(e, t);\n  const { subscribe: n, set: o } = Fe(1);\n  let i;\n  return window.ResizeObserver && (i = new ResizeObserver(() => {\n    const r = t.getBoundingClientRect(), { width: l, height: a } = t.viewBox.baseVal, d = Math.max(\n      r.width / l,\n      r.height / a\n    );\n    o(d);\n  }), i.observe(t.parentElement)), { destroy: () => {\n    i && i.disconnect();\n  }, subscribe: n };\n}, _i = \"ontouchstart\" in window || navigator.maxTouchPoints > 0;\nfunction Qe(e) {\n  const t = e.slice(), n = (\n    /*isClosable*/\n    (t[3] ? (\n      /*points*/\n      t[1]\n    ) : [\n      .../*points*/\n      t[1],\n      /*cursor*/\n      t[2]\n    ]).map((o) => o.join(\",\")).join(\" \")\n  );\n  return t[17] = n, t;\n}\nfunction Tt(e) {\n  let t, n, o, i, s, r = (\n    /*isClosable*/\n    e[3] && St(e)\n  );\n  return {\n    c() {\n      t = R(\"polygon\"), o = R(\"polygon\"), r && r.c(), s = ae(), u(t, \"class\", \"a9s-outer\"), u(t, \"points\", n = /*coords*/\n      e[17]), u(o, \"class\", \"a9s-inner\"), u(o, \"points\", i = /*coords*/\n      e[17]);\n    },\n    m(l, a) {\n      v(l, t, a), v(l, o, a), r && r.m(l, a), v(l, s, a);\n    },\n    p(l, a) {\n      a & /*isClosable, points, cursor*/\n      14 && n !== (n = /*coords*/\n      l[17]) && u(t, \"points\", n), a & /*isClosable, points, cursor*/\n      14 && i !== (i = /*coords*/\n      l[17]) && u(o, \"points\", i), /*isClosable*/\n      l[3] ? r ? r.p(l, a) : (r = St(l), r.c(), r.m(s.parentNode, s)) : r && (r.d(1), r = null);\n    },\n    d(l) {\n      l && O(t), l && O(o), r && r.d(l), l && O(s);\n    }\n  };\n}\nfunction St(e) {\n  let t, n, o;\n  return {\n    c() {\n      t = R(\"rect\"), u(t, \"class\", \"a9s-corner-handle\"), u(t, \"x\", n = /*points*/\n      e[1][0][0] - /*handleSize*/\n      e[4] / 2), u(t, \"y\", o = /*points*/\n      e[1][0][1] - /*handleSize*/\n      e[4] / 2), u(\n        t,\n        \"height\",\n        /*handleSize*/\n        e[4]\n      ), u(\n        t,\n        \"width\",\n        /*handleSize*/\n        e[4]\n      );\n    },\n    m(i, s) {\n      v(i, t, s);\n    },\n    p(i, s) {\n      s & /*points, handleSize*/\n      18 && n !== (n = /*points*/\n      i[1][0][0] - /*handleSize*/\n      i[4] / 2) && u(t, \"x\", n), s & /*points, handleSize*/\n      18 && o !== (o = /*points*/\n      i[1][0][1] - /*handleSize*/\n      i[4] / 2) && u(t, \"y\", o), s & /*handleSize*/\n      16 && u(\n        t,\n        \"height\",\n        /*handleSize*/\n        i[4]\n      ), s & /*handleSize*/\n      16 && u(\n        t,\n        \"width\",\n        /*handleSize*/\n        i[4]\n      );\n    },\n    d(i) {\n      i && O(t);\n    }\n  };\n}\nfunction Ao(e) {\n  let t, n = (\n    /*cursor*/\n    e[2] && Tt(Qe(e))\n  );\n  return {\n    c() {\n      t = R(\"g\"), n && n.c(), u(t, \"class\", \"a9s-annotation a9s-rubberband\");\n    },\n    m(o, i) {\n      v(o, t, i), n && n.m(t, null), e[9](t);\n    },\n    p(o, [i]) {\n      /*cursor*/\n      o[2] ? n ? n.p(Qe(o), i) : (n = Tt(Qe(o)), n.c(), n.m(t, null)) : n && (n.d(1), n = null);\n    },\n    i: G,\n    o: G,\n    d(o) {\n      o && O(t), n && n.d(), e[9](null);\n    }\n  };\n}\nconst To = 20;\nfunction So(e, t, n) {\n  let o;\n  const i = Me();\n  let { addEventListener: s } = t, { drawingMode: r } = t, { transform: l } = t, { viewportScale: a = 1 } = t, d, h, c = [], f = null, m = !1;\n  const g = (b) => {\n    if (h = performance.now(), r === \"drag\" && c.length === 0) {\n      const Y = l.elementToImage(b.offsetX, b.offsetY);\n      c.push(Y), n(2, f = Y);\n    }\n  }, p = (b) => {\n    if (c.length > 0 && (n(2, f = l.elementToImage(b.offsetX, b.offsetY)), c.length > 2)) {\n      const Y = At(f, c[0]) * a;\n      n(3, m = Y < To);\n    }\n  }, y = (b) => {\n    const Y = performance.now() - h;\n    if (r === \"click\") {\n      if (Y > 300)\n        return;\n      if (b.stopPropagation(), m)\n        E();\n      else if (c.length === 0) {\n        const U = l.elementToImage(b.offsetX, b.offsetY);\n        c.push(U), n(2, f = U);\n      } else\n        c.push(f);\n    } else {\n      if (c.length === 1 && At(c[0], f) <= 4) {\n        n(1, c = []), n(2, f = null);\n        return;\n      }\n      b.stopImmediatePropagation(), m ? E() : c.push(f);\n    }\n  }, L = () => {\n    console.log(\"dblclick\");\n    const b = [...c, f], Y = {\n      type: z.POLYGON,\n      geometry: { bounds: He(b), points: b }\n    };\n    n(1, c = []), n(2, f = null), i(\"create\", Y);\n  }, E = () => {\n    const b = {\n      type: z.POLYGON,\n      geometry: {\n        bounds: He(c),\n        points: [...c]\n      }\n    };\n    n(1, c = []), n(2, f = null), i(\"create\", b);\n  };\n  Ce(() => {\n    s(\"pointerdown\", g, !0), s(\"pointermove\", p), s(\"pointerup\", y, !0), s(\"dblclick\", L, !0);\n  });\n  function k(b) {\n    Se[b ? \"unshift\" : \"push\"](() => {\n      d = b, n(0, d);\n    });\n  }\n  return e.$$set = (b) => {\n    \"addEventListener\" in b && n(5, s = b.addEventListener), \"drawingMode\" in b && n(6, r = b.drawingMode), \"transform\" in b && n(7, l = b.transform), \"viewportScale\" in b && n(8, a = b.viewportScale);\n  }, e.$$.update = () => {\n    e.$$.dirty & /*viewportScale*/\n    256 && n(4, o = 10 / a);\n  }, [\n    d,\n    c,\n    f,\n    m,\n    o,\n    s,\n    r,\n    l,\n    a,\n    k\n  ];\n}\nclass Mo extends ne {\n  constructor(t) {\n    super(), te(this, t, So, Ao, K, {\n      addEventListener: 5,\n      drawingMode: 6,\n      transform: 7,\n      viewportScale: 8\n    });\n  }\n}\nconst st = /* @__PURE__ */ new Map([\n  [\"rectangle\", { tool: wo }],\n  [\"polygon\", { tool: Mo }]\n]), Lo = () => [...st.keys()], Vt = (e) => st.get(e), Oo = (e, t, n) => st.set(e, { tool: t, opts: n });\nfunction vo(e) {\n  let t, n, o, i, s;\n  return {\n    c() {\n      t = R(\"g\"), n = R(\"ellipse\"), i = R(\"ellipse\"), u(n, \"class\", \"a9s-outer\"), u(n, \"style\", o = /*computedStyle*/\n      e[1] ? \"display:none;\" : void 0), u(\n        n,\n        \"cx\",\n        /*cx*/\n        e[2]\n      ), u(\n        n,\n        \"cy\",\n        /*cy*/\n        e[3]\n      ), u(\n        n,\n        \"rx\",\n        /*rx*/\n        e[4]\n      ), u(\n        n,\n        \"ry\",\n        /*ry*/\n        e[5]\n      ), u(i, \"class\", \"a9s-inner\"), u(\n        i,\n        \"style\",\n        /*computedStyle*/\n        e[1]\n      ), u(\n        i,\n        \"cx\",\n        /*cx*/\n        e[2]\n      ), u(\n        i,\n        \"cy\",\n        /*cy*/\n        e[3]\n      ), u(\n        i,\n        \"rx\",\n        /*rx*/\n        e[4]\n      ), u(\n        i,\n        \"ry\",\n        /*ry*/\n        e[5]\n      ), u(t, \"data-id\", s = /*annotation*/\n      e[0].id);\n    },\n    m(r, l) {\n      v(r, t, l), fe(t, n), fe(t, i);\n    },\n    p(r, [l]) {\n      l & /*computedStyle*/\n      2 && o !== (o = /*computedStyle*/\n      r[1] ? \"display:none;\" : void 0) && u(n, \"style\", o), l & /*computedStyle*/\n      2 && u(\n        i,\n        \"style\",\n        /*computedStyle*/\n        r[1]\n      ), l & /*annotation*/\n      1 && s !== (s = /*annotation*/\n      r[0].id) && u(t, \"data-id\", s);\n    },\n    i: G,\n    o: G,\n    d(r) {\n      r && O(t);\n    }\n  };\n}\nfunction Bo(e, t, n) {\n  let o, { annotation: i } = t, { geom: s } = t, { style: r = void 0 } = t;\n  const { cx: l, cy: a, rx: d, ry: h } = s;\n  return e.$$set = (c) => {\n    \"annotation\" in c && n(0, i = c.annotation), \"geom\" in c && n(6, s = c.geom), \"style\" in c && n(7, r = c.style);\n  }, e.$$.update = () => {\n    e.$$.dirty & /*annotation, style*/\n    129 && n(1, o = ze(i, r));\n  }, [i, o, l, a, d, h, s, r];\n}\nclass ko extends ne {\n  constructor(t) {\n    super(), te(this, t, Bo, vo, K, { annotation: 0, geom: 6, style: 7 });\n  }\n}\nfunction Io(e) {\n  let t, n, o, i, s;\n  return {\n    c() {\n      t = R(\"g\"), n = R(\"polygon\"), i = R(\"polygon\"), u(n, \"class\", \"a9s-outer\"), u(n, \"style\", o = /*computedStyle*/\n      e[1] ? \"display:none;\" : void 0), u(\n        n,\n        \"points\",\n        /*points*/\n        e[2].map(Co).join(\" \")\n      ), u(i, \"class\", \"a9s-inner\"), u(\n        i,\n        \"style\",\n        /*computedStyle*/\n        e[1]\n      ), u(\n        i,\n        \"points\",\n        /*points*/\n        e[2].map(Po).join(\" \")\n      ), u(t, \"data-id\", s = /*annotation*/\n      e[0].id);\n    },\n    m(r, l) {\n      v(r, t, l), fe(t, n), fe(t, i);\n    },\n    p(r, [l]) {\n      l & /*computedStyle*/\n      2 && o !== (o = /*computedStyle*/\n      r[1] ? \"display:none;\" : void 0) && u(n, \"style\", o), l & /*computedStyle*/\n      2 && u(\n        i,\n        \"style\",\n        /*computedStyle*/\n        r[1]\n      ), l & /*annotation*/\n      1 && s !== (s = /*annotation*/\n      r[0].id) && u(t, \"data-id\", s);\n    },\n    i: G,\n    o: G,\n    d(r) {\n      r && O(t);\n    }\n  };\n}\nconst Co = (e) => e.join(\",\"), Po = (e) => e.join(\",\");\nfunction Yo(e, t, n) {\n  let o, { annotation: i } = t, { geom: s } = t, { style: r = void 0 } = t;\n  const { points: l } = s;\n  return e.$$set = (a) => {\n    \"annotation\" in a && n(0, i = a.annotation), \"geom\" in a && n(3, s = a.geom), \"style\" in a && n(4, r = a.style);\n  }, e.$$.update = () => {\n    e.$$.dirty & /*annotation, style*/\n    17 && n(1, o = ze(i, r));\n  }, [i, o, l, s, r];\n}\nclass Ro extends ne {\n  constructor(t) {\n    super(), te(this, t, Yo, Io, K, { annotation: 0, geom: 3, style: 4 });\n  }\n}\nfunction Xo(e) {\n  let t, n, o, i, s;\n  return {\n    c() {\n      t = R(\"g\"), n = R(\"rect\"), i = R(\"rect\"), u(n, \"class\", \"a9s-outer\"), u(n, \"style\", o = /*computedStyle*/\n      e[1] ? \"display:none;\" : void 0), u(\n        n,\n        \"x\",\n        /*x*/\n        e[2]\n      ), u(\n        n,\n        \"y\",\n        /*y*/\n        e[3]\n      ), u(\n        n,\n        \"width\",\n        /*w*/\n        e[4]\n      ), u(\n        n,\n        \"height\",\n        /*h*/\n        e[5]\n      ), u(i, \"class\", \"a9s-inner\"), u(\n        i,\n        \"style\",\n        /*computedStyle*/\n        e[1]\n      ), u(\n        i,\n        \"x\",\n        /*x*/\n        e[2]\n      ), u(\n        i,\n        \"y\",\n        /*y*/\n        e[3]\n      ), u(\n        i,\n        \"width\",\n        /*w*/\n        e[4]\n      ), u(\n        i,\n        \"height\",\n        /*h*/\n        e[5]\n      ), u(t, \"data-id\", s = /*annotation*/\n      e[0].id);\n    },\n    m(r, l) {\n      v(r, t, l), fe(t, n), fe(t, i);\n    },\n    p(r, [l]) {\n      l & /*computedStyle*/\n      2 && o !== (o = /*computedStyle*/\n      r[1] ? \"display:none;\" : void 0) && u(n, \"style\", o), l & /*computedStyle*/\n      2 && u(\n        i,\n        \"style\",\n        /*computedStyle*/\n        r[1]\n      ), l & /*annotation*/\n      1 && s !== (s = /*annotation*/\n      r[0].id) && u(t, \"data-id\", s);\n    },\n    i: G,\n    o: G,\n    d(r) {\n      r && O(t);\n    }\n  };\n}\nfunction Do(e, t, n) {\n  let o, { annotation: i } = t, { geom: s } = t, { style: r = void 0 } = t;\n  const { x: l, y: a, w: d, h } = s;\n  return e.$$set = (c) => {\n    \"annotation\" in c && n(0, i = c.annotation), \"geom\" in c && n(6, s = c.geom), \"style\" in c && n(7, r = c.style);\n  }, e.$$.update = () => {\n    e.$$.dirty & /*annotation, style*/\n    129 && n(1, o = ze(i, r));\n  }, [i, o, l, a, d, h, s, r];\n}\nclass No extends ne {\n  constructor(t) {\n    super(), te(this, t, Do, Xo, K, { annotation: 0, geom: 6, style: 7 });\n  }\n}\nconst yi = {\n  elementToImage: (e, t) => [e, t]\n}, Uo = (e) => ({\n  elementToImage: (t, n) => {\n    const o = e.createSVGPoint();\n    o.x = t, o.y = n;\n    const { x: i, y: s } = o.matrixTransform(e.getCTM().inverse());\n    return [i, s];\n  }\n}), Go = 250, Ho = (e, t) => {\n  const n = Me();\n  let o;\n  return { onPointerDown: () => o = performance.now(), onPointerUp: (r) => {\n    if (performance.now() - o < Go) {\n      const { x: a, y: d } = Fo(r, e), h = t.getAt(a, d);\n      h ? n(\"click\", { originalEvent: r, annotation: h }) : n(\"click\", { originalEvent: r });\n    }\n  } };\n}, Fo = (e, t) => {\n  const n = t.createSVGPoint(), o = t.getBoundingClientRect(), i = e.clientX - o.x, s = e.clientY - o.y, { left: r, top: l } = t.getBoundingClientRect();\n  return n.x = i + r, n.y = s + l, n.matrixTransform(t.getScreenCTM().inverse());\n};\nfunction Mt(e, t, n) {\n  const o = e.slice();\n  return o[28] = t[n], o;\n}\nfunction Lt(e, t, n) {\n  const o = e.slice();\n  return o[31] = t[n], o;\n}\nfunction Ze(e) {\n  const t = e.slice(), n = (\n    /*annotation*/\n    t[31].target.selector\n  );\n  return t[34] = n, t;\n}\nfunction Ot(e) {\n  let t = (\n    /*annotation*/\n    e[31].id\n  ), n, o, i = vt(e);\n  return {\n    c() {\n      i.c(), n = ae();\n    },\n    m(s, r) {\n      i.m(s, r), v(s, n, r), o = !0;\n    },\n    p(s, r) {\n      r[0] & /*$store*/\n      4096 && K(t, t = /*annotation*/\n      s[31].id) ? (se(), N(i, 1, 1, G), re(), i = vt(s), i.c(), D(i, 1), i.m(n.parentNode, n)) : i.p(s, r);\n    },\n    i(s) {\n      o || (D(i), o = !0);\n    },\n    o(s) {\n      N(i), o = !1;\n    },\n    d(s) {\n      s && O(n), i.d(s);\n    }\n  };\n}\nfunction zo(e) {\n  let t, n;\n  return t = new Ro({\n    props: {\n      annotation: (\n        /*annotation*/\n        e[31]\n      ),\n      geom: (\n        /*selector*/\n        e[34].geometry\n      ),\n      style: (\n        /*style*/\n        e[1]\n      )\n    }\n  }), {\n    c() {\n      pe(t.$$.fragment);\n    },\n    m(o, i) {\n      ue(t, o, i), n = !0;\n    },\n    p(o, i) {\n      const s = {};\n      i[0] & /*$store*/\n      4096 && (s.annotation = /*annotation*/\n      o[31]), i[0] & /*$store*/\n      4096 && (s.geom = /*selector*/\n      o[34].geometry), i[0] & /*style*/\n      2 && (s.style = /*style*/\n      o[1]), t.$set(s);\n    },\n    i(o) {\n      n || (D(t.$$.fragment, o), n = !0);\n    },\n    o(o) {\n      N(t.$$.fragment, o), n = !1;\n    },\n    d(o) {\n      de(t, o);\n    }\n  };\n}\nfunction jo(e) {\n  let t, n;\n  return t = new No({\n    props: {\n      annotation: (\n        /*annotation*/\n        e[31]\n      ),\n      geom: (\n        /*selector*/\n        e[34].geometry\n      ),\n      style: (\n        /*style*/\n        e[1]\n      )\n    }\n  }), {\n    c() {\n      pe(t.$$.fragment);\n    },\n    m(o, i) {\n      ue(t, o, i), n = !0;\n    },\n    p(o, i) {\n      const s = {};\n      i[0] & /*$store*/\n      4096 && (s.annotation = /*annotation*/\n      o[31]), i[0] & /*$store*/\n      4096 && (s.geom = /*selector*/\n      o[34].geometry), i[0] & /*style*/\n      2 && (s.style = /*style*/\n      o[1]), t.$set(s);\n    },\n    i(o) {\n      n || (D(t.$$.fragment, o), n = !0);\n    },\n    o(o) {\n      N(t.$$.fragment, o), n = !1;\n    },\n    d(o) {\n      de(t, o);\n    }\n  };\n}\nfunction Vo(e) {\n  let t, n;\n  return t = new ko({\n    props: {\n      annotation: (\n        /*annotation*/\n        e[31]\n      ),\n      geom: (\n        /*selector*/\n        e[34].geometry\n      ),\n      style: (\n        /*style*/\n        e[1]\n      )\n    }\n  }), {\n    c() {\n      pe(t.$$.fragment);\n    },\n    m(o, i) {\n      ue(t, o, i), n = !0;\n    },\n    p(o, i) {\n      const s = {};\n      i[0] & /*$store*/\n      4096 && (s.annotation = /*annotation*/\n      o[31]), i[0] & /*$store*/\n      4096 && (s.geom = /*selector*/\n      o[34].geometry), i[0] & /*style*/\n      2 && (s.style = /*style*/\n      o[1]), t.$set(s);\n    },\n    i(o) {\n      n || (D(t.$$.fragment, o), n = !0);\n    },\n    o(o) {\n      N(t.$$.fragment, o), n = !1;\n    },\n    d(o) {\n      de(t, o);\n    }\n  };\n}\nfunction vt(e) {\n  let t, n, o, i;\n  const s = [Vo, jo, zo], r = [];\n  function l(a, d) {\n    return (\n      /*selector*/\n      a[34].type === z.ELLIPSE ? 0 : (\n        /*selector*/\n        a[34].type === z.RECTANGLE ? 1 : (\n          /*selector*/\n          a[34].type === z.POLYGON ? 2 : -1\n        )\n      )\n    );\n  }\n  return ~(t = l(e)) && (n = r[t] = s[t](e)), {\n    c() {\n      n && n.c(), o = ae();\n    },\n    m(a, d) {\n      ~t && r[t].m(a, d), v(a, o, d), i = !0;\n    },\n    p(a, d) {\n      let h = t;\n      t = l(a), t === h ? ~t && r[t].p(a, d) : (n && (se(), N(r[h], 1, 1, () => {\n        r[h] = null;\n      }), re()), ~t ? (n = r[t], n ? n.p(a, d) : (n = r[t] = s[t](a), n.c()), D(n, 1), n.m(o.parentNode, o)) : n = null);\n    },\n    i(a) {\n      i || (D(n), i = !0);\n    },\n    o(a) {\n      N(n), i = !1;\n    },\n    d(a) {\n      ~t && r[t].d(a), a && O(o);\n    }\n  };\n}\nfunction Bt(e) {\n  let t = !/*isEditable*/\n  e[7](\n    /*annotation*/\n    e[31]\n  ), n, o, i = t && Ot(Ze(e));\n  return {\n    c() {\n      i && i.c(), n = ae();\n    },\n    m(s, r) {\n      i && i.m(s, r), v(s, n, r), o = !0;\n    },\n    p(s, r) {\n      r[0] & /*isEditable, $store*/\n      4224 && (t = !/*isEditable*/\n      s[7](\n        /*annotation*/\n        s[31]\n      )), t ? i ? (i.p(Ze(s), r), r[0] & /*isEditable, $store*/\n      4224 && D(i, 1)) : (i = Ot(Ze(s)), i.c(), D(i, 1), i.m(n.parentNode, n)) : i && (se(), N(i, 1, 1, () => {\n        i = null;\n      }), re());\n    },\n    i(s) {\n      o || (D(i), o = !0);\n    },\n    o(s) {\n      N(i), o = !1;\n    },\n    d(s) {\n      i && i.d(s), s && O(n);\n    }\n  };\n}\nfunction kt(e) {\n  let t, n, o, i;\n  const s = [Wo, qo], r = [];\n  function l(a, d) {\n    return (\n      /*editableAnnotations*/\n      a[6] ? 0 : (\n        /*tool*/\n        a[2] && /*drawingEnabled*/\n        a[0] ? 1 : -1\n      )\n    );\n  }\n  return ~(t = l(e)) && (n = r[t] = s[t](e)), {\n    c() {\n      n && n.c(), o = ae();\n    },\n    m(a, d) {\n      ~t && r[t].m(a, d), v(a, o, d), i = !0;\n    },\n    p(a, d) {\n      let h = t;\n      t = l(a), t === h ? ~t && r[t].p(a, d) : (n && (se(), N(r[h], 1, 1, () => {\n        r[h] = null;\n      }), re()), ~t ? (n = r[t], n ? n.p(a, d) : (n = r[t] = s[t](a), n.c()), D(n, 1), n.m(o.parentNode, o)) : n = null);\n    },\n    i(a) {\n      i || (D(n), i = !0);\n    },\n    o(a) {\n      N(n), i = !1;\n    },\n    d(a) {\n      ~t && r[t].d(a), a && O(o);\n    }\n  };\n}\nfunction qo(e) {\n  let t = (\n    /*tool*/\n    e[2]\n  ), n, o, i = It(e);\n  return {\n    c() {\n      i.c(), n = ae();\n    },\n    m(s, r) {\n      i.m(s, r), v(s, n, r), o = !0;\n    },\n    p(s, r) {\n      r[0] & /*tool*/\n      4 && K(t, t = /*tool*/\n      s[2]) ? (se(), N(i, 1, 1, G), re(), i = It(s), i.c(), D(i, 1), i.m(n.parentNode, n)) : i.p(s, r);\n    },\n    i(s) {\n      o || (D(i), o = !0);\n    },\n    o(s) {\n      N(i), o = !1;\n    },\n    d(s) {\n      s && O(n), i.d(s);\n    }\n  };\n}\nfunction Wo(e) {\n  let t, n, o = (\n    /*editableAnnotations*/\n    e[6]\n  ), i = [];\n  for (let r = 0; r < o.length; r += 1)\n    i[r] = Pt(Mt(e, o, r));\n  const s = (r) => N(i[r], 1, 1, () => {\n    i[r] = null;\n  });\n  return {\n    c() {\n      for (let r = 0; r < i.length; r += 1)\n        i[r].c();\n      t = ae();\n    },\n    m(r, l) {\n      for (let a = 0; a < i.length; a += 1)\n        i[a] && i[a].m(r, l);\n      v(r, t, l), n = !0;\n    },\n    p(r, l) {\n      if (l[0] & /*editableAnnotations, drawingEl, style, transform, $scale, onChangeSelected*/\n      140370) {\n        o = /*editableAnnotations*/\n        r[6];\n        let a;\n        for (a = 0; a < o.length; a += 1) {\n          const d = Mt(r, o, a);\n          i[a] ? (i[a].p(d, l), D(i[a], 1)) : (i[a] = Pt(d), i[a].c(), D(i[a], 1), i[a].m(t.parentNode, t));\n        }\n        for (se(), a = o.length; a < i.length; a += 1)\n          s(a);\n        re();\n      }\n    },\n    i(r) {\n      if (!n) {\n        for (let l = 0; l < o.length; l += 1)\n          D(i[l]);\n        n = !0;\n      }\n    },\n    o(r) {\n      i = i.filter(Boolean);\n      for (let l = 0; l < i.length; l += 1)\n        N(i[l]);\n      n = !1;\n    },\n    d(r) {\n      tt(i, r), r && O(t);\n    }\n  };\n}\nfunction It(e) {\n  let t, n;\n  return t = new po({\n    props: {\n      target: (\n        /*drawingEl*/\n        e[4]\n      ),\n      tool: (\n        /*tool*/\n        e[2]\n      ),\n      drawingMode: (\n        /*drawingMode*/\n        e[11]\n      ),\n      transform: (\n        /*transform*/\n        e[10]\n      ),\n      viewportScale: (\n        /*$scale*/\n        e[13]\n      )\n    }\n  }), t.$on(\n    \"create\",\n    /*onSelectionCreated*/\n    e[16]\n  ), {\n    c() {\n      pe(t.$$.fragment);\n    },\n    m(o, i) {\n      ue(t, o, i), n = !0;\n    },\n    p(o, i) {\n      const s = {};\n      i[0] & /*drawingEl*/\n      16 && (s.target = /*drawingEl*/\n      o[4]), i[0] & /*tool*/\n      4 && (s.tool = /*tool*/\n      o[2]), i[0] & /*drawingMode*/\n      2048 && (s.drawingMode = /*drawingMode*/\n      o[11]), i[0] & /*transform*/\n      1024 && (s.transform = /*transform*/\n      o[10]), i[0] & /*$scale*/\n      8192 && (s.viewportScale = /*$scale*/\n      o[13]), t.$set(s);\n    },\n    i(o) {\n      n || (D(t.$$.fragment, o), n = !0);\n    },\n    o(o) {\n      N(t.$$.fragment, o), n = !1;\n    },\n    d(o) {\n      de(t, o);\n    }\n  };\n}\nfunction Ct(e) {\n  let t, n;\n  return t = new mo({\n    props: {\n      target: (\n        /*drawingEl*/\n        e[4]\n      ),\n      editor: wt(\n        /*editable*/\n        e[28].target.selector\n      ),\n      annotation: (\n        /*editable*/\n        e[28]\n      ),\n      style: (\n        /*style*/\n        e[1]\n      ),\n      transform: (\n        /*transform*/\n        e[10]\n      ),\n      viewportScale: (\n        /*$scale*/\n        e[13]\n      )\n    }\n  }), t.$on(\"change\", function() {\n    j(\n      /*onChangeSelected*/\n      e[17](\n        /*editable*/\n        e[28]\n      )\n    ) && e[17](\n      /*editable*/\n      e[28]\n    ).apply(this, arguments);\n  }), {\n    c() {\n      pe(t.$$.fragment);\n    },\n    m(o, i) {\n      ue(t, o, i), n = !0;\n    },\n    p(o, i) {\n      e = o;\n      const s = {};\n      i[0] & /*drawingEl*/\n      16 && (s.target = /*drawingEl*/\n      e[4]), i[0] & /*editableAnnotations*/\n      64 && (s.editor = wt(\n        /*editable*/\n        e[28].target.selector\n      )), i[0] & /*editableAnnotations*/\n      64 && (s.annotation = /*editable*/\n      e[28]), i[0] & /*style*/\n      2 && (s.style = /*style*/\n      e[1]), i[0] & /*transform*/\n      1024 && (s.transform = /*transform*/\n      e[10]), i[0] & /*$scale*/\n      8192 && (s.viewportScale = /*$scale*/\n      e[13]), t.$set(s);\n    },\n    i(o) {\n      n || (D(t.$$.fragment, o), n = !0);\n    },\n    o(o) {\n      N(t.$$.fragment, o), n = !1;\n    },\n    d(o) {\n      de(t, o);\n    }\n  };\n}\nfunction Pt(e) {\n  let t = (\n    /*editable*/\n    e[28].id\n  ), n, o, i = Ct(e);\n  return {\n    c() {\n      i.c(), n = ae();\n    },\n    m(s, r) {\n      i.m(s, r), v(s, n, r), o = !0;\n    },\n    p(s, r) {\n      r[0] & /*editableAnnotations*/\n      64 && K(t, t = /*editable*/\n      s[28].id) ? (se(), N(i, 1, 1, G), re(), i = Ct(s), i.c(), D(i, 1), i.m(n.parentNode, n)) : i.p(s, r);\n    },\n    i(s) {\n      o || (D(i), o = !0);\n    },\n    o(s) {\n      N(i), o = !1;\n    },\n    d(s) {\n      s && O(n), i.d(s);\n    }\n  };\n}\nfunction Jo(e) {\n  let t, n, o, i, s, r, l = (\n    /*$store*/\n    e[12]\n  ), a = [];\n  for (let c = 0; c < l.length; c += 1)\n    a[c] = Bt(Lt(e, l, c));\n  const d = (c) => N(a[c], 1, 1, () => {\n    a[c] = null;\n  });\n  let h = (\n    /*drawingEl*/\n    e[4] && kt(e)\n  );\n  return {\n    c() {\n      t = R(\"svg\"), n = R(\"g\");\n      for (let c = 0; c < a.length; c += 1)\n        a[c].c();\n      o = R(\"g\"), h && h.c(), u(o, \"class\", \"drawing\"), u(t, \"class\", \"a9s-annotationlayer\"), ct(\n        t,\n        \"drawing\",\n        /*tool*/\n        e[2]\n      );\n    },\n    m(c, f) {\n      v(c, t, f), fe(t, n);\n      for (let m = 0; m < a.length; m += 1)\n        a[m] && a[m].m(n, null);\n      fe(t, o), h && h.m(o, null), e[24](o), e[25](t), i = !0, s || (r = [\n        W(t, \"pointerup\", function() {\n          j(\n            /*onPointerUp*/\n            e[8]\n          ) && e[8].apply(this, arguments);\n        }),\n        W(t, \"pointerdown\", function() {\n          j(\n            /*onPointerDown*/\n            e[9]\n          ) && e[9].apply(this, arguments);\n        })\n      ], s = !0);\n    },\n    p(c, f) {\n      if (e = c, f[0] & /*$store, style, isEditable*/\n      4226) {\n        l = /*$store*/\n        e[12];\n        let m;\n        for (m = 0; m < l.length; m += 1) {\n          const g = Lt(e, l, m);\n          a[m] ? (a[m].p(g, f), D(a[m], 1)) : (a[m] = Bt(g), a[m].c(), D(a[m], 1), a[m].m(n, null));\n        }\n        for (se(), m = l.length; m < a.length; m += 1)\n          d(m);\n        re();\n      }\n      /*drawingEl*/\n      e[4] ? h ? (h.p(e, f), f[0] & /*drawingEl*/\n      16 && D(h, 1)) : (h = kt(e), h.c(), D(h, 1), h.m(o, null)) : h && (se(), N(h, 1, 1, () => {\n        h = null;\n      }), re()), (!i || f[0] & /*tool*/\n      4) && ct(\n        t,\n        \"drawing\",\n        /*tool*/\n        e[2]\n      );\n    },\n    i(c) {\n      if (!i) {\n        for (let f = 0; f < l.length; f += 1)\n          D(a[f]);\n        D(h), i = !0;\n      }\n    },\n    o(c) {\n      a = a.filter(Boolean);\n      for (let f = 0; f < a.length; f += 1)\n        N(a[f]);\n      N(h), i = !1;\n    },\n    d(c) {\n      c && O(t), tt(a, c), h && h.d(), e[24](null), e[25](null), s = !1, le(r);\n    }\n  };\n}\nfunction Qo(e, t, n) {\n  let o, i, s, r, l, a, d, h, c = G, f = () => (c(), c = Xt(w, (I) => n(13, h = I)), w);\n  e.$$.on_destroy.push(() => c());\n  let { drawingEnabled: m } = t, { image: g } = t, { preferredDrawingMode: p } = t, { state: y } = t, { style: L = void 0 } = t, { tool: E, opts: k } = Vt(\"rectangle\"), { tool: b = E, opts: Y = k } = t, { user: U } = t, X, _, w;\n  Ce(() => f(n(5, w = Eo(g, _))));\n  const { selection: A, store: S } = y;\n  at(e, A, (I) => n(23, a = I)), at(e, S, (I) => n(12, d = I));\n  let B = null, P = null;\n  const Q = (I) => {\n    S.unobserve(B);\n    const J = I.filter(({ editable: H }) => H).map(({ id: H }) => H);\n    J.length > 0 ? (n(6, P = J.map((H) => S.getAnnotation(H))), B = (H) => {\n      const { updated: V } = H.changes;\n      n(6, P = V.map((ie) => ie.newValue));\n    }, S.observe(B, { annotations: J })) : n(6, P = null);\n  }, ce = (I) => {\n    const J = it(), H = {\n      id: J,\n      bodies: [],\n      target: {\n        annotation: J,\n        selector: I.detail,\n        creator: U,\n        created: /* @__PURE__ */ new Date()\n      }\n    };\n    S.addAnnotation(H), A.setSelected(H.id);\n  }, oe = (I) => (J) => {\n    var he;\n    const { target: H } = I, V = 10 * 60 * 1e3, ie = ((he = H.creator) == null ? void 0 : he.id) !== U.id || !H.created || (/* @__PURE__ */ new Date()).getTime() - H.created.getTime() > V;\n    S.updateTarget({\n      ...H,\n      selector: J.detail,\n      created: ie ? H.created : /* @__PURE__ */ new Date(),\n      updated: ie ? /* @__PURE__ */ new Date() : null,\n      updatedBy: ie ? U : null\n    });\n  };\n  function Le(I) {\n    Se[I ? \"unshift\" : \"push\"](() => {\n      X = I, n(4, X);\n    });\n  }\n  function Z(I) {\n    Se[I ? \"unshift\" : \"push\"](() => {\n      _ = I, n(3, _);\n    });\n  }\n  return e.$$set = (I) => {\n    \"drawingEnabled\" in I && n(0, m = I.drawingEnabled), \"image\" in I && n(18, g = I.image), \"preferredDrawingMode\" in I && n(19, p = I.preferredDrawingMode), \"state\" in I && n(20, y = I.state), \"style\" in I && n(1, L = I.style), \"tool\" in I && n(2, b = I.tool), \"opts\" in I && n(21, Y = I.opts), \"user\" in I && n(22, U = I.user);\n  }, e.$$.update = () => {\n    e.$$.dirty[0] & /*opts, preferredDrawingMode*/\n    2621440 && n(11, o = (Y == null ? void 0 : Y.drawingMode) || p), e.$$.dirty[0] & /*svgEl*/\n    8 && n(10, i = Uo(_)), e.$$.dirty[0] & /*svgEl*/\n    8 && n(9, { onPointerDown: s, onPointerUp: r } = Ho(_, S), s, (n(8, r), n(3, _))), e.$$.dirty[0] & /*$selection*/\n    8388608 && n(7, l = (I) => a.selected.find((J) => J.id === I.id && J.editable)), e.$$.dirty[0] & /*$selection*/\n    8388608 && Q(a.selected);\n  }, [\n    m,\n    L,\n    b,\n    _,\n    X,\n    w,\n    P,\n    l,\n    r,\n    s,\n    i,\n    o,\n    d,\n    h,\n    A,\n    S,\n    ce,\n    oe,\n    g,\n    p,\n    y,\n    Y,\n    U,\n    a,\n    Le,\n    Z\n  ];\n}\nclass Zo extends ne {\n  constructor(t) {\n    super(), te(\n      this,\n      t,\n      Qo,\n      Jo,\n      K,\n      {\n        drawingEnabled: 0,\n        image: 18,\n        preferredDrawingMode: 19,\n        state: 20,\n        style: 1,\n        tool: 2,\n        opts: 21,\n        user: 22\n      },\n      null,\n      [-1, -1]\n    );\n  }\n}\nfunction Ko(e, t, n, o, i) {\n  qt(e, t, n || 0, o || e.length - 1, i || xo);\n}\nfunction qt(e, t, n, o, i) {\n  for (; o > n; ) {\n    if (o - n > 600) {\n      var s = o - n + 1, r = t - n + 1, l = Math.log(s), a = 0.5 * Math.exp(2 * l / 3), d = 0.5 * Math.sqrt(l * a * (s - a) / s) * (r - s / 2 < 0 ? -1 : 1), h = Math.max(n, Math.floor(t - r * a / s + d)), c = Math.min(o, Math.floor(t + (s - r) * a / s + d));\n      qt(e, t, h, c, i);\n    }\n    var f = e[t], m = n, g = o;\n    for (Oe(e, n, t), i(e[o], f) > 0 && Oe(e, n, o); m < g; ) {\n      for (Oe(e, m, g), m++, g--; i(e[m], f) < 0; )\n        m++;\n      for (; i(e[g], f) > 0; )\n        g--;\n    }\n    i(e[n], f) === 0 ? Oe(e, n, g) : (g++, Oe(e, g, o)), g <= t && (n = g + 1), t <= g && (o = g - 1);\n  }\n}\nfunction Oe(e, t, n) {\n  var o = e[t];\n  e[t] = e[n], e[n] = o;\n}\nfunction xo(e, t) {\n  return e < t ? -1 : e > t ? 1 : 0;\n}\nclass $o {\n  constructor(t = 9) {\n    this._maxEntries = Math.max(4, t), this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4)), this.clear();\n  }\n  all() {\n    return this._all(this.data, []);\n  }\n  search(t) {\n    let n = this.data;\n    const o = [];\n    if (!Ue(t, n))\n      return o;\n    const i = this.toBBox, s = [];\n    for (; n; ) {\n      for (let r = 0; r < n.children.length; r++) {\n        const l = n.children[r], a = n.leaf ? i(l) : l;\n        Ue(t, a) && (n.leaf ? o.push(l) : xe(t, a) ? this._all(l, o) : s.push(l));\n      }\n      n = s.pop();\n    }\n    return o;\n  }\n  collides(t) {\n    let n = this.data;\n    if (!Ue(t, n))\n      return !1;\n    const o = [];\n    for (; n; ) {\n      for (let i = 0; i < n.children.length; i++) {\n        const s = n.children[i], r = n.leaf ? this.toBBox(s) : s;\n        if (Ue(t, r)) {\n          if (n.leaf || xe(t, r))\n            return !0;\n          o.push(s);\n        }\n      }\n      n = o.pop();\n    }\n    return !1;\n  }\n  load(t) {\n    if (!(t && t.length))\n      return this;\n    if (t.length < this._minEntries) {\n      for (let o = 0; o < t.length; o++)\n        this.insert(t[o]);\n      return this;\n    }\n    let n = this._build(t.slice(), 0, t.length - 1, 0);\n    if (!this.data.children.length)\n      this.data = n;\n    else if (this.data.height === n.height)\n      this._splitRoot(this.data, n);\n    else {\n      if (this.data.height < n.height) {\n        const o = this.data;\n        this.data = n, n = o;\n      }\n      this._insert(n, this.data.height - n.height - 1, !0);\n    }\n    return this;\n  }\n  insert(t) {\n    return t && this._insert(t, this.data.height - 1), this;\n  }\n  clear() {\n    return this.data = Ee([]), this;\n  }\n  remove(t, n) {\n    if (!t)\n      return this;\n    let o = this.data;\n    const i = this.toBBox(t), s = [], r = [];\n    let l, a, d;\n    for (; o || s.length; ) {\n      if (o || (o = s.pop(), a = s[s.length - 1], l = r.pop(), d = !0), o.leaf) {\n        const h = ei(t, o.children, n);\n        if (h !== -1)\n          return o.children.splice(h, 1), s.push(o), this._condense(s), this;\n      }\n      !d && !o.leaf && xe(o, i) ? (s.push(o), r.push(l), l = 0, a = o, o = o.children[0]) : a ? (l++, o = a.children[l], d = !1) : o = null;\n    }\n    return this;\n  }\n  toBBox(t) {\n    return t;\n  }\n  compareMinX(t, n) {\n    return t.minX - n.minX;\n  }\n  compareMinY(t, n) {\n    return t.minY - n.minY;\n  }\n  toJSON() {\n    return this.data;\n  }\n  fromJSON(t) {\n    return this.data = t, this;\n  }\n  _all(t, n) {\n    const o = [];\n    for (; t; )\n      t.leaf ? n.push(...t.children) : o.push(...t.children), t = o.pop();\n    return n;\n  }\n  _build(t, n, o, i) {\n    const s = o - n + 1;\n    let r = this._maxEntries, l;\n    if (s <= r)\n      return l = Ee(t.slice(n, o + 1)), we(l, this.toBBox), l;\n    i || (i = Math.ceil(Math.log(s) / Math.log(r)), r = Math.ceil(s / Math.pow(r, i - 1))), l = Ee([]), l.leaf = !1, l.height = i;\n    const a = Math.ceil(s / r), d = a * Math.ceil(Math.sqrt(r));\n    Yt(t, n, o, d, this.compareMinX);\n    for (let h = n; h <= o; h += d) {\n      const c = Math.min(h + d - 1, o);\n      Yt(t, h, c, a, this.compareMinY);\n      for (let f = h; f <= c; f += a) {\n        const m = Math.min(f + a - 1, c);\n        l.children.push(this._build(t, f, m, i - 1));\n      }\n    }\n    return we(l, this.toBBox), l;\n  }\n  _chooseSubtree(t, n, o, i) {\n    for (; i.push(n), !(n.leaf || i.length - 1 === o); ) {\n      let s = 1 / 0, r = 1 / 0, l;\n      for (let a = 0; a < n.children.length; a++) {\n        const d = n.children[a], h = Ke(d), c = oi(t, d) - h;\n        c < r ? (r = c, s = h < s ? h : s, l = d) : c === r && h < s && (s = h, l = d);\n      }\n      n = l || n.children[0];\n    }\n    return n;\n  }\n  _insert(t, n, o) {\n    const i = o ? t : this.toBBox(t), s = [], r = this._chooseSubtree(i, this.data, n, s);\n    for (r.children.push(t), Be(r, i); n >= 0 && s[n].children.length > this._maxEntries; )\n      this._split(s, n), n--;\n    this._adjustParentBBoxes(i, s, n);\n  }\n  // split overflowed node into two\n  _split(t, n) {\n    const o = t[n], i = o.children.length, s = this._minEntries;\n    this._chooseSplitAxis(o, s, i);\n    const r = this._chooseSplitIndex(o, s, i), l = Ee(o.children.splice(r, o.children.length - r));\n    l.height = o.height, l.leaf = o.leaf, we(o, this.toBBox), we(l, this.toBBox), n ? t[n - 1].children.push(l) : this._splitRoot(o, l);\n  }\n  _splitRoot(t, n) {\n    this.data = Ee([t, n]), this.data.height = t.height + 1, this.data.leaf = !1, we(this.data, this.toBBox);\n  }\n  _chooseSplitIndex(t, n, o) {\n    let i, s = 1 / 0, r = 1 / 0;\n    for (let l = n; l <= o - n; l++) {\n      const a = ve(t, 0, l, this.toBBox), d = ve(t, l, o, this.toBBox), h = ii(a, d), c = Ke(a) + Ke(d);\n      h < s ? (s = h, i = l, r = c < r ? c : r) : h === s && c < r && (r = c, i = l);\n    }\n    return i || o - n;\n  }\n  // sorts node children by the best axis for split\n  _chooseSplitAxis(t, n, o) {\n    const i = t.leaf ? this.compareMinX : ti, s = t.leaf ? this.compareMinY : ni, r = this._allDistMargin(t, n, o, i), l = this._allDistMargin(t, n, o, s);\n    r < l && t.children.sort(i);\n  }\n  // total margin of all possible split distributions where each node is at least m full\n  _allDistMargin(t, n, o, i) {\n    t.children.sort(i);\n    const s = this.toBBox, r = ve(t, 0, n, s), l = ve(t, o - n, o, s);\n    let a = Ne(r) + Ne(l);\n    for (let d = n; d < o - n; d++) {\n      const h = t.children[d];\n      Be(r, t.leaf ? s(h) : h), a += Ne(r);\n    }\n    for (let d = o - n - 1; d >= n; d--) {\n      const h = t.children[d];\n      Be(l, t.leaf ? s(h) : h), a += Ne(l);\n    }\n    return a;\n  }\n  _adjustParentBBoxes(t, n, o) {\n    for (let i = o; i >= 0; i--)\n      Be(n[i], t);\n  }\n  _condense(t) {\n    for (let n = t.length - 1, o; n >= 0; n--)\n      t[n].children.length === 0 ? n > 0 ? (o = t[n - 1].children, o.splice(o.indexOf(t[n]), 1)) : this.clear() : we(t[n], this.toBBox);\n  }\n}\nfunction ei(e, t, n) {\n  if (!n)\n    return t.indexOf(e);\n  for (let o = 0; o < t.length; o++)\n    if (n(e, t[o]))\n      return o;\n  return -1;\n}\nfunction we(e, t) {\n  ve(e, 0, e.children.length, t, e);\n}\nfunction ve(e, t, n, o, i) {\n  i || (i = Ee(null)), i.minX = 1 / 0, i.minY = 1 / 0, i.maxX = -1 / 0, i.maxY = -1 / 0;\n  for (let s = t; s < n; s++) {\n    const r = e.children[s];\n    Be(i, e.leaf ? o(r) : r);\n  }\n  return i;\n}\nfunction Be(e, t) {\n  return e.minX = Math.min(e.minX, t.minX), e.minY = Math.min(e.minY, t.minY), e.maxX = Math.max(e.maxX, t.maxX), e.maxY = Math.max(e.maxY, t.maxY), e;\n}\nfunction ti(e, t) {\n  return e.minX - t.minX;\n}\nfunction ni(e, t) {\n  return e.minY - t.minY;\n}\nfunction Ke(e) {\n  return (e.maxX - e.minX) * (e.maxY - e.minY);\n}\nfunction Ne(e) {\n  return e.maxX - e.minX + (e.maxY - e.minY);\n}\nfunction oi(e, t) {\n  return (Math.max(t.maxX, e.maxX) - Math.min(t.minX, e.minX)) * (Math.max(t.maxY, e.maxY) - Math.min(t.minY, e.minY));\n}\nfunction ii(e, t) {\n  const n = Math.max(e.minX, t.minX), o = Math.max(e.minY, t.minY), i = Math.min(e.maxX, t.maxX), s = Math.min(e.maxY, t.maxY);\n  return Math.max(0, i - n) * Math.max(0, s - o);\n}\nfunction xe(e, t) {\n  return e.minX <= t.minX && e.minY <= t.minY && t.maxX <= e.maxX && t.maxY <= e.maxY;\n}\nfunction Ue(e, t) {\n  return t.minX <= e.maxX && t.minY <= e.maxY && t.maxX >= e.minX && t.maxY >= e.minY;\n}\nfunction Ee(e) {\n  return {\n    children: e,\n    height: 1,\n    leaf: !0,\n    minX: 1 / 0,\n    minY: 1 / 0,\n    maxX: -1 / 0,\n    maxY: -1 / 0\n  };\n}\nfunction Yt(e, t, n, o, i) {\n  const s = [t, n];\n  for (; s.length; ) {\n    if (n = s.pop(), t = s.pop(), n - t <= o)\n      continue;\n    const r = t + Math.ceil((n - t) / o / 2) * o;\n    Ko(e, r, t, n, i), s.push(t, r, r, n);\n  }\n}\nconst si = () => {\n  const e = new $o(), t = /* @__PURE__ */ new Map(), n = () => [...t.values()], o = () => {\n    e.clear(), t.clear();\n  }, i = (c) => {\n    const { minX: f, minY: m, maxX: g, maxY: p } = c.selector.geometry.bounds, y = { minX: f, minY: m, maxX: g, maxY: p, target: c };\n    e.insert(y), t.set(c.annotation, y);\n  }, s = (c) => {\n    const f = t.get(c.annotation);\n    e.remove(f), t.delete(c.annotation);\n  };\n  return {\n    all: n,\n    clear: o,\n    getAt: (c, f) => {\n      const g = e.search({\n        minX: c,\n        minY: f,\n        maxX: c,\n        maxY: f\n      }).map((p) => p.target).filter((p) => p.selector.type === z.RECTANGLE || ln(p.selector, c, f));\n      if (g.length > 0)\n        return g.sort((p, y) => ut(p.selector) - ut(y.selector)), g[0];\n    },\n    getIntersecting: (c, f, m, g) => e.search({\n      minX: c,\n      minY: f,\n      maxX: c + m,\n      maxY: f + g\n    }).map((p) => p.target),\n    insert: i,\n    remove: s,\n    set: (c, f = !0) => {\n      f && o();\n      const m = c.map((g) => {\n        const { minX: p, minY: y, maxX: L, maxY: E } = g.selector.geometry.bounds;\n        return { minX: p, minY: y, maxX: L, maxY: E, target: g };\n      });\n      m.forEach((g) => t.set(g.target.annotation, g)), e.load(m);\n    },\n    size: () => e.all().length,\n    update: (c, f) => {\n      s(c), i(f);\n    }\n  };\n}, ri = (e) => {\n  const t = Pn(), n = si(), o = Sn(t, e.pointerSelectAction), i = Tn(t), s = Rn();\n  return t.observe(({ changes: a }) => {\n    n.set(a.created.map((d) => d.target), !1), a.deleted.forEach((d) => n.remove(d.target)), a.updated.forEach(({ oldValue: d, newValue: h }) => n.update(d.target, h.target));\n  }), {\n    store: {\n      ...t,\n      getAt: (a, d) => {\n        const h = n.getAt(a, d);\n        return h ? t.getAnnotation(h.annotation) : void 0;\n      },\n      getIntersecting: (a, d, h, c) => n.getIntersecting(a, d, h, c).map((f) => t.getAnnotation(f.annotation))\n    },\n    selection: o,\n    hover: i,\n    viewport: s\n  };\n}, li = (e) => {\n  const t = ri(e);\n  return {\n    ...t,\n    store: Yn(t.store)\n  };\n}, ai = (e) => {\n  let t, n;\n  if (e.nodeName === \"CANVAS\")\n    t = e, n = t.getContext(\"2d\", { willReadFrequently: !0 });\n  else {\n    const i = e;\n    t = document.createElement(\"canvas\"), t.width = i.width, t.height = i.height, n = t.getContext(\"2d\", { willReadFrequently: !0 }), n.drawImage(i, 0, 0, i.width, i.height);\n  }\n  let o = 0;\n  for (let i = 1; i < 10; i++)\n    for (let s = 1; s < 10; s++) {\n      const r = Math.round(s * t.width / 10), l = Math.round(i * t.height / 10), a = n.getImageData(r, l, 1, 1).data, d = (0.299 * a[0] + 0.587 * a[1] + 0.114 * a[2]) / 255;\n      o += d;\n    }\n  return o / 81;\n}, ci = (e, t) => {\n  const n = ai(e), o = n > 0.6 ? \"dark\" : \"light\";\n  console.log(`[Annotorious] Image brightness: ${n.toFixed(1)}. Setting ${o} theme.`), t.setAttribute(\"data-theme\", o);\n}, fi = (e) => ({\n  ...e,\n  drawingEnabled: e.drawingEnabled === void 0 ? !0 : e.drawingEnabled,\n  drawingMode: e.drawingMode || \"drag\",\n  pointerSelectAction: e.pointerSelectAction || Ft.EDIT\n});\nconst wi = (e, t = {}) => {\n  if (!e)\n    throw \"Missing argument: image\";\n  const n = typeof e == \"string\" ? document.getElementById(e) : e, o = fi(t), i = li(o), { hover: s, selection: r, store: l } = i, a = Xn(\n    l,\n    r,\n    s,\n    void 0,\n    o.adapter,\n    o.autoSave\n  );\n  let d = zn();\n  const h = document.createElement(\"DIV\");\n  h.style.position = \"relative\", h.style.display = \"inline-block\", n.style.display = \"block\", n.parentNode.insertBefore(h, n), h.appendChild(n), ci(n, h);\n  const c = new Zo({\n    target: h,\n    props: {\n      drawingEnabled: o.drawingEnabled,\n      image: n,\n      preferredDrawingMode: o.drawingMode,\n      state: i,\n      style: o.style,\n      user: d\n    }\n  });\n  c.$on(\"click\", (X) => {\n    const { originalEvent: _, annotation: w } = X.detail;\n    w ? r.clickSelect(w.id, _) : r.isEmpty() || r.clear();\n  });\n  const f = Nn(l, o.adapter), m = () => {\n    c.$destroy(), h.parentNode.insertBefore(n, h), h.parentNode.removeChild(h);\n  }, g = () => d, p = (X, _, w) => Oo(X, _, w), y = (X, _) => ao(X, _), L = (X) => {\n    const { tool: _, opts: w } = Vt(X);\n    c.$set({ tool: _, opts: w });\n  }, E = (X) => c.$set({ drawingEnabled: X }), k = (X) => {\n    console.warn(\"Filter not implemented yet\");\n  }, b = (X) => {\n    X ? r.setSelected(X) : r.clear();\n  }, Y = (X) => c.$set({ style: X }), U = (X) => {\n    d = X, c.$set({ user: X });\n  };\n  return {\n    ...f,\n    destroy: m,\n    getUser: g,\n    listDrawingTools: Lo,\n    on: a.on,\n    off: a.off,\n    registerDrawingTool: p,\n    registerShapeEditor: y,\n    setDrawingEnabled: E,\n    setDrawingTool: L,\n    setFilter: k,\n    setSelected: b,\n    setStyle: Y,\n    setUser: U,\n    state: i\n  };\n};\nexport {\n  jt as Editor,\n  mo as EditorMount,\n  M as Handle,\n  yi as IdentityTransform,\n  mi as PRESENCE_KEY,\n  oo as PolygonEditor,\n  lo as RectangleEditor,\n  fn as RectangleUtil,\n  wo as RubberbandRectangle,\n  Zo as SVGAnnotationLayer,\n  z as ShapeType,\n  po as ToolMount,\n  pi as W3CImageFormat,\n  Ho as addEventListeners,\n  He as boundsFromPoints,\n  ut as computeArea,\n  zn as createAnonymousGuest,\n  Nn as createBaseAnnotator,\n  di as createBody,\n  Qn as createDefaultAppearenceProvider,\n  wi as createImageAnnotator,\n  ri as createImageAnnotatorState,\n  gi as createPresenceState,\n  Uo as createSVGTransform,\n  li as createSvelteImageAnnotatorState,\n  Jn as defaultColorProvider,\n  kn as diffAnnotations,\n  At as distance,\n  Eo as enableResponsive,\n  fi as fillDefaults,\n  ui as getContributors,\n  wt as getEditor,\n  Vt as getTool,\n  ln as intersects,\n  _i as isTouch,\n  Lo as listDrawingTools,\n  Dn as parseAll,\n  un as parseFragmentSelector,\n  _n as parseSVGSelector,\n  Vn as parseW3CBodies,\n  xn as parseW3CImageAnnotation,\n  ao as registerEditor,\n  ot as registerShapeUtil,\n  Oo as registerTool,\n  ai as sampleBrightness,\n  hi as serializeAll,\n  dn as serializeFragmentSelector,\n  yn as serializeSVGSelector,\n  qn as serializeW3CBodies,\n  $n as serializeW3CImageAnnotation,\n  ci as setTheme\n};\n//# sourceMappingURL=annotorious.es.js.map\n","function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction split_css_unit(value) {\n    const split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n    return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];\n}\nconst contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nclass ResizeObserverSingleton {\n    constructor(options) {\n        this.options = options;\n        this._listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n    }\n    observe(element, listener) {\n        this._listeners.set(element, listener);\n        this._getObserver().observe(element, this.options);\n        return () => {\n            this._listeners.delete(element);\n            this._observer.unobserve(element); // this line can probably be removed\n        };\n    }\n    _getObserver() {\n        var _a;\n        return (_a = this._observer) !== null && _a !== void 0 ? _a : (this._observer = new ResizeObserver((entries) => {\n            var _a;\n            for (const entry of entries) {\n                ResizeObserverSingleton.entries.set(entry.target, entry);\n                (_a = this._listeners.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n            }\n        }));\n    }\n}\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction comment(content) {\n    return document.createComment(content);\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set && always_set_through_set_attribute.indexOf(key) === -1) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction claim_comment(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 8, (node) => {\n        node.data = '' + data;\n        return undefined;\n    }, () => comment(data), true);\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_data_contenteditable(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable(text, data);\n    }\n    else {\n        set_data(text, data);\n    }\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value == null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_iframe_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nconst resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'content-box' });\nconst resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'border-box' });\nconst resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'device-pixel-content-box' });\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.59.2' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_contenteditable_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable_dev(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable_dev(text, data);\n    }\n    else {\n        set_data_dev(text, data);\n    }\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, ResizeObserverSingleton, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_iframe_resize_listener, add_location, add_render_callback, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_comment, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, comment, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, contenteditable_truthy_values, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, resize_observer_border_box, resize_observer_content_box, resize_observer_device_pixel_content_box, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_contenteditable, set_data_contenteditable_dev, set_data_dev, set_data_maybe_contenteditable, set_data_maybe_contenteditable_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, split_css_unit, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import type { AbstractSelector } from '@annotorious/core';\n\nexport interface Shape extends AbstractSelector {\n\n  type: ShapeType;\n\n  geometry: Geometry;\n\n}\n\nexport enum ShapeType {\n\n  ELLIPSE = 'ELLIPSE',\n\n  POLYGON = 'POLYGON',\n\n  RECTANGLE = 'RECTANGLE'\n\n}\n\nexport interface Geometry {\n\n  bounds: Bounds;\n\n}\n\nexport interface Bounds {\n\n  minX: number;\n\n  minY: number;\n\n  maxX: number;\n\n  maxY: number;\n\n}","import type { Bounds, Shape, ShapeType } from './Shape';\n\nexport interface ShapeUtil<T extends Shape> {\n\n  area: (shape: T) => number;\n\n  intersects: (shape: T, x: number, y: number) => boolean;\n\n}\n\nconst Utils: { [key: string]: ShapeUtil<any> } = {};\n\n/**\n * Registers a new ShapeUtil for a given shape type.\n * @param type the shape type\n * @param util the ShapeUtil implementation for this shape type\n */\nexport const registerShapeUtil = (type: ShapeType | string, util: ShapeUtil<any>) =>\n  (Utils[type] = util);\n\n/**\n * Computes the area of the given shape. Delegates to the corresponding ShapeUtil.\n * @param shape the shape\n */\nexport const computeArea = (shape: Shape) => Utils[shape.type].area(shape);\n\n/**\n * Tests if the given shape intersects the given point. Delegates to\n * the corresponding ShapeUtil.\n * @param shape the shape\n * @param x point x coord\n * @param y point y coord\n * @returns true if shape and point intersect\n */\nexport const intersects = (shape: Shape, x: number, y: number): boolean =>\n  Utils[shape.type].intersects(shape, x, y);\n\n/**\n * Computes Bounds from a given list of points.\n * @param points the points\n * @returns the Bounds\n */\nexport const boundsFromPoints = (points: Array<[number, number]>): Bounds => {\n  let minX = Infinity;\n  let minY = Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n\n  points.forEach(([x, y]) => {\n    minX = Math.min(minX, x);\n    minY = Math.min(minY, y);\n    maxX = Math.max(maxX, x);\n    maxY = Math.max(maxY, y);\n  });\n\n  return { minX, minY, maxX, maxY };\n};","import { ShapeType } from '../Shape';\nimport { registerShapeUtil, type ShapeUtil } from '../shapeUtils';\nimport type { Ellipse } from './Ellipse';\n\nconst EllipseUtil: ShapeUtil<Ellipse> = {\n\n  area: (e: Ellipse): number => Math.PI * e.geometry.rx * e.geometry.ry,\n\n  intersects: (e: Ellipse, x: number, y: number): boolean => {\n    const { cx, cy, rx, ry } = e.geometry;\n\n    // For future use\n    const rot = 0;\n\n    const cos = Math.cos(rot);\n    const sin = Math.sin(rot);\n  \n    const dx  = x - cx;\n    const dy  = y - cy;\n  \n    const tdx = cos * dx + sin * dy;\n    const tdy = sin * dx - cos * dy;\n  \n    return (tdx * tdx) / (rx * rx) + (tdy * tdy) / (ry * ry) <= 1;\n  }\n};\n\nregisterShapeUtil(ShapeType.ELLIPSE, EllipseUtil);","import { ShapeType } from '../Shape';\nimport { registerShapeUtil, type ShapeUtil } from '../shapeUtils';\nimport type { Polygon } from './Polygon';\n\nconst PolygonUtil: ShapeUtil<Polygon> = {\n\n  area: (polygon: Polygon): number => {\n    const { points } = polygon.geometry;\n\n    let area = 0;\n    let j = points.length - 1;\n\n    for (let i = 0; i < points.length; i++) {\n      area += (points[j][0] + points[i][0]) * (points[j][1] - points[i][1]);\n      j = i;\n    }\n\n    return Math.abs(0.5 * area);\n  },\n\n  intersects: (polygon: Polygon, x: number, y: number): boolean => {\n    // Based on https://wrf.ecse.rpi.edu/Research/Short_Notes/pnpoly.html/pnpoly.html\n    const { points } = polygon.geometry;\n\n    let inside = false;\n\n    for (let i = 0, j = points.length - 1; i < points.length; j = i++) {\n      const xi = points[i][0],\n        yi = points[i][1];\n      const xj = points[j][0],\n        yj = points[j][1];\n\n      const intersect = yi > y != yj > y && x < ((xj - xi) * (y - yi)) / (yj - yi) + xi;\n\n      if (intersect) inside = !inside;\n    }\n\n    return inside;\n  }\n  \n};\n\nregisterShapeUtil(ShapeType.POLYGON, PolygonUtil);","import { ShapeType } from '../Shape';\nimport type { Rectangle } from './Rectangle';\nimport { registerShapeUtil, type ShapeUtil } from '../shapeUtils';\n\nexport const RectangleUtil: ShapeUtil<Rectangle> = {\n\n  area: (rect: Rectangle): number => rect.geometry.w * rect.geometry.h,\n\n  intersects: (rect: Rectangle, x: number, y: number): boolean =>\n    x >= rect.geometry.x &&\n    x <= rect.geometry.x + rect.geometry.w &&\n    y >= rect.geometry.y &&\n    y <= rect.geometry.y + rect.geometry.h\n    \n};\n\nregisterShapeUtil(ShapeType.RECTANGLE, RectangleUtil);","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { nanoid } from 'nanoid';\nimport { createNanoEvents, type Unsubscribe } from 'nanoevents';\nimport type { User } from '../model';\nimport type { PresentUser } from './PresentUser';\nimport type { PresenceEvents } from './PresenceEvents';\nimport { createDefaultAppearenceProvider } from './AppearanceProvider';\nimport type { AppearanceProvider } from './AppearanceProvider';\n\nexport interface PresenceState {\n\n  // Get users currently present to this room\n  getPresentUsers(): PresentUser[];\n\n  // Notify of a given present user's activity on the given annotations\n  notifyActivity(presenceKey: string, annotationIds: string[]): void;\n\n  // Add a listener for the given presence event\n  on<E extends keyof PresenceEvents>(event: E, callback: PresenceEvents[E]): Unsubscribe;\n\n  // Initial sync - which users are present under which keys\n  syncUsers(state: { presenceKey: string, user: User }[]): void;\n\n  // Update the selection state for the given prresent user\n  updateSelection(presenceKey: string, selection: string[] | null): void;\n\n}\n\nconst isListEqual = (listA: any[], listB: any[]) => \n  listA.every(a => listA.includes(a)) && listB.every(b => listA.includes(b));\n\n// This client's presence key\nexport const PRESENCE_KEY = nanoid();\n\nexport const createPresenceState = (\n  appearanceProvider: AppearanceProvider = createDefaultAppearenceProvider()\n): PresenceState => {\n\n  const emitter = createNanoEvents<PresenceEvents>();\n\n  const presentUsers = new Map<string, PresentUser>();\n\n  const selectionStates = new Map<string, string[]>();\n\n  const addUser = (presenceKey: string, user: User) => {\n    if (presentUsers.has(presenceKey)) {\n      console.warn('Attempt to add user that is already present', presenceKey, user);\n      return;    \n    }\n\n    const appearance = appearanceProvider.addUser(presenceKey, user);\n\n    presentUsers.set(presenceKey, { \n      ...user,\n      presenceKey,\n      appearance\n    });\n  }\n\n  const removeUser = (presenceKey: string) => {\n    const user = presentUsers.get(presenceKey);\n    if (!user) {\n      console.warn('Attempt to remove user that is not present', presenceKey);\n      return;\n    }\n\n    appearanceProvider.removeUser(user);\n\n    presentUsers.delete(presenceKey);\n  }\n\n  const syncUsers = (state: { presenceKey: string, user: User }[]) => {\n    // const keys = new Set(others.map(s => s.presenceKey));\n    const keys = new Set(state.map(s => s.presenceKey));\n\n    // These users need to be added to the presentUsers list\n    // const toAdd = others.filter(({ presenceKey }) => !presentUsers.has(presenceKey));\n    const toAdd = state.filter(({ presenceKey }) => !presentUsers.has(presenceKey));\n\n    // These users need to be dropped from the list\n    const toRemove = Array.from(presentUsers.values()).filter(presentUser =>\n      !keys.has(presentUser.presenceKey));\n\n    toAdd.forEach(({ presenceKey, user }) => addUser(presenceKey, user));\n\n    toRemove.forEach(user => {\n      const { presenceKey } = user;\n\n      // If this user has a selection, fire deselect event\n      if (selectionStates.has(presenceKey))\n        emitter.emit('selectionChange', user, null);\n\n      removeUser(presenceKey)\n    });\n\n    if (toAdd.length > 0 || toRemove.length > 0)\n      emitter.emit('presence', getPresentUsers());\n  }\n\n  const notifyActivity = (presenceKey: string, annotationIds: string[]) => {    \n    const user = presentUsers.get(presenceKey);\n    \n    if (!user) {\n      console.warn('Activity notification from user that is not present');\n      return;\n    }\n\n    const currentSelection = selectionStates.get(presenceKey);\n\n    // Was there a selection change we might have missed?\n    if (!currentSelection || !isListEqual(currentSelection, annotationIds)) {\n      selectionStates.set(presenceKey, annotationIds);\n      emitter.emit('selectionChange', user, annotationIds);\n    }\n  }\n\n  const updateSelection = (presenceKey: string, selection: string[] | null) => {\n    const from = presentUsers.get(presenceKey);\n    if (!from) {\n      console.warn('Selection change for user that is not present', presenceKey);\n      return;\n    }\n\n    if (selection)\n      selectionStates.set(presenceKey, selection);\n    else \n      selectionStates.delete(presenceKey);\n\n    emitter.emit('selectionChange', from, selection);\n  }\n\n  const getPresentUsers = () =>\n    [...Array.from(presentUsers.values())];\n    \n  const on = <E extends keyof PresenceEvents>(event: E, callback: PresenceEvents[E]) =>\n    emitter.on(event, callback);\n\n  return {\n    getPresentUsers,\n    notifyActivity,\n    on,\n    syncUsers,\n    updateSelection\n  }\n\n}","<script type=\"ts\">\n  import { boundsFromPoints } from '../../../model';\n  import type { Polygon } from '../../../model';\n  import type { Transform } from '../../Transform';\n  import { Editor, Handle } from '..';\n\n  /** Props */\n  export let shape: Polygon;\n  export let computedStyle: string = undefined;\n  export let transform: Transform;\n  export let viewportScale: number = 1;\n\n  $: geom = shape.geometry;\n\n  $: handleSize = 10 / viewportScale;\n\n  const editor = (polygon: Polygon, handle: Handle, delta: [number, number]) => {\n    let points: [number, number][];\n\n    if (handle === Handle.SHAPE) {\n      points = polygon.geometry.points.map(([x, y]) => [x + delta[0], y + delta[1]]);\n    } else {\n      points = polygon.geometry.points.map(([x, y], idx) =>\n        handle === Handle(idx) ? [x + delta[0], y + delta[1]] : [x, y]\n      );\n    }\n\n    const bounds = boundsFromPoints(points);\n\n    return {\n      ...polygon,\n      geometry: { points, bounds }\n    }\n  }\n</script>\n\n<Editor\n  shape={shape}\n  transform={transform}\n  editor={editor}\n  on:change \n  on:grab\n  on:release\n  let:grab={grab}>\n\n  <polygon\n    class=\"a9s-outer\"\n    style={computedStyle ? 'display:none;' : undefined}\n    on:pointerdown={grab(Handle.SHAPE)}\n    points={geom.points.map(xy => xy.join(',')).join(' ')} />\n\n  <polygon\n    class=\"a9s-inner a9s-shape-handle\"\n    style={computedStyle}\n    on:pointerdown={grab(Handle.SHAPE)}\n    points={geom.points.map(xy => xy.join(',')).join(' ')} />\n\n  {#each geom.points as point, idx}\n    <rect \n      class=\"a9s-corner-handle\"\n      on:pointerdown={grab(Handle(idx))}\n      x={point[0] - handleSize / 2} y={point[1] - handleSize / 2} height={handleSize} width={handleSize} />\n  {/each}\n</Editor>","<script type=\"ts\">\n  import type { Rectangle } from '../../../model';\n  import type { Transform } from '../../Transform';\n  import { Editor, Handle } from '..';\n\n  /** Props */\n  export let shape: Rectangle;\n  export let computedStyle: string = undefined;\n  export let transform: Transform;\n  export let viewportScale: number = 1;\n\n  $: geom = shape.geometry;\n\n  $: handleSize = 10 / viewportScale;\n\n  const editor = (rectangle: Rectangle, handle: Handle, delta: [number, number]) => {\n    const initialBounds = rectangle.geometry.bounds;\n\n    let [x0, y0] = [initialBounds.minX, initialBounds.minY];\n    let [x1, y1] = [initialBounds.maxX, initialBounds.maxY];\n\n    const [dx, dy] = delta;\n\n    if (handle === Handle.SHAPE) {\n      x0 += dx;\n      x1 += dx;\n      y0 += dy;\n      y1 += dy;\n    } else {\n      switch (handle) {\n        case Handle.TOP:\n        case Handle.TOP_LEFT:\n        case Handle.TOP_RIGHT: {\n          y0 += dy;\n          break;\n        }\n\n        case Handle.BOTTOM:\n        case Handle.BOTTOM_LEFT:\n        case Handle.BOTTOM_RIGHT: {\n          y1 += dy;\n          break;\n        }\n      }\n\n      switch (handle) {\n        case Handle.LEFT:\n        case Handle.TOP_LEFT:\n        case Handle.BOTTOM_LEFT: {\n          x0 += dx;\n          break;\n        }\n\n        case Handle.RIGHT:\n        case Handle.TOP_RIGHT:\n        case Handle.BOTTOM_RIGHT: {\n          x1 += dx;\n          break;\n        }\n      }\n    }\n\n    const x = Math.min(x0, x1);\n    const y = Math.min(y0, y1);\n    const w = Math.abs(x1 - x0);\n    const h = Math.abs(y1 - y0);\n\n    return {\n      ...rectangle,\n      geometry: {\n        x, y, w, h,\n        bounds: {\n          minX: x,\n          minY: y,\n          maxX: x + w,\n          maxY: y + h\n        }\n      }\n    };\n  }\n</script>\n\n<Editor\n  shape={shape}\n  transform={transform}\n  editor={editor}\n  on:grab\n  on:change \n  on:release\n  let:grab={grab}>\n\n  <rect \n    class=\"a9s-outer\"\n    style={computedStyle ? 'display:none;' : undefined}\n    on:pointerdown={grab(Handle.SHAPE)}\n    x={geom.x} y={geom.y} width={geom.w} height={geom.h} />\n\n  <rect \n    class=\"a9s-inner a9s-shape-handle\"\n    style={computedStyle}\n    on:pointerdown={grab(Handle.SHAPE)}\n    x={geom.x} y={geom.y} width={geom.w} height={geom.h} />\n\n  <rect \n    class=\"a9s-edge-handle a9s-edge-handle-top\" \n    on:pointerdown={grab(Handle.TOP)}\n    x={geom.x} y={geom.y} height={1} width={geom.w} />\n\n  <rect \n    class=\"a9s-edge-handle a9s-edge-handle-right\"\n    on:pointerdown={grab(Handle.RIGHT)}\n    x={geom.x + geom.w} y={geom.y} height={geom.h} width={1}/>\n\n  <rect \n    class=\"a9s-edge-handle a9s-edge-handle-bottom\" \n    on:pointerdown={grab(Handle.BOTTOM)}\n    x={geom.x} y={geom.y + geom.h} height={1} width={geom.w} />\n\n  <rect \n    class=\"a9s-edge-handle a9s-edge-handle-left\" \n    on:pointerdown={grab(Handle.LEFT)}\n    x={geom.x} y={geom.y} height={geom.h} width={1} />\n\n  <rect \n    class=\"a9s-corner-handle a9s-corner-handle-topleft\"\n    on:pointerdown={grab(Handle.TOP_LEFT)}\n    x={geom.x - handleSize / 2} y={geom.y - handleSize / 2} height={handleSize} width={handleSize} />\n\n  <rect \n    class=\"a9s-corner-handle a9s-corner-handle-topright\"\n    on:pointerdown={grab(Handle.TOP_RIGHT)}\n    x={geom.x + geom.w - handleSize / 2} y={geom.y - handleSize / 2} height={handleSize} width={handleSize} />\n  \n  <rect \n    class=\"a9s-corner-handle a9s-corner-handle-bottomright\"\n    on:pointerdown={grab(Handle.BOTTOM_RIGHT)}\n    x={geom.x + geom.w - handleSize / 2} y={geom.y + geom.h - handleSize / 2} height={handleSize} width={handleSize} />\n    \n  <rect \n    class=\"a9s-corner-handle a9s-corner-handle-bottomleft\"\n    on:pointerdown={grab(Handle.BOTTOM_LEFT)}\n    x={geom.x - handleSize / 2} y={geom.y + geom.h - handleSize / 2} height={handleSize} width={handleSize} />\n</Editor>","import { ShapeType, type Shape } from '../../model';\nimport type { SvelteComponent } from 'svelte';\nimport { PolygonEditor } from './polygon';\nimport { RectangleEditor } from './rectangle';\n\nconst REGISTERED = new Map<ShapeType, typeof SvelteComponent>([\n  [ShapeType.RECTANGLE, RectangleEditor],\n  [ShapeType.POLYGON, PolygonEditor]\n]);\n\nexport const getEditor = (shape: Shape) => REGISTERED.get(shape.type);\n\nexport const registerEditor = (shapeType: ShapeType, editor: typeof SvelteComponent) =>\n  REGISTERED.set(shapeType, editor);","export type Handle = string;\n\nexport const Handle = (value: string | number) => `HANDLE-${value}`;\n\nHandle.SHAPE = 'SHAPE';\n\nHandle.TOP = 'TOP';\n\nHandle.RIGHT = 'RIGHT';\n\nHandle.BOTTOM = 'BOTTOM';\n\nHandle.LEFT = 'LEFT';\n\nHandle.TOP_LEFT = 'TOP_LEFT';\n\nHandle.TOP_RIGHT = 'TOP_RIGHT';\n\nHandle.BOTTOM_RIGHT = 'BOTTOM_RIGHT';\n\nHandle.BOTTOM_LEFT = 'BOTTOM_LEFT';","<script type=\"ts\">\n  import { createEventDispatcher } from 'svelte';\n  import type { Shape } from '../../model';\n  import type { Handle } from './Handle';\n  import type { Transform } from '../Transform';\n\n  const dispatch = createEventDispatcher<{ grab: undefined, release: undefined, change: Shape }>();\n\n  /** Props */\n  export let shape: Shape;\n  export let editor: (shape: Shape, handle: Handle, delta: [number, number]) => Shape;\n  export let transform: Transform;\n\n  let grabbedHandle: Handle = null;\n\n  let origin: [number, number];\n\n  let initialShape: Shape = null;\n\n  const onGrab = (handle: Handle) => (evt: PointerEvent) => {\n    grabbedHandle = handle;\n    origin = transform.elementToImage(evt.offsetX, evt.offsetY);\n    initialShape = shape;\n\n    const target = evt.target as Element;\n    target.setPointerCapture(evt.pointerId);\n\n    dispatch('grab');\n  }\n\n  const onPointerMove = (evt: PointerEvent) => {\n    if (grabbedHandle) {\n      const [x, y] = transform.elementToImage(evt.offsetX, evt.offsetY);\n\n      const delta: [number, number] = [x - origin[0], y - origin[1]];\n\n      shape = editor(initialShape, grabbedHandle, delta);\n      \n      dispatch('change', shape);\n    }\n  }\n\n  const onRelease = (evt: PointerEvent) => {    \n    const target = evt.target as Element;\n    target.releasePointerCapture(evt.pointerId);\n\n    grabbedHandle = null;\n\n    initialShape = shape;\n    \n    dispatch('release');\n  }\n</script>\n\n<g\n  class=\"a9s-annotation selected\"\n  on:pointerup={onRelease}\n  on:pointermove={onPointerMove}>\n\n  <slot grab={onGrab} />\n</g>","<script type=\"ts\">\r\n  import { Handle, Editor } from '@annotorious/annotorious/src';\r\n  import type { Ellipse, Transform } from '@annotorious/annotorious';\r\n  \r\n  export let shape: Ellipse;\r\n\r\n  export let transform: Transform;\r\n\r\n  export let viewportScale: number = 1;\r\n\r\n  $: geom = shape.geometry;\r\n\r\n  $: handleSize = 10 / viewportScale;\r\n\r\n  const editor = (ellipse: Ellipse, handle: Handle, delta: [number, number]) => {\r\n    const initialBounds = ellipse.geometry.bounds;\r\n\r\n    let [x0, y0] = [initialBounds.minX, initialBounds.minY];\r\n    let [x1, y1] = [initialBounds.maxX, initialBounds.maxY];\r\n\r\n    const [dx, dy] = delta;\r\n\r\n    if (handle === Handle.SHAPE) {\r\n      x0 += dx;\r\n      x1 += dx;\r\n      y0 += dy;\r\n      y1 += dy;\r\n    } else {\r\n      switch (handle) {\r\n        case Handle.TOP: {\r\n          y0 += dy;\r\n          break;\r\n        }\r\n\r\n        case Handle.BOTTOM: {\r\n          y1 += dy;\r\n          break;\r\n        }\r\n\r\n        case Handle.LEFT: {\r\n          x0 += dx;\r\n          break;\r\n        }\r\n\r\n        case Handle.RIGHT: {\r\n          x1 += dx;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    const x = Math.min(x0, x1);\r\n    const y = Math.min(y0, y1);\r\n    const w = Math.abs(x1 - x0);\r\n    const h = Math.abs(y1 - y0);\r\n\r\n    const cx = (x0 + x1) / 2;\r\n    const cy = (y0 + y1) / 2;\r\n\r\n    const rx = w / 2;\r\n    const ry = h / 2;\r\n\r\n    return {\r\n      ...ellipse,\r\n      geometry: {\r\n        ...ellipse.geometry,\r\n        cx, cy, rx, ry,\r\n        bounds: {\r\n          minX: x,\r\n          minY: y,\r\n          maxX: x + w,\r\n          maxY: y + h\r\n        }\r\n      }\r\n    };\r\n  }\r\n</script>\r\n\r\n<Editor\r\n  shape={shape}\r\n  transform={transform}\r\n  editor={editor}\r\n  on:grab\r\n  on:change \r\n  on:release\r\n  let:grab={grab}>\r\n\r\n  <ellipse \r\n    class=\"a9s-outer\"\r\n    on:pointerdown={grab(Handle.SHAPE)}\r\n    cx={geom.cx} cy={geom.cy} rx={geom.rx} ry={geom.ry} />\r\n\r\n  <ellipse \r\n    class=\"a9s-inner a9s-shape-handle\"\r\n    on:pointerdown={grab(Handle.SHAPE)}\r\n    cx={geom.cx} cy={geom.cy} rx={geom.rx} ry={geom.ry} />\r\n\r\n  <rect \r\n    class=\"a9s-corner-handle a9s-corner-top\"\r\n    on:pointerdown={grab(Handle.TOP)}\r\n    x={geom.cx - handleSize / 2} y={geom.cy - handleSize / 2 - geom.ry} height={handleSize} width={handleSize} />\r\n\r\n  <rect \r\n    class=\"a9s-corner-handle a9s-corner-handle-right\"\r\n    on:pointerdown={grab(Handle.RIGHT)}\r\n    x={geom.cx + geom.rx - handleSize / 2} y={geom.cy - handleSize / 2} height={handleSize} width={handleSize} />\r\n  \r\n  <rect \r\n    class=\"a9s-corner-handle a9s-corner-handle-bottom\"\r\n    on:pointerdown={grab(Handle.BOTTOM)}\r\n    x={geom.cx - handleSize / 2} y={geom.cy + geom.ry - handleSize / 2} height={handleSize} width={handleSize} />\r\n    \r\n  <rect \r\n    class=\"a9s-corner-handle a9s-corner-handle-left\"\r\n    on:pointerdown={grab(Handle.LEFT)}\r\n    x={geom.cx - geom.rx - handleSize / 2} y={geom.cy - handleSize / 2} height={handleSize} width={handleSize} />\r\n</Editor>","<script type=\"ts\">\r\n  import { createEventDispatcher, onMount } from 'svelte';\r\n  import { ShapeType } from '@annotorious/annotorious';\r\n  import type { Ellipse, DrawingMode, Transform } from '@annotorious/annotorious';\r\n\r\n  const dispatch = createEventDispatcher<{ create: Ellipse }>();\r\n  \r\n  /** Props **/\r\n  export let addEventListener: (type: string, fn: EventListener, capture?: boolean) => void;\r\n  export let drawingMode: DrawingMode\r\n  export let transform: Transform;\r\n  \r\n  let container: SVGGElement;\r\n\r\n  let origin: [x: number, y: number]; \r\n\r\n  let anchor: [number, number];\r\n\r\n  let x: number, y: number, w: number, h: number;\r\n\r\n  let isShiftPressed = false;\r\n\r\n  let isCtrlPressed = false;\r\n\r\n  let lastPointerDown: number;\r\n\r\n  let lastMoveEvent: PointerEvent;\r\n\r\n  const onPointerDown = (evt: PointerEvent) => {\r\n    lastPointerDown = performance.now();\r\n\r\n    if (drawingMode === 'drag') {\r\n      origin = transform.elementToImage(evt.offsetX, evt.offsetY);\r\n      anchor = origin;\r\n\r\n      x = origin[0];\r\n      y = origin[1];\r\n      w = 1;\r\n      h = 1;\r\n    }\r\n  }\r\n\r\n  const updateShape = (maybeEvent?: PointerEvent) => {\r\n    const evt = maybeEvent || lastMoveEvent;\r\n\r\n    if (origin) {\r\n      anchor = transform.elementToImage(evt.offsetX, evt.offsetY);\r\n\r\n      if (isCtrlPressed) {\r\n        const mw = 2 * Math.abs(anchor[0] - origin[0]);\r\n        const mh = 2 * Math.abs(anchor[1] - origin[1]);\r\n\r\n        w = isShiftPressed ? Math.max(mw, mh) : mw;\r\n        h = isShiftPressed ? w : mh;\r\n\r\n        x = Math.min(anchor[0], origin[0] - w / 2);\r\n        y = Math.min(anchor[1], origin[1] - h / 2);\r\n      } else {\r\n        const mw = Math.abs(anchor[0] - origin[0]);\r\n        const mh = Math.abs(anchor[1] - origin[1]);\r\n\r\n        w = isShiftPressed ? Math.max(mw, mh) : mw;\r\n        h = isShiftPressed ? w : mh;\r\n\r\n        x = Math.min(anchor[0], origin[0]);\r\n        y = Math.min(anchor[1], origin[1]);\r\n      }\r\n    }\r\n\r\n    if (maybeEvent)\r\n      lastMoveEvent = maybeEvent;\r\n  }\r\n    \r\n  const onPointerUp = (evt: PointerEvent) => {\r\n    if (drawingMode === 'click')\r\n      evt.stopImmediatePropagation();\r\n\r\n    const timeDifference = performance.now() - lastPointerDown;\r\n\r\n    if (drawingMode === 'click') {\r\n      // Not a single click - ignore\r\n      if (timeDifference > 300)\r\n        return;\r\n\r\n      evt.stopPropagation();\r\n\r\n      if (origin) {\r\n        stopDrawing();\r\n      } else {\r\n        // Start drawing\r\n        origin = transform.elementToImage(evt.offsetX, evt.offsetY);\r\n        anchor = origin;\r\n\r\n        x = origin[0];\r\n        y = origin[1];\r\n        w = 1;\r\n        h = 1;\r\n      }\r\n    } else if (origin) {\r\n      if (timeDifference > 300 || w * h > 100) {\r\n        evt.stopPropagation();\r\n        stopDrawing();\r\n      } else {\r\n        origin = null;\r\n        anchor = null;\r\n\r\n        lastMoveEvent = undefined;\r\n      }\r\n    }\r\n  }\r\n\r\n  const stopDrawing = () => {\r\n    // Require 4x4 pixels minimum\r\n    if (w * h > 15) {\r\n      const shape: Ellipse = {\r\n        type: ShapeType.ELLIPSE, \r\n        geometry: {\r\n          bounds: {\r\n            minX: x, \r\n            minY: y,\r\n            maxX: x + w,\r\n            maxY: y + h\r\n          },\r\n          cx: x + w / 2,\r\n          cy: y + h / 2,\r\n          rx: w / 2,\r\n          ry: h / 2\r\n        }\r\n      }\r\n\r\n      dispatch('create', shape);\r\n    }\r\n\r\n    origin = null;\r\n    anchor = null;\r\n\r\n    lastMoveEvent = undefined;\r\n  }\r\n\r\n  const onKeyDown = (evt: KeyboardEvent) => {\r\n    if (evt.key === 'Shift') {\r\n      isShiftPressed = true;  \r\n      updateShape();  \r\n    }\r\n\r\n    if (evt.key === 'Control') {\r\n      isCtrlPressed = true;\r\n      updateShape();\r\n    }\r\n  }\r\n\r\n  const onKeyUp = (evt: KeyboardEvent) => {\r\n    if (evt.key === 'Shift') {\r\n      isShiftPressed = false;\r\n      updateShape();  \r\n    }\r\n\r\n    if (evt.key === 'Control') {\r\n      isCtrlPressed = false;\r\n      updateShape();  \r\n    }\r\n  }\r\n\r\n  onMount(() => {\r\n    document.addEventListener('keyup', onKeyUp);\r\n    document.addEventListener('keydown', onKeyDown);\r\n\r\n    addEventListener('pointerdown', onPointerDown);\r\n    addEventListener('pointermove', updateShape);\r\n    addEventListener('pointerup', onPointerUp);\r\n\r\n    return () => {\r\n      document.removeEventListener('keyup', onKeyUp);\r\n      document.removeEventListener('keydown', onKeyDown);\r\n    }\r\n  });\r\n</script>\r\n\r\n<g \r\n  bind:this={container}\r\n  class=\"a9s-annotation a9s-rubberband\">\r\n  \r\n  {#if origin}\r\n    <ellipse \r\n      class=\"a9s-outer\"\r\n      cx={x + w / 2} \r\n      cy={y + h / 2} \r\n      rx={w / 2} \r\n      ry={h / 2} />\r\n\r\n    <ellipse \r\n      class=\"a9s-inner\"\r\n      cx={x + w / 2} \r\n      cy={y + h / 2} \r\n      rx={w / 2} \r\n      ry={h / 2} />\r\n  {/if}\r\n</g>","import { ShapeType, type ImageAnnotator } from '@annotorious/annotorious';\r\nimport { EllipseEditor, RubberbandEllipse } from './ellipse';\r\n\r\nexport const mountExtension = (\r\n  anno: ImageAnnotator\r\n) => {\r\n\r\n  anno.registerDrawingTool('ellipse', RubberbandEllipse);\r\n  anno.registerShapeEditor(ShapeType.ELLIPSE, EllipseEditor);\r\n\r\n}"],"names":["G","Wt","Rt","lt","le","j","K","Jt","Qt","i","Dt","Zt","s","r","l","Kt","xt","v","O","tt","R","Nt","ee","ae","W","u","$t","en","Ie","ke","Ut","Me","Ae","be","Se","Te","ft","tn","$e","nn","Gt","et","We","_e","on","sn","Ge","me","D","N","pe","ue","de","rn","te","a","d","h","c","f","m","g","ne","z","ot","He","an","cn","fn","q","Fn","gt","pt","M","eo","_t","yt","y","to","jt","no","E","k","b","L","oo","io","Y","U","X","_","w","A","S","B","P","Q","ce","oe","Le","Z","I","J","H","V","ie","he","je","x","Pe","Ye","Ve","$","Re","Xe","qe","rt","C","T","so","ro","lo","co","bt","fo","uo","noop","assign","tar","src","run","blank_object","run_all","fns","is_function","thing","safe_not_equal","is_empty","obj","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","get_slot_changes","dirty","lets","merged","len","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","get_all_dirty_from_scope","length","insert","target","node","anchor","detach","destroy_each","iterations","detaching","svg_element","name","text","data","space","empty","listen","event","handler","options","attr","attribute","value","children","element","custom_event","type","detail","bubbles","cancelable","e","current_component","set_current_component","component","get_current_component","onMount","createEventDispatcher","callbacks","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","update_scheduled","schedule_update","flush","add_render_callback","seen_callbacks","flushidx","saved_component","update","callback","$$","flush_render_callbacks","filtered","targets","outroing","outros","transition_in","block","local","transition_out","create_component","mount_component","customElement","fragment","after_update","new_on_destroy","destroy_component","make_dirty","init","instance","create_fragment","not_equal","props","append_styles","parent_component","ready","ret","rest","nodes","SvelteComponent","index","$$props","ShapeType","registerShapeUtil","util","boundsFromPoints","points","minX","minY","maxX","maxY","EllipseUtil","cx","cy","rx","ry","rot","cos","sin","dx","dy","tdx","tdy","PolygonUtil","polygon","area","inside","xi","yi","xj","yj","RectangleUtil","rect","nanoid","size","id","byte","rect_x_value","rect_y_value","Handle","each_value","polygon0","polygon0_points_value","func","polygon1","polygon1_points_value","func_1","grab","xy","shape","computedStyle","transform","viewportScale","editor","handle","delta","idx","bounds","$$invalidate","geom","handleSize","rect0","rect0_x_value","rect0_y_value","rect0_width_value","rect0_height_value","rect1","rect1_x_value","rect1_y_value","rect1_width_value","rect1_height_value","rect2","rect2_x_value","rect2_y_value","rect2_width_value","rect3","rect3_x_value","rect3_y_value","rect3_height_value","rect4","rect4_x_value","rect4_y_value","rect4_width_value","rect5","rect5_x_value","rect5_y_value","rect5_height_value","rect6","rect6_x_value","rect6_y_value","rect7","rect7_y_value","rect9","rect9_x_value","rect8","rectangle","initialBounds","x0","y0","x1","y1","dispatch","grabbedHandle","origin","initialShape","onGrab","evt","onPointerMove","onRelease","ellipse0","ellipse0_cx_value","ellipse0_cy_value","ellipse0_rx_value","ellipse0_ry_value","ellipse1","ellipse1_cx_value","ellipse1_cy_value","ellipse1_rx_value","ellipse1_ry_value","ellipse","create_if_block","addEventListener","drawingMode","container","isShiftPressed","isCtrlPressed","lastPointerDown","lastMoveEvent","onPointerDown","updateShape","maybeEvent","mw","mh","onPointerUp","timeDifference","stopDrawing","onKeyDown","onKeyUp","$$value","mountExtension","anno","RubberbandEllipse","EllipseEditor"],"mappings":"AAAA,SAASA,KAAI;AACb;AACA,SAASC,GAAG,GAAG,GAAG;AAChB,aAAW,KAAK;AACd,MAAE,CAAC,IAAI,EAAE,CAAC;AACZ,SAAO;AACT;AACA,SAASC,GAAG,GAAG;AACb,SAAO,EAAC;AACV;AACA,SAASC,KAAK;AACZ,SAAuB,uBAAO,OAAO,IAAI;AAC3C;AACA,SAASC,GAAG,GAAG;AACb,IAAE,QAAQF,EAAE;AACd;AACA,SAASG,EAAE,GAAG;AACZ,SAAO,OAAO,KAAK;AACrB;AACA,SAASC,GAAE,GAAG,GAAG;AACf,SAAO,KAAK,IAAI,KAAK,IAAI,MAAM,KAAK,KAAK,OAAO,KAAK,YAAY,OAAO,KAAK;AAC/E;AACA,SAASC,GAAG,GAAG;AACb,SAAO,OAAO,KAAK,CAAC,EAAE,WAAW;AACnC;AAUA,SAASC,GAAG,GAAG,GAAG,GAAG,GAAG;AACtB,MAAI,GAAG;AACL,UAAMC,IAAIC,GAAG,GAAG,GAAG,GAAG,CAAC;AACvB,WAAO,EAAE,CAAC,EAAED,CAAC;AAAA,EACd;AACH;AACA,SAASC,GAAG,GAAG,GAAG,GAAG,GAAG;AACtB,SAAO,EAAE,CAAC,KAAK,IAAIT,GAAG,EAAE,IAAI,MAAK,GAAI,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE;AACvD;AACA,SAASU,GAAG,GAAG,GAAG,GAAG,GAAG;AACtB,MAAI,EAAE,CAAC,KAAK,GAAG;AACb,UAAMF,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;AACnB,QAAI,EAAE,UAAU;AACd,aAAOA;AACT,QAAI,OAAOA,KAAK,UAAU;AACxB,YAAMG,IAAI,CAAA,GAAIC,IAAI,KAAK,IAAI,EAAE,MAAM,QAAQJ,EAAE,MAAM;AACnD,eAASK,IAAI,GAAGA,IAAID,GAAGC,KAAK;AAC1B,QAAAF,EAAEE,CAAC,IAAI,EAAE,MAAMA,CAAC,IAAIL,EAAEK,CAAC;AACzB,aAAOF;AAAA,IACR;AACD,WAAO,EAAE,QAAQH;AAAA,EAClB;AACD,SAAO,EAAE;AACX;AACA,SAASM,GAAG,GAAG,GAAG,GAAG,GAAGN,GAAGG,GAAG;AAC5B,MAAIH,GAAG;AACL,UAAMI,IAAIH,GAAG,GAAG,GAAG,GAAGE,CAAC;AACvB,MAAE,EAAEC,GAAGJ,CAAC;AAAA,EACT;AACH;AACA,SAASO,GAAG,GAAG;AACb,MAAI,EAAE,IAAI,SAAS,IAAI;AACrB,UAAM,IAAI,CAAA,GAAI,IAAI,EAAE,IAAI,SAAS;AACjC,aAAS,IAAI,GAAG,IAAI,GAAG;AACrB,QAAE,CAAC,IAAI;AACT,WAAO;AAAA,EACR;AACD,SAAO;AACT;AAIA,SAASC,EAAE,GAAG,GAAG,GAAG;AAClB,IAAE,aAAa,GAAG,KAAK,IAAI;AAC7B;AACA,SAASC,EAAE,GAAG;AACZ,IAAE,cAAc,EAAE,WAAW,YAAY,CAAC;AAC5C;AACA,SAASC,GAAG,GAAG,GAAG;AAChB,WAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK;AACjC,MAAE,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC;AACpB;AACA,SAASC,EAAE,GAAG;AACZ,SAAO,SAAS,gBAAgB,8BAA8B,CAAC;AACjE;AACA,SAASC,GAAG,GAAG;AACb,SAAO,SAAS,eAAe,CAAC;AAClC;AACA,SAASC,IAAK;AACZ,SAAOD,GAAG,GAAG;AACf;AACA,SAASE,KAAK;AACZ,SAAOF,GAAG,EAAE;AACd;AACA,SAASG,EAAE,GAAG,GAAG,GAAG,GAAG;AACrB,SAAO,EAAE,iBAAiB,GAAG,GAAG,CAAC,GAAG,MAAM,EAAE,oBAAoB,GAAG,GAAG,CAAC;AACzE;AACA,SAASC,EAAE,GAAG,GAAG,GAAG;AAClB,OAAK,OAAO,EAAE,gBAAgB,CAAC,IAAI,EAAE,aAAa,CAAC,MAAM,KAAK,EAAE,aAAa,GAAG,CAAC;AACnF;AACA,SAASC,GAAG,GAAG;AACb,SAAO,MAAM,KAAK,EAAE,UAAU;AAChC;AAIA,SAASC,GAAG,GAAG,GAAG,EAAE,SAAS,IAAI,IAAI,YAAY,IAAI,GAAE,IAAK,CAAA,GAAI;AAC9D,QAAMlB,IAAI,SAAS,YAAY,aAAa;AAC5C,SAAOA,EAAE,gBAAgB,GAAG,GAAG,GAAG,CAAC,GAAGA;AACxC;AACA,IAAImB;AACJ,SAASC,GAAG,GAAG;AACb,EAAAD,KAAK;AACP;AACA,SAASE,KAAK;AACZ,MAAI,CAACF;AACH,UAAM,IAAI,MAAM,kDAAkD;AACpE,SAAOA;AACT;AAIA,SAASG,KAAK;AACZ,QAAM,IAAID;AACV,SAAO,CAAC,GAAG,GAAG,EAAE,YAAY,IAAI,GAAI,IAAG,OAAO;AAC5C,UAAMrB,IAAI,EAAE,GAAG,UAAU,CAAC;AAC1B,QAAIA,GAAG;AACL,YAAMG,IAAIe,GAAG,GAAG,GAAG,EAAE,YAAY,EAAC,CAAE;AACpC,aAAOlB,EAAE,MAAK,EAAG,QAAQ,CAACI,MAAM;AAC9B,QAAAA,EAAE,KAAK,GAAGD,CAAC;AAAA,MACnB,CAAO,GAAG,CAACA,EAAE;AAAA,IACR;AACD,WAAO;AAAA,EACX;AACA;AACA,SAASoB,GAAG,GAAG,GAAG;AAChB,QAAM,IAAI,EAAE,GAAG,UAAU,EAAE,IAAI;AAC/B,OAAK,EAAE,MAAO,EAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,MAAM,CAAC,CAAC;AAC/C;AACA,MAAMC,KAAK,CAAA,GAAIC,KAAK;AACpB,IAAIC,KAAK,CAAA;AACT,MAAMC,KAAK,CAAA,GAAIC,KAAqB,wBAAQ,QAAO;AACnD,IAAIC,KAAK;AACT,SAASC,KAAK;AACZ,EAAAD,OAAOA,KAAK,IAAID,GAAG,KAAKG,EAAE;AAC5B;AACA,SAASC,GAAG,GAAG;AACb,EAAAN,GAAG,KAAK,CAAC;AACX;AACA,MAAMO,KAAqB,oBAAI;AAC/B,IAAIC,KAAK;AACT,SAASH,KAAK;AACZ,MAAIG,OAAO;AACT;AACF,QAAM,IAAIf;AACV,KAAG;AACD,QAAI;AACF,aAAOe,KAAKV,GAAG,UAAU;AACvB,cAAM,IAAIA,GAAGU,EAAE;AACf,QAAAA,MAAMd,GAAG,CAAC,GAAGe,GAAG,EAAE,EAAE;AAAA,MACrB;AAAA,IACF,SAAQ,GAAG;AACV,YAAMX,GAAG,SAAS,GAAGU,KAAK,GAAG;AAAA,IAC9B;AACD,SAAKd,GAAG,IAAI,GAAGI,GAAG,SAAS,GAAGU,KAAK,GAAGT,GAAG;AACvC,MAAAA,GAAG,IAAG;AACR,aAAS,IAAI,GAAG,IAAIC,GAAG,QAAQ,KAAK,GAAG;AACrC,YAAM,IAAIA,GAAG,CAAC;AACd,MAAAO,GAAG,IAAI,CAAC,MAAMA,GAAG,IAAI,CAAC,GAAG,EAAC;AAAA,IAC3B;AACD,IAAAP,GAAG,SAAS;AAAA,EAChB,SAAWF,GAAG;AACZ,SAAOG,GAAG;AACR,IAAAA,GAAG,IAAG;AACR,EAAAE,KAAK,IAAII,GAAG,MAAK,GAAIb,GAAG,CAAC;AAC3B;AACA,SAASe,GAAG,GAAG;AACb,MAAI,EAAE,aAAa,MAAM;AACvB,MAAE,OAAQ,GAAExC,GAAG,EAAE,aAAa;AAC9B,UAAM,IAAI,EAAE;AACZ,MAAE,QAAQ,CAAC,EAAE,GAAG,EAAE,YAAY,EAAE,SAAS,EAAE,EAAE,KAAK,CAAC,GAAG,EAAE,aAAa,QAAQqC,EAAE;AAAA,EAChF;AACH;AACA,SAASI,GAAG,GAAG;AACb,QAAM,IAAI,CAAA,GAAI,IAAI;AAClB,EAAAV,GAAG,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,MAAM,KAAK,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,GAAG,EAAE,QAAQ,CAAC,MAAM,EAAC,CAAE,GAAGA,KAAK;AAC9F;AACA,MAAMW,KAAqB,oBAAI;AAC/B,IAAIC;AAYJ,SAASC,GAAE,GAAG,GAAG;AACf,OAAK,EAAE,MAAMF,GAAG,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;AAClC;AACA,SAASG,GAAE,GAAG,GAAG,GAAG,GAAG;AACrB,MAAI,KAAK,EAAE,GAAG;AACZ,QAAIH,GAAG,IAAI,CAAC;AACV;AACF,IAAAA,GAAG,IAAI,CAAC,GAAGC,GAAG,EAAE,KAAK,MAAM;AACzB,MAAAD,GAAG,OAAO,CAAC,GAAG,MAAM,KAAK,EAAE,EAAE,CAAC,GAAG,EAAG;AAAA,IACrC,CAAA,GAAG,EAAE,EAAE,CAAC;AAAA,EACV;AACC,SAAK,EAAC;AACV;AACA,SAASI,GAAG,GAAG;AACb,OAAK,EAAE;AACT;AACA,SAASC,GAAG,GAAG,GAAG,GAAG,GAAG;AACtB,QAAM,EAAE,UAAU1C,GAAG,cAAcG,EAAG,IAAG,EAAE;AAC3C,EAAAH,KAAKA,EAAE,EAAE,GAAG,CAAC,GAAG,KAAKgC,GAAG,MAAM;AAC5B,UAAM5B,IAAI,EAAE,GAAG,SAAS,IAAIX,EAAE,EAAE,OAAOG,CAAC;AACxC,MAAE,GAAG,aAAa,EAAE,GAAG,WAAW,KAAK,GAAGQ,CAAC,IAAIT,GAAGS,CAAC,GAAG,EAAE,GAAG,WAAW;EACvE,CAAA,GAAGD,EAAE,QAAQ6B,EAAE;AAClB;AACA,SAASW,GAAG,GAAG,GAAG;AAChB,QAAM,IAAI,EAAE;AACZ,IAAE,aAAa,SAASP,GAAG,EAAE,YAAY,GAAGzC,GAAG,EAAE,UAAU,GAAG,EAAE,YAAY,EAAE,SAAS,EAAE,CAAC,GAAG,EAAE,aAAa,EAAE,WAAW,MAAM,EAAE,MAAM,CAAE;AAC3I;AACA,SAASiD,GAAG,GAAG,GAAG;AAChB,IAAE,GAAG,MAAM,CAAC,MAAM,OAAOpB,GAAG,KAAK,CAAC,GAAGM,GAAI,GAAE,EAAE,GAAG,MAAM,KAAK,CAAC,IAAI,EAAE,GAAG,MAAM,IAAI,KAAK,CAAC,KAAK,KAAK,IAAI;AACrG;AACA,SAASe,GAAG,GAAG,GAAG,GAAG,GAAG7C,GAAGG,GAAGC,GAAGC,IAAI,CAAC,EAAE,GAAG;AACzC,QAAMyC,IAAI3B;AACV,EAAAC,GAAG,CAAC;AACJ,QAAM2B,IAAI,EAAE,KAAK;AAAA,IACf,UAAU;AAAA,IACV,KAAK,CAAE;AAAA;AAAA,IAEP,OAAO5C;AAAA,IACP,QAAQZ;AAAA,IACR,WAAWS;AAAA,IACX,OAAON,GAAI;AAAA;AAAA,IAEX,UAAU,CAAE;AAAA,IACZ,YAAY,CAAE;AAAA,IACd,eAAe,CAAE;AAAA,IACjB,eAAe,CAAE;AAAA,IACjB,cAAc,CAAE;AAAA,IAChB,SAAS,IAAI,IAAI,EAAE,YAAYoD,IAAIA,EAAE,GAAG,UAAU,CAAA,EAAG;AAAA;AAAA,IAErD,WAAWpD,GAAI;AAAA,IACf,OAAOW;AAAA,IACP,YAAY;AAAA,IACZ,MAAM,EAAE,UAAUyC,EAAE,GAAG;AAAA,EAC3B;AACE,EAAA1C,KAAKA,EAAE2C,EAAE,IAAI;AACb,MAAIC,IAAI;AACR,MAAID,EAAE,MAAM,IAAI,EAAE,GAAG,EAAE,SAAS,CAAE,GAAE,CAACE,GAAGC,MAAMC,MAAM;AAClD,UAAMC,IAAID,EAAE,SAASA,EAAE,CAAC,IAAID;AAC5B,WAAOH,EAAE,OAAO/C,EAAE+C,EAAE,IAAIE,CAAC,GAAGF,EAAE,IAAIE,CAAC,IAAIG,CAAC,MAAM,CAACL,EAAE,cAAcA,EAAE,MAAME,CAAC,KAAKF,EAAE,MAAME,CAAC,EAAEG,CAAC,GAAGJ,KAAKJ,GAAG,GAAGK,CAAC,IAAIC;AAAA,EAChH,CAAG,IAAI,CAAA,GAAIH,EAAE,OAAQ,GAAEC,IAAI,IAAIrD,GAAGoD,EAAE,aAAa,GAAGA,EAAE,WAAW,IAAI,EAAEA,EAAE,GAAG,IAAI,IAAI,EAAE,QAAQ;AAC1F,QAAI,EAAE,SAAS;AACb,YAAME,IAAIhC,GAAG,EAAE,MAAM;AACrB,MAAA8B,EAAE,YAAYA,EAAE,SAAS,EAAEE,CAAC,GAAGA,EAAE,QAAQxC,CAAC;AAAA,IAC3C;AACC,MAAAsC,EAAE,YAAYA,EAAE,SAAS,EAAC;AAC5B,MAAE,SAASR,GAAE,EAAE,GAAG,QAAQ,GAAGG,GAAG,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,aAAa,GAAGX;EAC1E;AACD,EAAAX,GAAG0B,CAAC;AACN;AACA,MAAMO,GAAG;AAAA,EACP,WAAW;AACT,IAAAV,GAAG,MAAM,CAAC,GAAG,KAAK,WAAWpD;AAAA,EAC9B;AAAA,EACD,IAAI,GAAG,GAAG;AACR,QAAI,CAACK,EAAE,CAAC;AACN,aAAOL;AACT,UAAM,IAAI,KAAK,GAAG,UAAU,CAAC,MAAM,KAAK,GAAG,UAAU,CAAC,IAAI,CAAE;AAC5D,WAAO,EAAE,KAAK,CAAC,GAAG,MAAM;AACtB,YAAMS,IAAI,EAAE,QAAQ,CAAC;AACrB,MAAAA,MAAM,MAAM,EAAE,OAAOA,GAAG,CAAC;AAAA,IAC/B;AAAA,EACG;AAAA,EACD,KAAK,GAAG;AACN,SAAK,SAAS,CAACF,GAAG,CAAC,MAAM,KAAK,GAAG,aAAa,IAAI,KAAK,MAAM,CAAC,GAAG,KAAK,GAAG,aAAa;AAAA,EACvF;AACH;AACA,IAAIwD,KAAqB,kBAAC,OAAO,EAAE,UAAU,WAAW,EAAE,UAAU,WAAW,EAAE,YAAY,aAAa,IAAIA,MAAK,CAAA,CAAE;AAChH,MAAUC,KAAK,CAAC,GAAG,MAAc,GAAqFC,KAAK,CAAC,MAAM;AACrI,MAAI,IAAI,OAAO,IAAI,IAAI,GAAG,IAAI,KAAK,GAAGxD,IAAI,KAAK;AAC/C,SAAO,EAAE,QAAQ,CAAC,CAACG,GAAGC,CAAC,MAAM;AAC3B,QAAI,KAAK,IAAI,GAAGD,CAAC,GAAG,IAAI,KAAK,IAAI,GAAGC,CAAC,GAAG,IAAI,KAAK,IAAI,GAAGD,CAAC,GAAGH,IAAI,KAAK,IAAIA,GAAGI,CAAC;AAAA,EACjF,CAAG,GAAG,EAAE,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAMJ;AACzC,GAAGyD,KAAK;AAAA,EACN,MAAM,CAAC,MAAM,KAAK,KAAK,EAAE,SAAS,KAAK,EAAE,SAAS;AAAA,EAClD,YAAY,CAAC,GAAG,GAAG,MAAM;AACvB,UAAM,EAAE,IAAI,GAAG,IAAIzD,GAAG,IAAIG,GAAG,IAAIC,EAAC,IAAK,EAAE,UAAUC,IAAI,GAAGyC,IAAI,KAAK,IAAIzC,CAAC,GAAG0C,IAAI,KAAK,IAAI1C,CAAC,GAAG2C,IAAI,IAAI,GAAGC,IAAI,IAAIjD,GAAGkD,IAAIJ,IAAIE,IAAID,IAAIE,GAAGE,IAAIJ,IAAIC,IAAIF,IAAIG;AACrJ,WAAOC,IAAIA,KAAK/C,IAAIA,KAAKgD,IAAIA,KAAK/C,IAAIA,MAAM;AAAA,EAC7C;AACH;AACAmD,GAAGD,GAAE,SAASG,EAAE;AAChB,MAAMC,KAAK;AAAA,EACT,MAAM,CAAC,MAAM;AACX,UAAM,EAAE,QAAQ,MAAM,EAAE;AACxB,QAAI,IAAI,GAAG,IAAI,EAAE,SAAS;AAC1B,aAAS1D,IAAI,GAAGA,IAAI,EAAE,QAAQA;AAC5B,YAAM,EAAE,CAAC,EAAE,CAAC,IAAI,EAAEA,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,IAAI,EAAEA,CAAC,EAAE,CAAC,IAAI,IAAIA;AACtD,WAAO,KAAK,IAAI,MAAM,CAAC;AAAA,EACxB;AAAA,EACD,YAAY,CAAC,GAAG,GAAG,MAAM;AACvB,UAAM,EAAE,QAAQ,MAAM,EAAE;AACxB,QAAIA,IAAI;AACR,aAASG,IAAI,GAAGC,IAAI,EAAE,SAAS,GAAGD,IAAI,EAAE,QAAQC,IAAID,KAAK;AACvD,YAAME,IAAI,EAAEF,CAAC,EAAE,CAAC,GAAG2C,IAAI,EAAE3C,CAAC,EAAE,CAAC,GAAG4C,IAAI,EAAE3C,CAAC,EAAE,CAAC,GAAG4C,IAAI,EAAE5C,CAAC,EAAE,CAAC;AACvD,MAAA0C,IAAI,KAAKE,IAAI,KAAK,KAAKD,IAAI1C,MAAM,IAAIyC,MAAME,IAAIF,KAAKzC,MAAML,IAAI,CAACA;AAAA,IAChE;AACD,WAAOA;AAAA,EACR;AACH;AACAuD,GAAGD,GAAE,SAASI,EAAE;AAChB,MAAMC,KAAK;AAAA,EACT,MAAM,CAAC,MAAM,EAAE,SAAS,IAAI,EAAE,SAAS;AAAA,EACvC,YAAY,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,SAAS,KAAK,KAAK,EAAE,SAAS,IAAI,EAAE,SAAS,KAAK,KAAK,EAAE,SAAS,KAAK,KAAK,EAAE,SAAS,IAAI,EAAE,SAAS;AACxI;AACAJ,GAAGD,GAAE,WAAWK,EAAE;AAkGlB,MAAMC,KAAI,CAAA;AACV,SAAS,IAAI,GAAG,IAAI,KAAK,EAAE;AACzB,EAAAA,GAAE,MAAM,IAAI,KAAK,SAAS,EAAE,EAAE,MAAM,CAAC,CAAC;AAI7B,OAAO,SAAS,OAAO,OAAO,cAAc,OAAO,WAAW,KAAK,MAAM;AA+ejF,IAWkCC,KAAK,CAAC,IAAI,OAAO,OAAO,gBAAgB,IAAI,WAAW,CAAC,CAAC,EAAE,OAAO,CAAC,GAAG,OAAO,KAAK,IAAI,IAAI,KAAK,KAAK,EAAE,SAAS,EAAE,IAAI,IAAI,KAAK,MAAM,IAAI,IAAI,SAAS,EAAE,EAAE,YAAW,IAAK,IAAI,KAAK,KAAK,MAAM,KAAK,KAAK,IAAI,EAAE;AA4ExJA;AA6E1F,SAASC,GAAG,GAAG,GAAG,GAAG;AACnB,QAAM,IAAI,EAAE;AACZ,SAAO,EAAE,EAAE,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE,IAAI,GAAG;AAClC;AACA,SAASC,GAAG,GAAG;AACb,MAAI,GAAG,GAAG,GAAG/D,GAAGG;AAChB,SAAO;AAAA,IACL,IAAI;AACF,UAAIQ,EAAE,MAAM,GAAGK,EAAE,GAAG,SAAS,mBAAmB,GAAGA,EAAE,GAAG,KAAK;AAAA,MAC7D,EAAE,EAAE,EAAE,CAAC;AAAA,MACP,EAAE,CAAC,IAAI,CAAC,GAAGA,EAAE,GAAG,KAAK;AAAA,MACrB,EAAE,EAAE,EAAE,CAAC;AAAA,MACP,EAAE,CAAC,IAAI,CAAC,GAAGA;AAAA,QACT;AAAA,QACA;AAAA;AAAA,QAEA,EAAE,CAAC;AAAA,MACX,GAASA;AAAA,QACD;AAAA,QACA;AAAA;AAAA,QAEA,EAAE,CAAC;AAAA,MACX;AAAA,IACK;AAAA,IACD,EAAEZ,GAAGC,GAAG;AACN,MAAAG,EAAEJ,GAAG,GAAGC,CAAC,GAAGL,MAAMG,IAAIY,EAAE,GAAG,eAAe,WAAW;AACnD,QAAAnB;AAAA;AAAA,UAEE,EAAE,EAAE,EAAEoE;AAAA;AAAA,YAEJ,EAAE,EAAE;AAAA,UAChB,CAAW;AAAA,QACX,KAAa,EAAE,EAAE,EAAEA;AAAA;AAAA,UAET,EAAE,EAAE;AAAA,QACL,CAAA,EAAE,MAAM,MAAM,SAAS;AAAA,MAChC,CAAO,GAAGhE,IAAI;AAAA,IACT;AAAA,IACD,EAAEI,GAAGC,GAAG;AACN,UAAID,GAAGC;AAAA,MACP,MAAM,OAAO;AAAA,MACb,EAAE,EAAE,EAAE,CAAC;AAAA,MACP,EAAE,CAAC,IAAI,MAAMW,EAAE,GAAG,KAAK,CAAC,GAAGX;AAAA,MAC3B,MAAM,OAAO;AAAA,MACb,EAAE,EAAE,EAAE,CAAC;AAAA,MACP,EAAE,CAAC,IAAI,MAAMW,EAAE,GAAG,KAAK,CAAC,GAAGX;AAAA,MAC3B,KAAKW;AAAA,QACH;AAAA,QACA;AAAA;AAAA,QAEA,EAAE,CAAC;AAAA,MACX,GAASX;AAAA,MACH,KAAKW;AAAA,QACH;AAAA,QACA;AAAA;AAAA,QAEA,EAAE,CAAC;AAAA,MACX;AAAA,IACK;AAAA,IACD,EAAEZ,GAAG;AACH,MAAAA,KAAKK,EAAE,CAAC,GAAGT,IAAI,IAAIG;IACpB;AAAA,EACL;AACA;AACA,SAAS8D,GAAG,GAAG;AACb,MAAI,GAAG,GAAG,GAAGjE,GAAGG,GAAGC,GAAGC,GAAGyC,GAAGC,GAAGC,GAAGC;AAAA;AAAA,IAEhC,EAAE,CAAC,EAAE;AAAA,KACJC,IAAI,CAAA;AACP,WAASC,IAAI,GAAGA,IAAIF,EAAE,QAAQE,KAAK;AACjC,IAAAD,EAAEC,CAAC,IAAIY,GAAGD,GAAG,GAAGb,GAAGE,CAAC,CAAC;AACvB,SAAO;AAAA,IACL,IAAI;AACF,UAAIxC,EAAE,SAAS,GAAGX,IAAIa,EAAE,GAAIV,IAAIQ,EAAE,SAAS,GAAGN,IAAIQ,EAAE;AACpD,eAASsC,IAAI,GAAGA,IAAID,EAAE,QAAQC,KAAK;AACjC,QAAAD,EAAEC,CAAC,EAAE;AACP,MAAAL,IAAIhC,GAAE,GAAIE,EAAE,GAAG,SAAS,WAAW,GAAGA,EAAE,GAAG,SAAS;AAAA,MACpD,EAAE,CAAC,IAAI,kBAAkB,MAAM,GAAGA,EAAE,GAAG,UAAU;AAAA,MACjD,EAAE,CAAC,EAAE,OAAO,IAAIkD,EAAE,EAAE,KAAK,GAAG,CAAC,GAAGlD,EAAEb,GAAG,SAAS,4BAA4B,GAAGa;AAAA,QAC3Eb;AAAA,QACA;AAAA;AAAA,QAEA,EAAE,CAAC;AAAA,MACX,GAASa,EAAEb,GAAG,UAAUC;AAAA,MAClB,EAAE,CAAC,EAAE,OAAO,IAAI+D,EAAE,EAAE,KAAK,GAAG,CAAC;AAAA,IAC9B;AAAA,IACD,EAAEhB,GAAGC,GAAG;AACN,MAAA5C,EAAE2C,GAAG,GAAGC,CAAC,GAAG5C,EAAE2C,GAAGnD,GAAGoD,CAAC,GAAG5C,EAAE2C,GAAGhD,GAAGiD,CAAC,GAAG5C,EAAE2C,GAAG9C,GAAG+C,CAAC;AAC7C,eAAS,IAAI,GAAG,IAAIF,EAAE,QAAQ,KAAK;AACjC,QAAAA,EAAE,CAAC,KAAKA,EAAE,CAAC,EAAE,EAAEC,GAAGC,CAAC;AACrB,MAAA5C,EAAE2C,GAAGL,GAAGM,CAAC,GAAGL,MAAMC,IAAI;AAAA,QACpBjC,EAAE,GAAG,eAAe,WAAW;AAC7B,UAAAnB;AAAA;AAAA,YAEE,EAAE,EAAE,EAAEoE,EAAE,KAAK;AAAA,UACzB,KAAe,EAAE,EAAE,EAAEA,EAAE,KAAK,EAAE,MAAM,MAAM,SAAS;AAAA,QACnD,CAAS;AAAA,QACDjD,EAAEZ,GAAG,eAAe,WAAW;AAC7B,UAAAP;AAAA;AAAA,YAEE,EAAE,EAAE,EAAEoE,EAAE,KAAK;AAAA,UACzB,KAAe,EAAE,EAAE,EAAEA,EAAE,KAAK,EAAE,MAAM,MAAM,SAAS;AAAA,QACnD,CAAS;AAAA,MACT,GAASjB,IAAI;AAAA,IACR;AAAA,IACD,EAAEI,GAAGC,GAAG;AACN,UAAI,IAAID,GAAGC;AAAA,MACX,KAAK,OAAO;AAAA,MACZ,EAAE,CAAC,IAAI,kBAAkB,WAAWpC,EAAE,GAAG,SAAS,CAAC,GAAGoC;AAAA,MACtD,MAAM,OAAO;AAAA,MACb,EAAE,CAAC,EAAE,OAAO,IAAIc,EAAE,EAAE,KAAK,GAAG,MAAMlD,EAAE,GAAG,UAAU,CAAC,GAAGoC;AAAA,MACrD,KAAKpC;AAAA,QACHb;AAAA,QACA;AAAA;AAAA,QAEA,EAAE,CAAC;AAAA,MACX,GAASiD;AAAA,MACH,MAAMhD,OAAOA;AAAA,MACb,EAAE,CAAC,EAAE,OAAO,IAAI+D,EAAE,EAAE,KAAK,GAAG,MAAMnD,EAAEb,GAAG,UAAUC,CAAC,GAAGgD;AAAA,MACrD,MAAM;AACJ,QAAAH;AAAA,QACA,EAAE,CAAC,EAAE;AACL,YAAI;AACJ,aAAK,IAAI,GAAG,IAAIA,EAAE,QAAQ,KAAK,GAAG;AAChC,gBAAMmB,IAAIN,GAAG,GAAGb,GAAG,CAAC;AACpB,UAAAC,EAAE,CAAC,IAAIA,EAAE,CAAC,EAAE,EAAEkB,GAAGhB,CAAC,KAAKF,EAAE,CAAC,IAAIa,GAAGK,CAAC,GAAGlB,EAAE,CAAC,EAAE,EAAG,GAAEA,EAAE,CAAC,EAAE,EAAEJ,EAAE,YAAYA,CAAC;AAAA,QACtE;AACD,eAAO,IAAII,EAAE,QAAQ,KAAK;AACxB,UAAAA,EAAE,CAAC,EAAE,EAAE,CAAC;AACV,QAAAA,EAAE,SAASD,EAAE;AAAA,MACd;AAAA,IACF;AAAA,IACD,EAAEE,GAAG;AACH,MAAAA,KAAK1C,EAAE,CAAC,GAAG0C,KAAK1C,EAAET,CAAC,GAAGmD,KAAK1C,EAAEN,CAAC,GAAGgD,KAAK1C,EAAEJ,CAAC,GAAGK,GAAGwC,GAAGC,CAAC,GAAGA,KAAK1C,EAAEqC,CAAC,GAAGC,IAAI,IAAIpD,GAAGqD,CAAC;AAAA,IAC9E;AAAA,EACL;AACA;AACA,SAASqB,GAAG,GAAG;AACb,MAAI,GAAG;AACP,SAAO,IAAI,IAAIC,GAAG;AAAA,IAChB,OAAO;AAAA,MACL;AAAA;AAAA,QAEE,EAAE,CAAC;AAAA;AAAA,MAEL;AAAA;AAAA,QAEE,EAAE,CAAC;AAAA;AAAA,MAEL;AAAA;AAAA,QAEE,EAAE,CAAC;AAAA;AAAA,MAEL,SAAS;AAAA,QACP,SAAS;AAAA,UACPL;AAAA,UACA,CAAC,EAAE,MAAM,EAAC,OAAQ,EAAE,IAAI,EAAC;AAAA,UACzB,CAAC,EAAE,MAAM,EAAG,MAAK,IAAI,OAAO;AAAA,QAC7B;AAAA,MACF;AAAA,MACD,SAAS,EAAE,KAAK,EAAG;AAAA,IACpB;AAAA,EACL,CAAG,GAAG,EAAE;AAAA,IACJ;AAAA;AAAA,IAEA,EAAE,CAAC;AAAA,EACJ,GAAE,EAAE;AAAA,IACH;AAAA;AAAA,IAEA,EAAE,CAAC;AAAA,EACJ,GAAE,EAAE;AAAA,IACH;AAAA;AAAA,IAEA,EAAE,CAAC;AAAA,EACP,GAAK;AAAA,IACD,IAAI;AACF,MAAAxB,GAAG,EAAE,GAAG,QAAQ;AAAA,IACjB;AAAA,IACD,EAAE,GAAGzC,GAAG;AACN,MAAA0C,GAAG,GAAG,GAAG1C,CAAC,GAAG,IAAI;AAAA,IAClB;AAAA,IACD,EAAE,GAAG,CAACA,CAAC,GAAG;AACR,YAAMG,IAAI,CAAA;AACV,MAAAH;AAAA,MACA,MAAMG,EAAE;AAAA,MACR,EAAE,CAAC,IAAIH;AAAA,MACP,MAAMG,EAAE;AAAA,MACR,EAAE,CAAC,IAAIH;AAAA,MACP,UAAUG,EAAE,UAAU,EAAE,OAAOH,GAAG,KAAK,EAAG,IAAG,EAAE,KAAKG,CAAC;AAAA,IACtD;AAAA,IACD,EAAE,GAAG;AACH,YAAMoC,GAAE,EAAE,GAAG,UAAU,CAAC,GAAG,IAAI;AAAA,IAChC;AAAA,IACD,EAAE,GAAG;AACH,MAAAC,GAAE,EAAE,GAAG,UAAU,CAAC,GAAG,IAAI;AAAA,IAC1B;AAAA,IACD,EAAE,GAAG;AACH,MAAAG,GAAG,GAAG,CAAC;AAAA,IACR;AAAA,EACL;AACA;AACA,MAAMuB,KAAK,CAAC,MAAM,EAAE,KAAK,GAAG,GAAGC,KAAK,CAAC,MAAM,EAAE,KAAK,GAAG;AACrD,SAASI,GAAG,GAAG,GAAG,GAAG;AACnB,MAAI,GAAGvE,GAAG,EAAE,OAAOG,EAAG,IAAG,GAAG,EAAE,eAAeC,IAAI,OAAQ,IAAG,GAAG,EAAE,WAAWC,MAAM,GAAG,EAAE,eAAeyC,IAAI,EAAG,IAAG;AAChH,QAAMC,IAAI,CAACI,GAAGC,GAAG,MAAM;AACrB,QAAIgB;AACJ,IAAAhB,MAAMY,EAAE,QAAQI,IAAIjB,EAAE,SAAS,OAAO,IAAI,CAAC,CAACqB,GAAGC,CAAC,MAAM,CAACD,IAAI,EAAE,CAAC,GAAGC,IAAI,EAAE,CAAC,CAAC,CAAC,IAAIL,IAAIjB,EAAE,SAAS,OAAO,IAAI,CAAC,CAACqB,GAAGC,CAAC,GAAGC,MAAMtB,MAAMY,EAAEU,CAAC,IAAI,CAACF,IAAI,EAAE,CAAC,GAAGC,IAAI,EAAE,CAAC,CAAC,IAAI,CAACD,GAAGC,CAAC,CAAC;AACjK,UAAME,IAAInB,GAAGY,CAAC;AACd,WAAO,EAAE,GAAGjB,GAAG,UAAU,EAAE,QAAQiB,GAAG,QAAQO,EAAC;EACnD;AACE,WAAS3B,EAAEG,GAAG;AACZ,IAAA5B,GAAG,KAAK,MAAM,GAAG4B,CAAC;AAAA,EACnB;AACD,WAASF,EAAEE,GAAG;AACZ,IAAA5B,GAAG,KAAK,MAAM,GAAG4B,CAAC;AAAA,EACnB;AACD,WAASD,EAAEC,GAAG;AACZ,IAAA5B,GAAG,KAAK,MAAM,GAAG4B,CAAC;AAAA,EACnB;AACD,SAAO,EAAE,QAAQ,CAACA,MAAM;AACtB,eAAWA,KAAK,EAAE,GAAGhD,IAAIgD,EAAE,KAAK,GAAG,mBAAmBA,KAAK,EAAE,GAAG/C,IAAI+C,EAAE,aAAa,GAAG,eAAeA,KAAK,EAAE,GAAG9C,IAAI8C,EAAE,SAAS,GAAG,mBAAmBA,KAAK,EAAE,GAAGL,IAAIK,EAAE,aAAa;AAAA,EACrL,GAAK,EAAE,GAAG,SAAS,MAAM;AACrB,MAAE,GAAG;AAAA,IACL,KAAK,EAAE,GAAG,IAAIhD,EAAE,QAAQ,GAAG,EAAE,GAAG;AAAA,IAChC,MAAM,EAAE,GAAGH,IAAI,KAAK8C,CAAC;AAAA,EACzB,GAAK;AAAA,IACD3C;AAAA,IACAC;AAAA,IACAC;AAAA,IACAL;AAAA,IACA;AAAA,IACA+C;AAAA,IACAD;AAAA,IACAE;AAAA,IACAC;AAAA,IACAC;AAAA,EACJ;AACA;AACA,MAAM0B,WAAWvB,GAAG;AAAA,EAClB,YAAY,GAAG;AACb,UAAK,GAAIR,GAAG,MAAM,GAAG0B,IAAIF,IAAIxE,IAAG;AAAA,MAC9B,OAAO;AAAA,MACP,eAAe;AAAA,MACf,WAAW;AAAA,MACX,eAAe;AAAA,IACrB,CAAK;AAAA,EACF;AACH;AACA,SAASgF,GAAG,GAAG;AACb,MAAI,GAAG,GAAG,GAAG7E,GAAGG,GAAGC,GAAGC,GAAGyC,GAAGC,GAAGC,GAAGC,GAAGC,GAAGC,GAAGC,GAAG,GAAGgB,GAAGO,GAAGH,GAAGC,GAAGC,GAAGI,GAAGC,GAAGC,GAAGC,GAAGC,GAAGC,GAAGC,GAAGC,GAAGC,GAAGC,GAAGC,GAAIC,IAAIC,IAAIC,GAAGC,IAAGC,IAAGC,IAAGC,GAAGC,IAAIC,IAAIC,IAAIC,GAAGC,IAAIC,IAAIC,IAAIC,GAAGC,IAAIC,IAAIC,IAAIC;AACnK,SAAO;AAAA,IACL,IAAI;AACF,UAAIhG,EAAE,MAAM,GAAGN,IAAIQ,EAAI,GAAEiC,IAAInC,EAAE,MAAM,GAAGwC,IAAItC,EAAI,GAAEuC,IAAIzC,EAAE,MAAM,GAAG6D,IAAI3D,EAAE,GAAI4D,IAAI9D,EAAE,MAAM,GAAGqE,IAAInE,EAAI,GAAEoE,IAAItE,EAAE,MAAM,GAAG0E,IAAIxE,EAAI,GAAEyE,IAAI3E,EAAE,MAAM,GAAG+E,KAAK7E,EAAE,GAAI8E,IAAIhF,EAAE,MAAM,GAAGmF,KAAIjF,EAAE,GAAIkF,IAAIpF,EAAE,MAAM,GAAGuF,KAAKrF,EAAE,GAAIsF,IAAIxF,EAAE,MAAM,GAAG2F,KAAKzF,EAAI,GAAE0F,IAAI5F,EAAE,MAAM,GAAGK,EAAE,GAAG,SAAS,WAAW,GAAGA,EAAE,GAAG,SAAS;AAAA,MAC7R,EAAE,CAAC,IAAI,kBAAkB,MAAM,GAAGA,EAAE,GAAG,KAAK;AAAA,MAC5C,EAAE,CAAC,EAAE,CAAC,GAAGA,EAAE,GAAG,KAAKhB;AAAA,MACnB,EAAE,CAAC,EAAE,CAAC,GAAGgB,EAAE,GAAG,SAASb;AAAA,MACvB,EAAE,CAAC,EAAE,CAAC,GAAGa,EAAE,GAAG,UAAUZ;AAAA,MACxB,EAAE,CAAC,EAAE,CAAC,GAAGY,EAAE8B,GAAG,SAAS,4BAA4B,GAAG9B;AAAA,QACpD8B;AAAA,QACA;AAAA;AAAA,QAEA,EAAE,CAAC;AAAA,MACX,GAAS9B,EAAE8B,GAAG,KAAKC;AAAA,MACb,EAAE,CAAC,EAAE,CAAC,GAAG/B,EAAE8B,GAAG,KAAKE;AAAA,MACnB,EAAE,CAAC,EAAE,CAAC,GAAGhC,EAAE8B,GAAG,SAASG;AAAA,MACvB,EAAE,CAAC,EAAE,CAAC,GAAGjC,EAAE8B,GAAG,UAAUI;AAAA,MACxB,EAAE,CAAC,EAAE,CAAC,GAAGlC,EAAEoC,GAAG,SAAS,qCAAqC,GAAGpC,EAAEoC,GAAG,KAAK;AAAA,MACzE,EAAE,CAAC,EAAE,CAAC,GAAGpC,EAAEoC,GAAG,KAAKgB;AAAA,MACnB,EAAE,CAAC,EAAE,CAAC,GAAGpD,EAAEoC,GAAG,UAAU,CAAC,GAAGpC,EAAEoC,GAAG,SAASuB;AAAA,MAC1C,EAAE,CAAC,EAAE,CAAC,GAAG3D,EAAEyD,GAAG,SAAS,uCAAuC,GAAGzD,EAAEyD,GAAG,KAAKC;AAAA,MAC3E,EAAE,CAAC,EAAE;AAAA,MACL,EAAE,CAAC,EAAE,CAAC,GAAG1D,EAAEyD,GAAG,KAAKK;AAAA,MACnB,EAAE,CAAC,EAAE,CAAC,GAAG9D,EAAEyD,GAAG,UAAUM;AAAA,MACxB,EAAE,CAAC,EAAE,CAAC,GAAG/D,EAAEyD,GAAG,SAAS,CAAC,GAAGzD,EAAEiE,GAAG,SAAS,wCAAwC,GAAGjE,EAAEiE,GAAG,KAAKC;AAAA,MAC9F,EAAE,CAAC,EAAE,CAAC,GAAGlE,EAAEiE,GAAG,KAAKE;AAAA,MACnB,EAAE,CAAC,EAAE;AAAA,MACL,EAAE,CAAC,EAAE,CAAC,GAAGnE,EAAEiE,GAAG,UAAU,CAAC,GAAGjE,EAAEiE,GAAG,SAASG;AAAA,MAC1C,EAAE,CAAC,EAAE,CAAC,GAAGpE,EAAEsE,GAAG,SAAS,sCAAsC,GAAGtE,EAAEsE,GAAG,KAAKC;AAAA,MAC1E,EAAE,CAAC,EAAE,CAAC,GAAGvE,EAAEsE,GAAG,KAAKE;AAAA,MACnB,EAAE,CAAC,EAAE,CAAC,GAAGxE,EAAEsE,GAAG,UAAUG;AAAA,MACxB,EAAE,CAAC,EAAE,CAAC,GAAGzE,EAAEsE,GAAG,SAAS,CAAC,GAAGtE,EAAE2E,GAAG,SAAS,6CAA6C,GAAG3E,EAAE2E,GAAG,KAAKC;AAAA,MACnG,EAAE,CAAC,EAAE;AAAA,MACL,EAAE,CAAC,IAAI,CAAC,GAAG5E,EAAE2E,GAAG,KAAKE;AAAA,MACrB,EAAE,CAAC,EAAE;AAAA,MACL,EAAE,CAAC,IAAI,CAAC,GAAG7E;AAAA,QACT2E;AAAA,QACA;AAAA;AAAA,QAEA,EAAE,CAAC;AAAA,MACX,GAAS3E;AAAA,QACD2E;AAAA,QACA;AAAA;AAAA,QAEA,EAAE,CAAC;AAAA,MACX,GAAS3E,EAAE+E,GAAG,SAAS,8CAA8C,GAAG/E,EAAE+E,GAAG,KAAKC;AAAA,MAC5E,EAAE,CAAC,EAAE;AAAA,MACL,EAAE,CAAC,EAAE;AAAA,MACL,EAAE,CAAC,IAAI,CAAC,GAAGhF,EAAE+E,GAAG,KAAKE;AAAA,MACrB,EAAE,CAAC,EAAE;AAAA,MACL,EAAE,CAAC,IAAI,CAAC,GAAGjF;AAAA,QACT+E;AAAA,QACA;AAAA;AAAA,QAEA,EAAE,CAAC;AAAA,MACX,GAAS/E;AAAA,QACD+E;AAAA,QACA;AAAA;AAAA,QAEA,EAAE,CAAC;AAAA,MACX,GAAS/E,EAAEmF,GAAG,SAAS,iDAAiD,GAAGnF,EAAEmF,GAAG,KAAKC;AAAA,MAC/E,EAAE,CAAC,EAAE;AAAA,MACL,EAAE,CAAC,EAAE;AAAA,MACL,EAAE,CAAC,IAAI,CAAC,GAAGpF,EAAEmF,GAAG,KAAKE;AAAA,MACrB,EAAE,CAAC,EAAE;AAAA,MACL,EAAE,CAAC,EAAE;AAAA,MACL,EAAE,CAAC,IAAI,CAAC,GAAGrF;AAAA,QACTmF;AAAA,QACA;AAAA;AAAA,QAEA,EAAE,CAAC;AAAA,MACX,GAASnF;AAAA,QACDmF;AAAA,QACA;AAAA;AAAA,QAEA,EAAE,CAAC;AAAA,MACX,GAASnF,EAAEuF,GAAG,SAAS,gDAAgD,GAAGvF,EAAEuF,GAAG,KAAKC;AAAA,MAC9E,EAAE,CAAC,EAAE;AAAA,MACL,EAAE,CAAC,IAAI,CAAC,GAAGxF,EAAEuF,GAAG,KAAKE;AAAA,MACrB,EAAE,CAAC,EAAE;AAAA,MACL,EAAE,CAAC,EAAE;AAAA,MACL,EAAE,CAAC,IAAI,CAAC,GAAGzF;AAAA,QACTuF;AAAA,QACA;AAAA;AAAA,QAEA,EAAE,CAAC;AAAA,MACX,GAASvF;AAAA,QACDuF;AAAA,QACA;AAAA;AAAA,QAEA,EAAE,CAAC;AAAA,MACX;AAAA,IACK;AAAA,IACD,EAAEK,GAAGC,GAAG;AACN,MAAArG,EAAEoG,GAAG,GAAGC,CAAC,GAAGrG,EAAEoG,GAAGvG,GAAGwG,CAAC,GAAGrG,EAAEoG,GAAG9D,GAAG+D,CAAC,GAAGrG,EAAEoG,GAAGzD,GAAG0D,CAAC,GAAGrG,EAAEoG,GAAGxD,GAAGyD,CAAC,GAAGrG,EAAEoG,GAAGpC,GAAGqC,CAAC,GAAGrG,EAAEoG,GAAGnC,GAAGoC,CAAC,GAAGrG,EAAEoG,GAAG5B,GAAG6B,CAAC,GAAGrG,EAAEoG,GAAG3B,GAAG4B,CAAC,GAAGrG,EAAEoG,GAAGvB,GAAGwB,CAAC,GAAGrG,EAAEoG,GAAGtB,GAAGuB,CAAC,GAAGrG,EAAEoG,GAAGlB,IAAImB,CAAC,GAAGrG,EAAEoG,GAAGjB,GAAGkB,CAAC,GAAGrG,EAAEoG,GAAGd,IAAGe,CAAC,GAAGrG,EAAEoG,GAAGb,GAAGc,CAAC,GAAGrG,EAAEoG,GAAGV,IAAIW,CAAC,GAAGrG,EAAEoG,GAAGT,GAAGU,CAAC,GAAGrG,EAAEoG,GAAGN,IAAIO,CAAC,GAAGrG,EAAEoG,GAAGL,GAAGM,CAAC,GAAGH,OAAOC,KAAK;AAAA,QACjP5F,EAAE,GAAG,eAAe,WAAW;AAC7B,UAAAnB;AAAA;AAAA,YAEE,EAAE,EAAE,EAAEoE,EAAE,KAAK;AAAA,UACzB,KAAe,EAAE,EAAE,EAAEA,EAAE,KAAK,EAAE,MAAM,MAAM,SAAS;AAAA,QACnD,CAAS;AAAA,QACDjD,EAAE+B,GAAG,eAAe,WAAW;AAC7B,UAAAlD;AAAA;AAAA,YAEE,EAAE,EAAE,EAAEoE,EAAE,KAAK;AAAA,UACzB,KAAe,EAAE,EAAE,EAAEA,EAAE,KAAK,EAAE,MAAM,MAAM,SAAS;AAAA,QACnD,CAAS;AAAA,QACDjD,EAAEqC,GAAG,eAAe,WAAW;AAC7B,UAAAxD;AAAA;AAAA,YAEE,EAAE,EAAE,EAAEoE,EAAE,GAAG;AAAA,UACvB,KAAe,EAAE,EAAE,EAAEA,EAAE,GAAG,EAAE,MAAM,MAAM,SAAS;AAAA,QACjD,CAAS;AAAA,QACDjD,EAAE0D,GAAG,eAAe,WAAW;AAC7B,UAAA7E;AAAA;AAAA,YAEE,EAAE,EAAE,EAAEoE,EAAE,KAAK;AAAA,UACzB,KAAe,EAAE,EAAE,EAAEA,EAAE,KAAK,EAAE,MAAM,MAAM,SAAS;AAAA,QACnD,CAAS;AAAA,QACDjD,EAAEkE,GAAG,eAAe,WAAW;AAC7B,UAAArF;AAAA;AAAA,YAEE,EAAE,EAAE,EAAEoE,EAAE,MAAM;AAAA,UAC1B,KAAe,EAAE,EAAE,EAAEA,EAAE,MAAM,EAAE,MAAM,MAAM,SAAS;AAAA,QACpD,CAAS;AAAA,QACDjD,EAAEuE,GAAG,eAAe,WAAW;AAC7B,UAAA1F;AAAA;AAAA,YAEE,EAAE,EAAE,EAAEoE,EAAE,IAAI;AAAA,UACxB,KAAe,EAAE,EAAE,EAAEA,EAAE,IAAI,EAAE,MAAM,MAAM,SAAS;AAAA,QAClD,CAAS;AAAA,QACDjD,EAAE4E,GAAG,eAAe,WAAW;AAC7B,UAAA/F;AAAA;AAAA,YAEE,EAAE,EAAE,EAAEoE,EAAE,QAAQ;AAAA,UAC5B,KAAe,EAAE,EAAE,EAAEA,EAAE,QAAQ,EAAE,MAAM,MAAM,SAAS;AAAA,QACtD,CAAS;AAAA,QACDjD,EAAEgF,GAAG,eAAe,WAAW;AAC7B,UAAAnG;AAAA;AAAA,YAEE,EAAE,EAAE,EAAEoE,EAAE,SAAS;AAAA,UAC7B,KAAe,EAAE,EAAE,EAAEA,EAAE,SAAS,EAAE,MAAM,MAAM,SAAS;AAAA,QACvD,CAAS;AAAA,QACDjD,EAAEoF,GAAG,eAAe,WAAW;AAC7B,UAAAvG;AAAA;AAAA,YAEE,EAAE,EAAE,EAAEoE,EAAE,YAAY;AAAA,UAChC,KAAe,EAAE,EAAE,EAAEA,EAAE,YAAY,EAAE,MAAM,MAAM,SAAS;AAAA,QAC1D,CAAS;AAAA,QACDjD,EAAEwF,GAAG,eAAe,WAAW;AAC7B,UAAA3G;AAAA;AAAA,YAEE,EAAE,EAAE,EAAEoE,EAAE,WAAW;AAAA,UAC/B,KAAe,EAAE,EAAE,EAAEA,EAAE,WAAW,EAAE,MAAM,MAAM,SAAS;AAAA,QACzD,CAAS;AAAA,MACT,GAAS0C,KAAK;AAAA,IACT;AAAA,IACD,EAAEE,GAAGC,GAAG;AACN,UAAID,GAAGC;AAAA,MACP,KAAK,OAAO;AAAA,MACZ,EAAE,CAAC,IAAI,kBAAkB,WAAW7F,EAAE,GAAG,SAAS,CAAC,GAAG6F;AAAA,MACtD,MAAM,OAAO;AAAA,MACb,EAAE,CAAC,EAAE,MAAM7F,EAAE,GAAG,KAAK,CAAC,GAAG6F;AAAA,MACzB,MAAM7G,OAAOA;AAAA,MACb,EAAE,CAAC,EAAE,MAAMgB,EAAE,GAAG,KAAKhB,CAAC,GAAG6G;AAAA,MACzB,MAAM1G,OAAOA;AAAA,MACb,EAAE,CAAC,EAAE,MAAMa,EAAE,GAAG,SAASb,CAAC,GAAG0G;AAAA,MAC7B,MAAMzG,OAAOA;AAAA,MACb,EAAE,CAAC,EAAE,MAAMY,EAAE,GAAG,UAAUZ,CAAC,GAAGyG;AAAA,MAC9B,KAAK7F;AAAA,QACH8B;AAAA,QACA;AAAA;AAAA,QAEA,EAAE,CAAC;AAAA,MACX,GAAS+D;AAAA,MACH,MAAM9D,OAAOA;AAAA,MACb,EAAE,CAAC,EAAE,MAAM/B,EAAE8B,GAAG,KAAKC,CAAC,GAAG8D;AAAA,MACzB,MAAM7D,OAAOA;AAAA,MACb,EAAE,CAAC,EAAE,MAAMhC,EAAE8B,GAAG,KAAKE,CAAC,GAAG6D;AAAA,MACzB,MAAM5D,OAAOA;AAAA,MACb,EAAE,CAAC,EAAE,MAAMjC,EAAE8B,GAAG,SAASG,CAAC,GAAG4D;AAAA,MAC7B,MAAM3D,OAAOA;AAAA,MACb,EAAE,CAAC,EAAE,MAAMlC,EAAE8B,GAAG,UAAUI,CAAC,GAAG2D;AAAA,MAC9B,MAAM,OAAO;AAAA,MACb,EAAE,CAAC,EAAE,MAAM7F,EAAEoC,GAAG,KAAK,CAAC,GAAGyD;AAAA,MACzB,MAAMzC,OAAOA;AAAA,MACb,EAAE,CAAC,EAAE,MAAMpD,EAAEoC,GAAG,KAAKgB,CAAC,GAAGyC;AAAA,MACzB,MAAMlC,OAAOA;AAAA,MACb,EAAE,CAAC,EAAE,MAAM3D,EAAEoC,GAAG,SAASuB,CAAC,GAAGkC;AAAA,MAC7B,MAAMnC,OAAOA;AAAA,MACb,EAAE,CAAC,EAAE;AAAA,MACL,EAAE,CAAC,EAAE,MAAM1D,EAAEyD,GAAG,KAAKC,CAAC,GAAGmC;AAAA,MACzB,MAAM/B,OAAOA;AAAA,MACb,EAAE,CAAC,EAAE,MAAM9D,EAAEyD,GAAG,KAAKK,CAAC,GAAG+B;AAAA,MACzB,MAAM9B,OAAOA;AAAA,MACb,EAAE,CAAC,EAAE,MAAM/D,EAAEyD,GAAG,UAAUM,CAAC,GAAG8B;AAAA,MAC9B,MAAM3B,OAAOA;AAAA,MACb,EAAE,CAAC,EAAE,MAAMlE,EAAEiE,GAAG,KAAKC,CAAC,GAAG2B;AAAA,MACzB,MAAM1B,OAAOA;AAAA,MACb,EAAE,CAAC,EAAE;AAAA,MACL,EAAE,CAAC,EAAE,MAAMnE,EAAEiE,GAAG,KAAKE,CAAC,GAAG0B;AAAA,MACzB,MAAMzB,OAAOA;AAAA,MACb,EAAE,CAAC,EAAE,MAAMpE,EAAEiE,GAAG,SAASG,CAAC,GAAGyB;AAAA,MAC7B,MAAMtB,OAAOA;AAAA,MACb,EAAE,CAAC,EAAE,MAAMvE,EAAEsE,GAAG,KAAKC,CAAC,GAAGsB;AAAA,MACzB,MAAMrB,OAAQA;AAAA,MACd,EAAE,CAAC,EAAE,MAAMxE,EAAEsE,GAAG,KAAKE,CAAE,GAAGqB;AAAA,MAC1B,MAAMpB,QAAQA;AAAA,MACd,EAAE,CAAC,EAAE,MAAMzE,EAAEsE,GAAG,UAAUG,EAAE,GAAGoB;AAAA,MAC/B,MAAMjB,QAAOA;AAAA,MACb,EAAE,CAAC,EAAE;AAAA,MACL,EAAE,CAAC,IAAI,MAAM5E,EAAE2E,GAAG,KAAKC,EAAC,GAAGiB;AAAA,MAC3B,MAAMhB,QAAOA;AAAA,MACb,EAAE,CAAC,EAAE;AAAA,MACL,EAAE,CAAC,IAAI,MAAM7E,EAAE2E,GAAG,KAAKE,EAAC,GAAGgB;AAAA,MAC3B,KAAK7F;AAAA,QACH2E;AAAA,QACA;AAAA;AAAA,QAEA,EAAE,CAAC;AAAA,MACX,GAASkB;AAAA,MACH,KAAK7F;AAAA,QACH2E;AAAA,QACA;AAAA;AAAA,QAEA,EAAE,CAAC;AAAA,MACX,GAASkB;AAAA,MACH,MAAMb,QAAQA;AAAA,MACd,EAAE,CAAC,EAAE;AAAA,MACL,EAAE,CAAC,EAAE;AAAA,MACL,EAAE,CAAC,IAAI,MAAMhF,EAAE+E,GAAG,KAAKC,EAAE,GAAGa;AAAA,MAC5B,MAAMZ,QAAQA;AAAA,MACd,EAAE,CAAC,EAAE;AAAA,MACL,EAAE,CAAC,IAAI,MAAMjF,EAAE+E,GAAG,KAAKE,EAAE,GAAGY;AAAA,MAC5B,KAAK7F;AAAA,QACH+E;AAAA,QACA;AAAA;AAAA,QAEA,EAAE,CAAC;AAAA,MACX,GAASc;AAAA,MACH,KAAK7F;AAAA,QACH+E;AAAA,QACA;AAAA;AAAA,QAEA,EAAE,CAAC;AAAA,MACX,GAASc;AAAA,MACH,MAAMT,QAAQA;AAAA,MACd,EAAE,CAAC,EAAE;AAAA,MACL,EAAE,CAAC,EAAE;AAAA,MACL,EAAE,CAAC,IAAI,MAAMpF,EAAEmF,GAAG,KAAKC,EAAE,GAAGS;AAAA,MAC5B,MAAMR,QAAQA;AAAA,MACd,EAAE,CAAC,EAAE;AAAA,MACL,EAAE,CAAC,EAAE;AAAA,MACL,EAAE,CAAC,IAAI,MAAMrF,EAAEmF,GAAG,KAAKE,EAAE,GAAGQ;AAAA,MAC5B,KAAK7F;AAAA,QACHmF;AAAA,QACA;AAAA;AAAA,QAEA,EAAE,CAAC;AAAA,MACX,GAASU;AAAA,MACH,KAAK7F;AAAA,QACHmF;AAAA,QACA;AAAA;AAAA,QAEA,EAAE,CAAC;AAAA,MACX,GAASU;AAAA,MACH,MAAML,QAAQA;AAAA,MACd,EAAE,CAAC,EAAE;AAAA,MACL,EAAE,CAAC,IAAI,MAAMxF,EAAEuF,GAAG,KAAKC,EAAE,GAAGK;AAAA,MAC5B,MAAMJ,QAAQA;AAAA,MACd,EAAE,CAAC,EAAE;AAAA,MACL,EAAE,CAAC,EAAE;AAAA,MACL,EAAE,CAAC,IAAI,MAAMzF,EAAEuF,GAAG,KAAKE,EAAE,GAAGI;AAAA,MAC5B,KAAK7F;AAAA,QACHuF;AAAA,QACA;AAAA;AAAA,QAEA,EAAE,CAAC;AAAA,MACX,GAASM;AAAA,MACH,KAAK7F;AAAA,QACHuF;AAAA,QACA;AAAA;AAAA,QAEA,EAAE,CAAC;AAAA,MACX;AAAA,IACK;AAAA,IACD,EAAEK,GAAG;AACH,MAAAA,KAAKnG,EAAE,CAAC,GAAGmG,KAAKnG,EAAEJ,CAAC,GAAGuG,KAAKnG,EAAEqC,CAAC,GAAG8D,KAAKnG,EAAE0C,CAAC,GAAGyD,KAAKnG,EAAE2C,CAAC,GAAGwD,KAAKnG,EAAE+D,CAAC,GAAGoC,KAAKnG,EAAEgE,CAAC,GAAGmC,KAAKnG,EAAEuE,CAAC,GAAG4B,KAAKnG,EAAEwE,CAAC,GAAG2B,KAAKnG,EAAE4E,CAAC,GAAGuB,KAAKnG,EAAE6E,CAAC,GAAGsB,KAAKnG,EAAEiF,EAAE,GAAGkB,KAAKnG,EAAEkF,CAAC,GAAGiB,KAAKnG,EAAEqF,EAAC,GAAGc,KAAKnG,EAAEsF,CAAC,GAAGa,KAAKnG,EAAEyF,EAAE,GAAGU,KAAKnG,EAAE0F,CAAC,GAAGS,KAAKnG,EAAE6F,EAAE,GAAGM,KAAKnG,EAAE8F,CAAC,GAAGG,KAAK,IAAI/G,GAAGgH,EAAE;AAAA,IACnO;AAAA,EACL;AACA;AACA,SAASG,GAAG,GAAG;AACb,MAAI,GAAG;AACP,SAAO,IAAI,IAAIxC,GAAG;AAAA,IAChB,OAAO;AAAA,MACL;AAAA;AAAA,QAEE,EAAE,CAAC;AAAA;AAAA,MAEL;AAAA;AAAA,QAEE,EAAE,CAAC;AAAA;AAAA,MAEL;AAAA;AAAA,QAEE,EAAE,CAAC;AAAA;AAAA,MAEL,SAAS;AAAA,QACP,SAAS;AAAA,UACPO;AAAA,UACA,CAAC,EAAE,MAAM,EAAC,OAAQ,EAAE,IAAI,EAAC;AAAA,UACzB,CAAC,EAAE,MAAM,EAAG,MAAK,IAAI,OAAO;AAAA,QAC7B;AAAA,MACF;AAAA,MACD,SAAS,EAAE,KAAK,EAAG;AAAA,IACpB;AAAA,EACL,CAAG,GAAG,EAAE;AAAA,IACJ;AAAA;AAAA,IAEA,EAAE,CAAC;AAAA,EACJ,GAAE,EAAE;AAAA,IACH;AAAA;AAAA,IAEA,EAAE,CAAC;AAAA,EACJ,GAAE,EAAE;AAAA,IACH;AAAA;AAAA,IAEA,EAAE,CAAC;AAAA,EACP,GAAK;AAAA,IACD,IAAI;AACF,MAAApC,GAAG,EAAE,GAAG,QAAQ;AAAA,IACjB;AAAA,IACD,EAAE,GAAGzC,GAAG;AACN,MAAA0C,GAAG,GAAG,GAAG1C,CAAC,GAAG,IAAI;AAAA,IAClB;AAAA,IACD,EAAE,GAAG,CAACA,CAAC,GAAG;AACR,YAAMG,IAAI,CAAA;AACV,MAAAH;AAAA,MACA,MAAMG,EAAE;AAAA,MACR,EAAE,CAAC,IAAIH;AAAA,MACP,MAAMG,EAAE;AAAA,MACR,EAAE,CAAC,IAAIH;AAAA,MACP,SAASG,EAAE,UAAU,EAAE,OAAOH,GAAG,KAAK,EAAG,IAAG,EAAE,KAAKG,CAAC;AAAA,IACrD;AAAA,IACD,EAAE,GAAG;AACH,YAAMoC,GAAE,EAAE,GAAG,UAAU,CAAC,GAAG,IAAI;AAAA,IAChC;AAAA,IACD,EAAE,GAAG;AACH,MAAAC,GAAE,EAAE,GAAG,UAAU,CAAC,GAAG,IAAI;AAAA,IAC1B;AAAA,IACD,EAAE,GAAG;AACH,MAAAG,GAAG,GAAG,CAAC;AAAA,IACR;AAAA,EACL;AACA;AACA,SAASoE,GAAG,GAAG,GAAG,GAAG;AACnB,MAAI,GAAG/G,GAAG,EAAE,OAAOG,EAAG,IAAG,GAAG,EAAE,eAAeC,IAAI,OAAQ,IAAG,GAAG,EAAE,WAAWC,MAAM,GAAG,EAAE,eAAeyC,IAAI,EAAG,IAAG;AAChH,QAAMC,IAAI,CAACI,GAAGC,GAAG,MAAM;AACrB,UAAMgB,IAAIjB,EAAE,SAAS;AACrB,QAAI,CAACwB,GAAGH,CAAC,IAAI,CAACJ,EAAE,MAAMA,EAAE,IAAI,GAAG,CAACK,GAAGC,CAAC,IAAI,CAACN,EAAE,MAAMA,EAAE,IAAI;AACvD,UAAM,CAACU,GAAGC,CAAC,IAAI;AACf,QAAI3B,MAAMY,EAAE;AACV,MAAAW,KAAKG,GAAGL,KAAKK,GAAGN,KAAKO,GAAGL,KAAKK;AAAA,SAC1B;AACH,cAAQ3B,GAAC;AAAA,QACP,KAAKY,EAAE;AAAA,QACP,KAAKA,EAAE;AAAA,QACP,KAAKA,EAAE,WAAW;AAChB,UAAAQ,KAAKO;AACL;AAAA,QACD;AAAA,QACD,KAAKf,EAAE;AAAA,QACP,KAAKA,EAAE;AAAA,QACP,KAAKA,EAAE,cAAc;AACnB,UAAAU,KAAKK;AACL;AAAA,QACD;AAAA,MACF;AACD,cAAQ3B,GAAC;AAAA,QACP,KAAKY,EAAE;AAAA,QACP,KAAKA,EAAE;AAAA,QACP,KAAKA,EAAE,aAAa;AAClB,UAAAW,KAAKG;AACL;AAAA,QACD;AAAA,QACD,KAAKd,EAAE;AAAA,QACP,KAAKA,EAAE;AAAA,QACP,KAAKA,EAAE,cAAc;AACnB,UAAAS,KAAKK;AACL;AAAA,QACD;AAAA,MACF;AAAA,IACF;AACD,UAAME,IAAI,KAAK,IAAIL,GAAGF,CAAC,GAAGQ,IAAI,KAAK,IAAIT,GAAGE,CAAC,GAAGQ,IAAI,KAAK,IAAIT,IAAIE,CAAC,GAAGQ,IAAI,KAAK,IAAIT,IAAIF,CAAC;AACrF,WAAO;AAAA,MACL,GAAGrB;AAAA,MACH,UAAU;AAAA,QACR,GAAG6B;AAAA,QACH,GAAGC;AAAA,QACH,GAAAC;AAAA,QACA,GAAGC;AAAA,QACH,QAAQ;AAAA,UACN,MAAMH;AAAA,UACN,MAAMC;AAAA,UACN,MAAMD,IAAIE;AAAA,UACV,MAAMD,IAAIE;AAAA,QACX;AAAA,MACF;AAAA,IACP;AAAA,EACA;AACE,WAASnC,EAAEG,GAAG;AACZ,IAAA5B,GAAG,KAAK,MAAM,GAAG4B,CAAC;AAAA,EACnB;AACD,WAASF,EAAEE,GAAG;AACZ,IAAA5B,GAAG,KAAK,MAAM,GAAG4B,CAAC;AAAA,EACnB;AACD,WAASD,EAAEC,GAAG;AACZ,IAAA5B,GAAG,KAAK,MAAM,GAAG4B,CAAC;AAAA,EACnB;AACD,SAAO,EAAE,QAAQ,CAACA,MAAM;AACtB,eAAWA,KAAK,EAAE,GAAGhD,IAAIgD,EAAE,KAAK,GAAG,mBAAmBA,KAAK,EAAE,GAAG/C,IAAI+C,EAAE,aAAa,GAAG,eAAeA,KAAK,EAAE,GAAG9C,IAAI8C,EAAE,SAAS,GAAG,mBAAmBA,KAAK,EAAE,GAAGL,IAAIK,EAAE,aAAa;AAAA,EACrL,GAAK,EAAE,GAAG,SAAS,MAAM;AACrB,MAAE,GAAG;AAAA,IACL,KAAK,EAAE,GAAG,IAAIhD,EAAE,QAAQ,GAAG,EAAE,GAAG;AAAA,IAChC,MAAM,EAAE,GAAGH,IAAI,KAAK8C,CAAC;AAAA,EACzB,GAAK;AAAA,IACD3C;AAAA,IACAC;AAAA,IACAC;AAAA,IACAL;AAAA,IACA;AAAA,IACA+C;AAAA,IACAD;AAAA,IACAE;AAAA,IACAC;AAAA,IACAC;AAAA,EACJ;AACA;AACA,MAAM8D,WAAW3D,GAAG;AAAA,EAClB,YAAY,GAAG;AACb,UAAK,GAAIR,GAAG,MAAM,GAAGkE,IAAID,IAAIjH,IAAG;AAAA,MAC9B,OAAO;AAAA,MACP,eAAe;AAAA,MACf,WAAW;AAAA,MACX,eAAe;AAAA,IACrB,CAAK;AAAA,EACF;AACH;AAEGyD,GAAE,WACFA,GAAE;AACwD,MAAAU,IAAI,CAAC,MAAM,UAAU,CAAC;AACnFA,EAAE,QAAQ;AACVA,EAAE,MAAM;AACRA,EAAE,QAAQ;AACVA,EAAE,SAAS;AACXA,EAAE,OAAO;AACTA,EAAE,WAAW;AACbA,EAAE,YAAY;AACdA,EAAE,eAAe;AACjBA,EAAE,cAAc;AAChB,MAAMiD,KAAK,CAAC,OAAO,CAAE,IAAGC,KAAK,CAAC,OAAO,EAAE;AAAA;AAAA,EAErC,EAAE,CAAC;AAAA,EACJ;AACD,SAASC,GAAG,GAAG;AACb,MAAI,GAAG,GAAG,GAAGnH;AACb,QAAMG;AAAA;AAAA,IAEJ,EAAE,CAAC,EAAE;AAAA,KACJC,IAAIL;AAAA,IACLI;AAAA,IACA;AAAA;AAAA,IAEA,EAAE,CAAC;AAAA,IACH+G;AAAA,EACJ;AACE,SAAO;AAAA,IACL,IAAI;AACF,UAAIvG,EAAE,GAAG,GAAGP,KAAKA,EAAE,EAAG,GAAEY,EAAE,GAAG,SAAS,yBAAyB;AAAA,IAChE;AAAA,IACD,EAAEX,GAAGyC,GAAG;AACN,MAAAtC,EAAEH,GAAG,GAAGyC,CAAC,GAAG1C,KAAKA,EAAE,EAAE,GAAG,IAAI,GAAG,IAAI,IAAI,MAAMJ,IAAI;AAAA,QAC/Ce;AAAA,UACE;AAAA,UACA;AAAA;AAAA,UAEA,EAAE,CAAC;AAAA,QACJ;AAAA,QACDA;AAAA,UACE;AAAA,UACA;AAAA;AAAA,UAEA,EAAE,CAAC;AAAA,QACJ;AAAA,MACT,GAAS,IAAI;AAAA,IACR;AAAA,IACD,EAAEV,GAAG,CAACyC,CAAC,GAAG;AACR,MAAA1C,KAAKA,EAAE,MAAM,CAAC,KAAK0C;AAAA,MACnB,OAAOxC;AAAA,QACLF;AAAA,QACAD;AAAA,QACAE;AAAA;AAAA,QAEAA,EAAE,CAAC;AAAA,QACH,IAAIH;AAAA,UACFC;AAAA;AAAA,UAEAE,EAAE,CAAC;AAAA,UACHyC;AAAA,UACAmE;AAAA,QACV,IAAY1G;AAAA;AAAA,UAEFF,EAAE,CAAC;AAAA,QACJ;AAAA,QACD6G;AAAA,MACR;AAAA,IACK;AAAA,IACD,EAAE7G,GAAG;AACH,YAAMkC,GAAEnC,GAAGC,CAAC,GAAG,IAAI;AAAA,IACpB;AAAA,IACD,EAAEA,GAAG;AACH,MAAAmC,GAAEpC,GAAGC,CAAC,GAAG,IAAI;AAAA,IACd;AAAA,IACD,EAAEA,GAAG;AACH,MAAAA,KAAKI,EAAE,CAAC,GAAGL,KAAKA,EAAE,EAAEC,CAAC,GAAG,IAAI,IAAIV,GAAGK,CAAC;AAAA,IACrC;AAAA,EACL;AACA;AACA,SAASoH,GAAG,GAAG,GAAG,GAAG;AACnB,MAAI,EAAE,SAAS,IAAI,CAAA,GAAI,SAASpH,EAAG,IAAG;AACtC,QAAMG,IAAImB;AACV,MAAI,EAAE,OAAOlB,EAAG,IAAG,GAAG,EAAE,QAAQC,EAAC,IAAK,GAAG,EAAE,WAAWyC,EAAG,IAAG,GAAGC,IAAI,MAAMC,GAAGC,IAAI;AAChF,QAAMC,IAAI,CAAC,MAAM,CAACkB,MAAM;AACtB,IAAArB,IAAI,GAAGC,IAAIF,EAAE,eAAesB,EAAE,SAASA,EAAE,OAAO,GAAGnB,IAAI7C,GAAGgE,EAAE,OAAO,kBAAkBA,EAAE,SAAS,GAAGjE,EAAE,MAAM;AAAA,EAC/G,GAAKgD,IAAI,CAAC,MAAM;AACZ,QAAIJ,GAAG;AACL,YAAM,CAACqB,GAAGO,CAAC,IAAI7B,EAAE,eAAe,EAAE,SAAS,EAAE,OAAO,GAAG0B,IAAI,CAACJ,IAAIpB,EAAE,CAAC,GAAG2B,IAAI3B,EAAE,CAAC,CAAC;AAC9E,QAAE,GAAG5C,IAAIC,EAAE4C,GAAGF,GAAGyB,CAAC,CAAC,GAAGrE,EAAE,UAAUC,CAAC;AAAA,IACpC;AAAA,EACL,GAAKgD,IAAI,CAAC,MAAM;AACZ,MAAE,OAAO,sBAAsB,EAAE,SAAS,GAAGL,IAAI,MAAME,IAAI7C,GAAGD,EAAE,SAAS;AAAA,EAC7E;AACE,SAAO,EAAE,QAAQ,CAAC,MAAM;AACtB,eAAW,KAAK,EAAE,GAAGC,IAAI,EAAE,KAAK,GAAG,YAAY,KAAK,EAAE,GAAGC,IAAI,EAAE,MAAM,GAAG,eAAe,KAAK,EAAE,GAAGyC,IAAI,EAAE,SAAS,GAAG,aAAa,KAAK,EAAE,GAAG9C,IAAI,EAAE,OAAO;AAAA,EAC3J,GAAK,CAACkD,GAAGC,GAAGC,GAAGhD,GAAGC,GAAGyC,GAAG9C,GAAG,CAAC;AAC5B;AACA,MAAMsE,WAAWjB,GAAG;AAAA,EAClB,YAAY,GAAG;AACb,UAAK,GAAIR,GAAG,MAAM,GAAGuE,IAAID,IAAItH,IAAG,EAAE,OAAO,GAAG,QAAQ,GAAG,WAAW,EAAC,CAAE;AAAA,EACtE;AACH;ACl2DA,SAASwH,KAAO;AAAG;AAEnB,SAASC,GAAOC,GAAKC,GAAK;AAEtB,aAAW/C,KAAK+C;AACZ,IAAAD,EAAI9C,CAAC,IAAI+C,EAAI/C,CAAC;AAClB,SAAO8C;AACX;AAWA,SAASE,GAAI9D,GAAI;AACb,SAAOA,EAAE;AACb;AACA,SAAS+D,KAAe;AACpB,SAAO,uBAAO,OAAO,IAAI;AAC7B;AACA,SAASC,GAAQC,GAAK;AAClB,EAAAA,EAAI,QAAQH,EAAG;AACnB;AACA,SAASI,EAAYC,GAAO;AACxB,SAAO,OAAOA,KAAU;AAC5B;AACA,SAASC,GAAejF,GAAG4B,GAAG;AAC1B,SAAO5B,KAAKA,IAAI4B,KAAKA,IAAI5B,MAAM4B,KAAO5B,KAAK,OAAOA,KAAM,YAAa,OAAOA,KAAM;AACtF;AAYA,SAASkF,GAASC,GAAK;AACnB,SAAO,OAAO,KAAKA,CAAG,EAAE,WAAW;AACvC;AAqBA,SAASC,GAAYC,GAAYC,GAAKC,GAAS1E,GAAI;AAC/C,MAAIwE,GAAY;AACZ,UAAMG,IAAWC,GAAiBJ,GAAYC,GAAKC,GAAS1E,CAAE;AAC9D,WAAOwE,EAAW,CAAC,EAAEG,CAAQ;AAAA,EAChC;AACL;AACA,SAASC,GAAiBJ,GAAYC,GAAKC,GAAS1E,GAAI;AACpD,SAAOwE,EAAW,CAAC,KAAKxE,IAClB2D,GAAOe,EAAQ,IAAI,MAAO,GAAEF,EAAW,CAAC,EAAExE,EAAGyE,CAAG,CAAC,CAAC,IAClDC,EAAQ;AAClB;AACA,SAASG,GAAiBL,GAAYE,GAASI,GAAO9E,GAAI;AACtD,MAAIwE,EAAW,CAAC,KAAKxE,GAAI;AACrB,UAAM+E,IAAOP,EAAW,CAAC,EAAExE,EAAG8E,CAAK,CAAC;AACpC,QAAIJ,EAAQ,UAAU;AAClB,aAAOK;AAEX,QAAI,OAAOA,KAAS,UAAU;AAC1B,YAAMC,IAAS,CAAA,GACTC,IAAM,KAAK,IAAIP,EAAQ,MAAM,QAAQK,EAAK,MAAM;AACtD,eAAS1I,IAAI,GAAGA,IAAI4I,GAAK5I,KAAK;AAC1B,QAAA2I,EAAO3I,CAAC,IAAIqI,EAAQ,MAAMrI,CAAC,IAAI0I,EAAK1I,CAAC;AAEzC,aAAO2I;AAAA,IACV;AACD,WAAON,EAAQ,QAAQK;AAAA,EAC1B;AACD,SAAOL,EAAQ;AACnB;AACA,SAASQ,GAAiBC,GAAMC,GAAiBX,GAAKC,GAASW,GAAcC,GAAqB;AAC9F,MAAID,GAAc;AACd,UAAME,IAAeX,GAAiBQ,GAAiBX,GAAKC,GAASY,CAAmB;AACxF,IAAAH,EAAK,EAAEI,GAAcF,CAAY;AAAA,EACpC;AACL;AAKA,SAASG,GAAyBd,GAAS;AACvC,MAAIA,EAAQ,IAAI,SAAS,IAAI;AACzB,UAAMI,IAAQ,CAAA,GACRW,IAASf,EAAQ,IAAI,SAAS;AACpC,aAASrI,IAAI,GAAGA,IAAIoJ,GAAQpJ;AACxB,MAAAyI,EAAMzI,CAAC,IAAI;AAEf,WAAOyI;AAAA,EACV;AACD,SAAO;AACX;AAkSA,SAASY,EAAOC,GAAQC,GAAMC,GAAQ;AAClC,EAAAF,EAAO,aAAaC,GAAMC,KAAU,IAAI;AAC5C;AASA,SAASC,EAAOF,GAAM;AAClB,EAAIA,EAAK,cACLA,EAAK,WAAW,YAAYA,CAAI;AAExC;AACA,SAASG,GAAaC,GAAYC,GAAW;AACzC,WAAS5J,IAAI,GAAGA,IAAI2J,EAAW,QAAQ3J,KAAK;AACxC,IAAI2J,EAAW3J,CAAC,KACZ2J,EAAW3J,CAAC,EAAE,EAAE4J,CAAS;AAErC;AAmBA,SAASC,EAAYC,GAAM;AACvB,SAAO,SAAS,gBAAgB,8BAA8BA,CAAI;AACtE;AACA,SAASC,GAAKC,GAAM;AAChB,SAAO,SAAS,eAAeA,CAAI;AACvC;AACA,SAASC,IAAQ;AACb,SAAOF,GAAK,GAAG;AACnB;AACA,SAASG,KAAQ;AACb,SAAOH,GAAK,EAAE;AAClB;AAIA,SAASI,EAAOZ,GAAMa,GAAOC,GAASC,GAAS;AAC3C,SAAAf,EAAK,iBAAiBa,GAAOC,GAASC,CAAO,GACtC,MAAMf,EAAK,oBAAoBa,GAAOC,GAASC,CAAO;AACjE;AAoCA,SAASC,EAAKhB,GAAMiB,GAAWC,GAAO;AAClC,EAAIA,KAAS,OACTlB,EAAK,gBAAgBiB,CAAS,IACzBjB,EAAK,aAAaiB,CAAS,MAAMC,KACtClB,EAAK,aAAaiB,GAAWC,CAAK;AAC1C;AAuHA,SAASC,GAASC,GAAS;AACvB,SAAO,MAAM,KAAKA,EAAQ,UAAU;AACxC;AA2PA,SAASC,GAAaC,GAAMC,GAAQ,EAAE,SAAAC,IAAU,IAAO,YAAAC,IAAa,GAAO,IAAG,IAAI;AAC9E,QAAMC,IAAI,SAAS,YAAY,aAAa;AAC5C,SAAAA,EAAE,gBAAgBJ,GAAME,GAASC,GAAYF,CAAM,GAC5CG;AACX;AA4OA,IAAIC;AACJ,SAASC,GAAsBC,GAAW;AACtC,EAAAF,KAAoBE;AACxB;AACA,SAASC,KAAwB;AAC7B,MAAI,CAACH;AACD,UAAM,IAAI,MAAM,kDAAkD;AACtE,SAAOA;AACX;AAoBA,SAASI,GAAQ3H,GAAI;AACjB,EAAA0H,GAAuB,EAAC,GAAG,SAAS,KAAK1H,CAAE;AAC/C;AAgCA,SAAS4H,KAAwB;AAC7B,QAAMH,IAAYC;AAClB,SAAO,CAACR,GAAMC,GAAQ,EAAE,YAAAE,IAAa,GAAO,IAAG,OAAO;AAClD,UAAMQ,IAAYJ,EAAU,GAAG,UAAUP,CAAI;AAC7C,QAAIW,GAAW;AAGX,YAAMpB,IAAQQ,GAAaC,GAAMC,GAAQ,EAAE,YAAAE,EAAU,CAAE;AACvD,aAAAQ,EAAU,MAAK,EAAG,QAAQ,CAAA7H,MAAM;AAC5B,QAAAA,EAAG,KAAKyH,GAAWhB,CAAK;AAAA,MACxC,CAAa,GACM,CAACA,EAAM;AAAA,IACjB;AACD,WAAO;AAAA,EACf;AACA;AA6CA,SAASqB,GAAOL,GAAWhB,GAAO;AAC9B,QAAMoB,IAAYJ,EAAU,GAAG,UAAUhB,EAAM,IAAI;AACnD,EAAIoB,KAEAA,EAAU,QAAQ,QAAQ,CAAA7H,MAAMA,EAAG,KAAK,MAAMyG,CAAK,CAAC;AAE5D;AAEA,MAAMsB,KAAmB,CAAA,GAEnBC,KAAoB,CAAA;AAC1B,IAAIC,KAAmB,CAAA;AACvB,MAAMC,KAAkB,CAAA,GAClBC,KAAmC,wBAAQ;AACjD,IAAIC,KAAmB;AACvB,SAASC,KAAkB;AACvB,EAAKD,OACDA,KAAmB,IACnBD,GAAiB,KAAKG,EAAK;AAEnC;AAKA,SAASC,GAAoBvI,GAAI;AAC7B,EAAAiI,GAAiB,KAAKjI,CAAE;AAC5B;AAsBA,MAAMwI,KAAiB,oBAAI;AAC3B,IAAIC,KAAW;AACf,SAASH,KAAQ;AAIb,MAAIG,OAAa;AACb;AAEJ,QAAMC,IAAkBnB;AACxB,KAAG;AAGC,QAAI;AACA,aAAOkB,KAAWV,GAAiB,UAAQ;AACvC,cAAMN,IAAYM,GAAiBU,EAAQ;AAC3C,QAAAA,MACAjB,GAAsBC,CAAS,GAC/BkB,GAAOlB,EAAU,EAAE;AAAA,MACtB;AAAA,IACJ,SACMH,GAAG;AAEN,YAAAS,GAAiB,SAAS,GAC1BU,KAAW,GACLnB;AAAA,IACT;AAID,SAHAE,GAAsB,IAAI,GAC1BO,GAAiB,SAAS,GAC1BU,KAAW,GACJT,GAAkB;AACrB,MAAAA,GAAkB,IAAG;AAIzB,aAAS3L,IAAI,GAAGA,IAAI4L,GAAiB,QAAQ5L,KAAK,GAAG;AACjD,YAAMuM,IAAWX,GAAiB5L,CAAC;AACnC,MAAKmM,GAAe,IAAII,CAAQ,MAE5BJ,GAAe,IAAII,CAAQ,GAC3BA;IAEP;AACD,IAAAX,GAAiB,SAAS;AAAA,EAClC,SAAaF,GAAiB;AAC1B,SAAOG,GAAgB;AACnB,IAAAA,GAAgB,IAAG;AAEvB,EAAAE,KAAmB,IACnBI,GAAe,MAAK,GACpBhB,GAAsBkB,CAAe;AACzC;AACA,SAASC,GAAOE,GAAI;AAChB,MAAIA,EAAG,aAAa,MAAM;AACtB,IAAAA,EAAG,OAAM,GACT7E,GAAQ6E,EAAG,aAAa;AACxB,UAAM/D,IAAQ+D,EAAG;AACjB,IAAAA,EAAG,QAAQ,CAAC,EAAE,GACdA,EAAG,YAAYA,EAAG,SAAS,EAAEA,EAAG,KAAK/D,CAAK,GAC1C+D,EAAG,aAAa,QAAQN,EAAmB;AAAA,EAC9C;AACL;AAIA,SAASO,GAAuB7E,GAAK;AACjC,QAAM8E,IAAW,CAAA,GACXC,IAAU,CAAA;AAChB,EAAAf,GAAiB,QAAQ,CAAC3I,MAAM2E,EAAI,QAAQ3E,CAAC,MAAM,KAAKyJ,EAAS,KAAKzJ,CAAC,IAAI0J,EAAQ,KAAK1J,CAAC,CAAC,GAC1F0J,EAAQ,QAAQ,CAAC1J,MAAMA,EAAG,CAAA,GAC1B2I,KAAmBc;AACvB;AAeA,MAAME,KAAW,oBAAI;AACrB,IAAIC;AAcJ,SAASC,GAAcC,GAAOC,GAAO;AACjC,EAAID,KAASA,EAAM,MACfH,GAAS,OAAOG,CAAK,GACrBA,EAAM,EAAEC,CAAK;AAErB;AACA,SAASC,GAAeF,GAAOC,GAAOvD,GAAQ8C,GAAU;AACpD,MAAIQ,KAASA,EAAM,GAAG;AAClB,QAAIH,GAAS,IAAIG,CAAK;AAClB;AACJ,IAAAH,GAAS,IAAIG,CAAK,GAClBF,GAAO,EAAE,KAAK,MAAM;AAChB,MAAAD,GAAS,OAAOG,CAAK,GACjBR,MACI9C,KACAsD,EAAM,EAAE,CAAC,GACbR;IAEhB,CAAS,GACDQ,EAAM,EAAEC,CAAK;AAAA,EAChB;AACI,IAAIT,KACLA;AAER;AAmqBA,SAASW,GAAiBH,GAAO;AAC7B,EAAAA,KAASA,EAAM;AACnB;AAIA,SAASI,GAAgB/B,GAAW9B,GAAQE,GAAQ4D,GAAe;AAC/D,QAAM,EAAE,UAAAC,GAAU,cAAAC,MAAiBlC,EAAU;AAC7C,EAAAiC,KAAYA,EAAS,EAAE/D,GAAQE,CAAM,GAChC4D,KAEDlB,GAAoB,MAAM;AACtB,UAAMqB,IAAiBnC,EAAU,GAAG,SAAS,IAAI3D,EAAG,EAAE,OAAOI,CAAW;AAIxE,IAAIuD,EAAU,GAAG,aACbA,EAAU,GAAG,WAAW,KAAK,GAAGmC,CAAc,IAK9C5F,GAAQ4F,CAAc,GAE1BnC,EAAU,GAAG,WAAW;EACpC,CAAS,GAELkC,EAAa,QAAQpB,EAAmB;AAC5C;AACA,SAASsB,GAAkBpC,GAAWxB,GAAW;AAC7C,QAAM4C,IAAKpB,EAAU;AACrB,EAAIoB,EAAG,aAAa,SAChBC,GAAuBD,EAAG,YAAY,GACtC7E,GAAQ6E,EAAG,UAAU,GACrBA,EAAG,YAAYA,EAAG,SAAS,EAAE5C,CAAS,GAGtC4C,EAAG,aAAaA,EAAG,WAAW,MAC9BA,EAAG,MAAM;AAEjB;AACA,SAASiB,GAAWrC,GAAWpL,GAAG;AAC9B,EAAIoL,EAAU,GAAG,MAAM,CAAC,MAAM,OAC1BM,GAAiB,KAAKN,CAAS,GAC/BY,MACAZ,EAAU,GAAG,MAAM,KAAK,CAAC,IAE7BA,EAAU,GAAG,MAAOpL,IAAI,KAAM,CAAC,KAAM,KAAMA,IAAI;AACnD;AACA,SAAS0N,GAAKtC,GAAWd,GAASqD,GAAUC,GAAiBC,GAAWC,GAAOC,GAAetF,IAAQ,CAAC,EAAE,GAAG;AACxG,QAAMuF,IAAmB9C;AACzB,EAAAC,GAAsBC,CAAS;AAC/B,QAAMoB,IAAKpB,EAAU,KAAK;AAAA,IACtB,UAAU;AAAA,IACV,KAAK,CAAE;AAAA;AAAA,IAEP,OAAA0C;AAAA,IACA,QAAQzG;AAAA,IACR,WAAAwG;AAAA,IACA,OAAOnG,GAAc;AAAA;AAAA,IAErB,UAAU,CAAE;AAAA,IACZ,YAAY,CAAE;AAAA,IACd,eAAe,CAAE;AAAA,IACjB,eAAe,CAAE;AAAA,IACjB,cAAc,CAAE;AAAA,IAChB,SAAS,IAAI,IAAI4C,EAAQ,YAAY0D,IAAmBA,EAAiB,GAAG,UAAU,CAAA,EAAG;AAAA;AAAA,IAEzF,WAAWtG,GAAc;AAAA,IACzB,OAAAe;AAAA,IACA,YAAY;AAAA,IACZ,MAAM6B,EAAQ,UAAU0D,EAAiB,GAAG;AAAA,EACpD;AACI,EAAAD,KAAiBA,EAAcvB,EAAG,IAAI;AACtC,MAAIyB,IAAQ;AAkBZ,MAjBAzB,EAAG,MAAMmB,IACHA,EAASvC,GAAWd,EAAQ,SAAS,CAAE,GAAE,CAACtK,GAAGkO,MAAQC,MAAS;AAC5D,UAAM1D,IAAQ0D,EAAK,SAASA,EAAK,CAAC,IAAID;AACtC,WAAI1B,EAAG,OAAOqB,EAAUrB,EAAG,IAAIxM,CAAC,GAAGwM,EAAG,IAAIxM,CAAC,IAAIyK,CAAK,MAC5C,CAAC+B,EAAG,cAAcA,EAAG,MAAMxM,CAAC,KAC5BwM,EAAG,MAAMxM,CAAC,EAAEyK,CAAK,GACjBwD,KACAR,GAAWrC,GAAWpL,CAAC,IAExBkO;AAAA,EACnB,CAAS,IACC,IACN1B,EAAG,OAAM,GACTyB,IAAQ,IACRtG,GAAQ6E,EAAG,aAAa,GAExBA,EAAG,WAAWoB,IAAkBA,EAAgBpB,EAAG,GAAG,IAAI,IACtDlC,EAAQ,QAAQ;AAChB,QAAIA,EAAQ,SAAS;AAEjB,YAAM8D,IAAQ1D,GAASJ,EAAQ,MAAM;AAErC,MAAAkC,EAAG,YAAYA,EAAG,SAAS,EAAE4B,CAAK,GAClCA,EAAM,QAAQ3E,CAAM;AAAA,IACvB;AAGG,MAAA+C,EAAG,YAAYA,EAAG,SAAS,EAAC;AAEhC,IAAIlC,EAAQ,SACRwC,GAAc1B,EAAU,GAAG,QAAQ,GACvC+B,GAAgB/B,GAAWd,EAAQ,QAAQA,EAAQ,QAAQA,EAAQ,aAAa,GAEhF2B;EACH;AACD,EAAAd,GAAsB6C,CAAgB;AAC1C;AAoDA,MAAMK,GAAgB;AAAA,EAClB,WAAW;AACP,IAAAb,GAAkB,MAAM,CAAC,GACzB,KAAK,WAAWnG;AAAA,EACnB;AAAA,EACD,IAAIwD,GAAM0B,GAAU;AAChB,QAAI,CAAC1E,EAAY0E,CAAQ;AACrB,aAAOlF;AAEX,UAAMmE,IAAa,KAAK,GAAG,UAAUX,CAAI,MAAM,KAAK,GAAG,UAAUA,CAAI,IAAI,CAAA;AACzE,WAAAW,EAAU,KAAKe,CAAQ,GAChB,MAAM;AACT,YAAM+B,IAAQ9C,EAAU,QAAQe,CAAQ;AACxC,MAAI+B,MAAU,MACV9C,EAAU,OAAO8C,GAAO,CAAC;AAAA,IACzC;AAAA,EACK;AAAA,EACD,KAAKC,GAAS;AACV,IAAI,KAAK,SAAS,CAACvG,GAASuG,CAAO,MAC/B,KAAK,GAAG,aAAa,IACrB,KAAK,MAAMA,CAAO,GAClB,KAAK,GAAG,aAAa;AAAA,EAE5B;AACL;ACztEY,IAAAC,uBAAAA,OAEVA,EAAA,UAAU,WAEVA,EAAA,UAAU,WAEVA,EAAA,YAAY,aANFA,IAAAA,MAAA,CAAA,CAAA;ACOL,MAAMC,KAAoB,CAAC5D,GAA0B6D,MAC3CA,GAwBJC,KAAmB,CAACC,MAA4C;AAC3E,MAAIC,IAAO,OACPC,IAAO,OACPC,IAAO,QACPC,IAAO;AAEX,SAAAJ,EAAO,QAAQ,CAAC,CAACzI,GAAG/B,CAAC,MAAM;AAClB,IAAAyK,IAAA,KAAK,IAAIA,GAAM1I,CAAC,GAChB2I,IAAA,KAAK,IAAIA,GAAM1K,CAAC,GAChB2K,IAAA,KAAK,IAAIA,GAAM5I,CAAC,GAChB6I,IAAA,KAAK,IAAIA,GAAM5K,CAAC;AAAA,EAAA,CACxB,GAEM,EAAE,MAAAyK,GAAM,MAAAC,GAAM,MAAAC,GAAM,MAAAC,EAAK;AAClC,GCpDMC,KAAkC;AAAA,EAEtC,MAAM,CAAC,MAAuB,KAAK,KAAK,EAAE,SAAS,KAAK,EAAE,SAAS;AAAA,EAEnE,YAAY,CAAC,GAAY9I,GAAW/B,MAAuB;AACzD,UAAM,EAAE,IAAA8K,GAAI,IAAAC,GAAI,IAAAC,GAAI,IAAAC,MAAO,EAAE,UAGvBC,IAAM,GAENC,IAAM,KAAK,IAAID,CAAG,GAClBE,IAAM,KAAK,IAAIF,CAAG,GAElBG,IAAMtJ,IAAI+I,GACVQ,IAAMtL,IAAI+K,GAEVQ,IAAMJ,IAAME,IAAKD,IAAME,GACvBE,IAAMJ,IAAMC,IAAKF,IAAMG;AAE7B,WAAQC,IAAMA,KAAQP,IAAKA,KAAOQ,IAAMA,KAAQP,IAAKA,MAAO;AAAA,EAC9D;AACF;AAEAZ,GAAkBD,GAAU,SAASS,EAAW;ACvBhD,MAAMY,KAAkC;AAAA,EAEtC,MAAM,CAACC,MAA6B;AAC5B,UAAA,EAAE,QAAAlB,EAAO,IAAIkB,EAAQ;AAE3B,QAAIC,IAAO,GACPnQ,IAAIgP,EAAO,SAAS;AAExB,aAAS5O,IAAI,GAAGA,IAAI4O,EAAO,QAAQ5O;AACjC,MAAA+P,MAASnB,EAAOhP,CAAC,EAAE,CAAC,IAAIgP,EAAO5O,CAAC,EAAE,CAAC,MAAM4O,EAAOhP,CAAC,EAAE,CAAC,IAAIgP,EAAO5O,CAAC,EAAE,CAAC,IAC/DJ,IAAAI;AAGC,WAAA,KAAK,IAAI,MAAM+P,CAAI;AAAA,EAC5B;AAAA,EAEA,YAAY,CAACD,GAAkB3J,GAAW/B,MAAuB;AAEzD,UAAA,EAAE,QAAAwK,EAAO,IAAIkB,EAAQ;AAE3B,QAAIE,IAAS;AAEJ,aAAAhQ,IAAI,GAAGJ,IAAIgP,EAAO,SAAS,GAAG5O,IAAI4O,EAAO,QAAQhP,IAAII,KAAK;AAC3D,YAAAiQ,IAAKrB,EAAO5O,CAAC,EAAE,CAAC,GACpBkQ,IAAKtB,EAAO5O,CAAC,EAAE,CAAC,GACZmQ,IAAKvB,EAAOhP,CAAC,EAAE,CAAC,GACpBwQ,IAAKxB,EAAOhP,CAAC,EAAE,CAAC;AAId,MAFcsQ,IAAK9L,KAAKgM,IAAKhM,KAAK+B,KAAMgK,IAAKF,MAAO7L,IAAI8L,MAAQE,IAAKF,KAAMD,MAEhED,IAAS,CAACA;AAAA,IAC3B;AAEO,WAAAA;AAAA,EACT;AAEF;AAEAvB,GAAkBD,GAAU,SAASqB,EAAW;ACtCzC,MAAMQ,KAAsC;AAAA,EAEjD,MAAM,CAACC,MAA4BA,EAAK,SAAS,IAAIA,EAAK,SAAS;AAAA,EAEnE,YAAY,CAACA,GAAiBnK,GAAW/B,MACvC+B,KAAKmK,EAAK,SAAS,KACnBnK,KAAKmK,EAAK,SAAS,IAAIA,EAAK,SAAS,KACrClM,KAAKkM,EAAK,SAAS,KACnBlM,KAAKkM,EAAK,SAAS,IAAIA,EAAK,SAAS;AAEzC;AAEA7B,GAAkBD,GAAU,WAAW6B,EAAa;ACG7C,IAAIE,KAAS,CAACC,IAAO,OAC1B,OAAO,gBAAgB,IAAI,WAAWA,CAAI,CAAC,EAAE,OAAO,CAACC,GAAIC,OACvDA,KAAQ,IACJA,IAAO,KACTD,KAAMC,EAAK,SAAS,EAAE,IACbA,IAAO,KAChBD,MAAOC,IAAO,IAAI,SAAS,EAAE,EAAE,YAAa,IACnCA,IAAO,KAChBD,KAAM,MAENA,KAAM,KAEDA,IACN,EAAE;ACDqBF,GAAO;;;;;;;;;yDC8B1BhG,EAAA+F,GAAA,KAAAK;AAAA,MAAAvI,EAAM,EAAA,EAAA,CAAC;AAAA,MAAIA,OAAa,CAAC,GAAKmC,EAAA+F,GAAA,KAAAM;AAAA,MAAAxI,EAAM,EAAA,EAAA,CAAC;AAAA,MAAIA,OAAa,CAAC;;;;QAAUA,EAAU,CAAA;AAAA,MAAA;;;;QAASA,EAAU,CAAA;AAAA,MAAA;AAAA;;AAHnG,MAAAiB,EAGsGC,GAAAgH,GAAA9G,CAAA;;;UADpFpB,EAAI,EAAA,EAACyI;AAAA;AAAA,YAAOzI;;aAAZA,EAAI,EAAA,EAACyI;AAAA;AAAA,UAAOzI,EAAG,EAAA;AAAA,QAAA,CAAA,EAAA,MAAA,MAAA,SAAA;AAAA;;;aAC5BK;AAAA,MAAA,MAAAkI,OAAAA;AAAA,MAAAvI,EAAM,EAAA,EAAA,CAAC;AAAA,MAAIA,OAAa,oBAAMK;AAAA,MAAA,MAAAmI,OAAAA;AAAA,MAAAxI,EAAM,EAAA,EAAA,CAAC;AAAA,MAAIA,OAAa;;;;;QAAWA,EAAU,CAAA;AAAA,MAAA;;;;;QAASA,EAAU,CAAA;AAAA,MAAA;AAAA;;;;;;;oCAJ9F0I;AAAA;AAAA,IAAA1I,KAAK;AAAA;wBAAV,QAAI,KAAA;;;;;;;;MAVGA,EAAa,CAAA,IAAG,kBAAkB,MAAS,GAE1CmC,EAAAwG,GAAA,UAAAC;AAAA,MAAA5I,KAAK,OAAO,IAAwB6I,EAAA,EAAA,KAAK,GAAG,CAAA;;;;QAI7C7I,EAAa,CAAA;AAAA,MAAA,GAEZmC,EAAA2G,GAAA,UAAAC;AAAA,MAAA/I,KAAK,OAAO,IAAwBgJ,EAAA,EAAA,KAAK,GAAG,CAAA;AAAA;;AAVtD,MAAA/H,EAI0DC,GAAAyH,GAAAvH,CAAA,eAE1DH,EAI0DC,GAAA4H,GAAA1H,CAAA;;;;;;;YAPxCpB,EAAI,EAAA,EAACyI,EAAO,KAAK;AAAA,eAAjBzI,EAAI,EAAA,EAACyI,EAAO,KAAK,EAAA,MAAA,MAAA,SAAA;AAAA;;;;YAMjBzI,EAAI,EAAA,EAACyI,EAAO,KAAK;AAAA,eAAjBzI,EAAI,EAAA,EAACyI,EAAO,KAAK,EAAA,MAAA,MAAA,SAAA;AAAA;;;;;;MAP1BzI,EAAa,CAAA,IAAG,kBAAkB,6BAEjCK;AAAA,MAAA,MAAAuI,OAAAA;AAAA,MAAA5I,KAAK,OAAO,IAAwB6I,EAAA,EAAA,KAAK,GAAG;;;;;QAI7C7I,EAAa,CAAA;AAAA,MAAA,GAEZK;AAAA,MAAA,MAAA0I,OAAAA;AAAA,MAAA/I,KAAK,OAAO,IAAwBgJ,EAAA,EAAA,KAAK,GAAG;;AAE/C,QAAAN;AAAA,QAAA1I,KAAK;;0BAAV,QAAIpI,KAAA,GAAA;;;;;;qBAAJ;AAAA;;;;;;;;;;;;;QApBKoI,EAAK,CAAA;AAAA;AAAA;;QACDA,EAAS,CAAA;AAAA;AAAA;;QACZA,EAAM,CAAA;AAAA;AAAA;;;aAIJ,MAAAiJ,EAAI,OAAA,EAAA,IAAAA,EAAA;AAAA,aAAJ,MAAAA,EAAI,MAAAA,IAAA,OAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;MANPjJ,EAAK,CAAA;;MACDA,EAAS,CAAA;;;;;;;;;;;;;;AAWM,MAAA6I,KAAA,CAAAK,MAAMA,EAAG,KAAK,GAAG,GAMjBF,KAAA,CAAAE,MAAMA,EAAG,KAAK,GAAG;;cAhDhC,OAAAC,EAAc,IAAAhD,GACd,EAAA,eAAAiD,IAAwB,OAAS,IAAAjD,KACjC,WAAAkD,EAAoB,IAAAlD,GACpB,EAAA,eAAAmD,IAAwB,EAAC,IAAAnD;AAM9B,QAAAoD,IAAU,CAAA7B,GAAkB8B,GAAgBC,MAAuB;QACnEjD;IAEAgD,MAAWf,EAAO,QACpBjC,IAASkB,EAAQ,SAAS,OAAO,IAAG,CAAA,CAAG3J,GAAG/B,CAAC,MAAO,CAAA+B,IAAI0L,EAAM,CAAC,GAAGzN,IAAIyN,EAAM,CAAC,CAAA,CAAA,IAE3EjD,IAASkB,EAAQ,SAAS,OAAO,IAAG,CAAA,CAAG3J,GAAG/B,CAAC,GAAG0N,MAC5CF,MAAWf,EAAOiB,CAAG,KAAK3L,IAAI0L,EAAM,CAAC,GAAGzN,IAAIyN,EAAM,CAAC,CAAA,IAAM,CAAA1L,GAAG/B,CAAC,CAAA;UAI3D2N,IAASpD,GAAiBC,CAAM;AAGjC,WAAA,EAAA,GAAAkB,GACH,UAAY,EAAA,QAAAlB,GAAQ,QAAAmD,EAAM;;;;;;;;;;;;;;;SAnB3BC,EAAA,GAAAC,IAAOV,EAAM,QAAQ;UAErBS,EAAA,GAAAE,IAAa,KAAKR,CAAa;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;MC+EzBtJ,EAAa,CAAA,IAAG,kBAAkB,MAAS,GAE/CmC,EAAA4H,GAAA,KAAAC;AAAA,MAAAhK,KAAK,CAAC,GAAKmC,EAAA4H,GAAA,KAAAE;AAAA,MAAAjK,KAAK,CAAC,GAASmC,EAAA4H,GAAA,SAAAG;AAAA,MAAAlK,KAAK,CAAC,GAAUmC,EAAA4H,GAAA,UAAAI;AAAA,MAAAnK,KAAK,CAAC;;;;QAI5CA,EAAa,CAAA;AAAA,MAAA,GAEjBmC,EAAAiI,GAAA,KAAAC;AAAA,MAAArK,KAAK,CAAC,GAAKmC,EAAAiI,GAAA,KAAAE;AAAA,MAAAtK,KAAK,CAAC,GAASmC,EAAAiI,GAAA,SAAAG;AAAA,MAAAvK,KAAK,CAAC,GAAUmC,EAAAiI,GAAA,UAAAI;AAAA,MAAAxK,KAAK,CAAC,yDAKhDmC,EAAAsI,GAAA,KAAAC;AAAA,MAAA1K,KAAK,CAAC,GAAKmC,EAAAsI,GAAA,KAAAE;AAAA,MAAA3K,KAAK,CAAC,kBAAU,CAAC,GAASmC,EAAAsI,GAAA,SAAAG;AAAA,MAAA5K,KAAK,CAAC,2DAK3CmC,EAAA0I,GAAA,KAAAC;AAAA,MAAA9K,EAAK,CAAA,EAAA;AAAA,MAAIA,KAAK,CAAC,GAAKmC,EAAA0I,GAAA,KAAAE;AAAA,MAAA/K,KAAK,CAAC,GAAUmC,EAAA0I,GAAA,UAAAG;AAAA,MAAAhL,KAAK,CAAC,iBAAS,CAAC,4DAKpDmC,EAAA8I,GAAA,KAAAC;AAAA,MAAAlL,KAAK,CAAC,GAAKmC,EAAA8I,GAAA,KAAAE;AAAA,MAAAnL,EAAK,CAAA,EAAA;AAAA,MAAIA,KAAK,CAAC,kBAAU,CAAC,GAASmC,EAAA8I,GAAA,SAAAG;AAAA,MAAApL,KAAK,CAAC,0DAKpDmC,EAAAkJ,GAAA,KAAAC;AAAA,MAAAtL,KAAK,CAAC,GAAKmC,EAAAkJ,GAAA,KAAAE;AAAA,MAAAvL,KAAK,CAAC,GAAUmC,EAAAkJ,GAAA,UAAAG;AAAA,MAAAxL,KAAK,CAAC,iBAAS,CAAC,iEAK3CmC,EAAAsJ,GAAA,KAAAC;AAAA,MAAA1L,EAAK,CAAA,EAAA;AAAA,MAAIA,OAAa,CAAC,GAAKmC,EAAAsJ,GAAA,KAAAE;AAAA,MAAA3L,EAAK,CAAA,EAAA;AAAA,MAAIA,OAAa,CAAC;;;;QAAUA,EAAU,CAAA;AAAA,MAAA;;;;QAASA,EAAU,CAAA;AAAA,MAAA;MAK1FA,EAAI,CAAA,EAAC;AAAA,MAAIA,KAAK;AAAA,MAAIA,EAAU,CAAA,IAAG,CAAC,GAAKmC,EAAAyJ,GAAA,KAAAC;AAAA,MAAA7L,EAAK,CAAA,EAAA;AAAA,MAAIA,OAAa,CAAC;;;;QAAUA,EAAU,CAAA;AAAA,MAAA;;;;QAASA,EAAU,CAAA;AAAA,MAAA;MAKnGA,EAAI,CAAA,EAAC;AAAA,MAAIA,KAAK;AAAA,MAAIA,EAAU,CAAA,IAAG,CAAC;MAAKA,EAAI,CAAA,EAAC;AAAA,MAAIA,KAAK;AAAA,MAAIA,EAAU,CAAA,IAAG,CAAC;;;;QAAUA,EAAU,CAAA;AAAA,MAAA;;;;QAASA,EAAU,CAAA;AAAA,MAAA,oEAK5GmC,EAAA2J,GAAA,KAAAC;AAAA,MAAA/L,EAAK,CAAA,EAAA;AAAA,MAAIA,OAAa,CAAC;MAAKA,EAAI,CAAA,EAAC;AAAA,MAAIA,KAAK;AAAA,MAAIA,EAAU,CAAA,IAAG,CAAC;;;;QAAUA,EAAU,CAAA;AAAA,MAAA;;;;QAASA,EAAU,CAAA;AAAA,MAAA;AAAA;;AAlDxG,MAAAiB,EAIwDC,GAAA6I,GAAA3I,CAAA,eAExDH,EAIwDC,GAAAkJ,GAAAhJ,CAAA,eAExDH,EAGmDC,GAAAuJ,GAAArJ,CAAA,eAEnDH,EAG2DC,GAAA2J,GAAAzJ,CAAA,eAE3DH,EAG4DC,GAAA+J,GAAA7J,CAAA,eAE5DH,EAGmDC,GAAAmK,GAAAjK,CAAA,gBAEnDH,EAGkGC,GAAAuK,GAAArK,CAAA,gBAElGH,EAG2GC,GAAA0K,GAAAxK,CAAA,gBAE3GH,EAGoHC,GAAA8K,GAAA5K,CAAA,gBAEpHH,EAG2GC,GAAA4K,GAAA1K,CAAA;;;;YA/CzFpB,EAAI,EAAA,EAACyI,EAAO,KAAK;AAAA,eAAjBzI,EAAI,EAAA,EAACyI,EAAO,KAAK,EAAA,MAAA,MAAA,SAAA;AAAA;;;;YAMjBzI,EAAI,EAAA,EAACyI,EAAO,KAAK;AAAA,eAAjBzI,EAAI,EAAA,EAACyI,EAAO,KAAK,EAAA,MAAA,MAAA,SAAA;AAAA;;;;YAKjBzI,EAAI,EAAA,EAACyI,EAAO,GAAG;AAAA,eAAfzI,EAAI,EAAA,EAACyI,EAAO,GAAG,EAAA,MAAA,MAAA,SAAA;AAAA;;;;YAKfzI,EAAI,EAAA,EAACyI,EAAO,KAAK;AAAA,eAAjBzI,EAAI,EAAA,EAACyI,EAAO,KAAK,EAAA,MAAA,MAAA,SAAA;AAAA;;;;YAKjBzI,EAAI,EAAA,EAACyI,EAAO,MAAM;AAAA,eAAlBzI,EAAI,EAAA,EAACyI,EAAO,MAAM,EAAA,MAAA,MAAA,SAAA;AAAA;;;;YAKlBzI,EAAI,EAAA,EAACyI,EAAO,IAAI;AAAA,eAAhBzI,EAAI,EAAA,EAACyI,EAAO,IAAI,EAAA,MAAA,MAAA,SAAA;AAAA;;;;YAKhBzI,EAAI,EAAA,EAACyI,EAAO,QAAQ;AAAA,eAApBzI,EAAI,EAAA,EAACyI,EAAO,QAAQ,EAAA,MAAA,MAAA,SAAA;AAAA;;;;YAKpBzI,EAAI,EAAA,EAACyI,EAAO,SAAS;AAAA,eAArBzI,EAAI,EAAA,EAACyI,EAAO,SAAS,EAAA,MAAA,MAAA,SAAA;AAAA;;;;YAKrBzI,EAAI,EAAA,EAACyI,EAAO,YAAY;AAAA,eAAxBzI,EAAI,EAAA,EAACyI,EAAO,YAAY,EAAA,MAAA,MAAA,SAAA;AAAA;;;;YAKxBzI,EAAI,EAAA,EAACyI,EAAO,WAAW;AAAA,eAAvBzI,EAAI,EAAA,EAACyI,EAAO,WAAW,EAAA,MAAA,MAAA,SAAA;AAAA;;;;;;MA/ChCzI,EAAa,CAAA,IAAG,kBAAkB,6BAEtCK;AAAA,MAAA,MAAA2J,OAAAA;AAAA,MAAAhK,KAAK,oBAAMK;AAAA,MAAA,MAAA4J,OAAAA;AAAA,MAAAjK,KAAK,oBAAUK;AAAA,MAAA,MAAA6J,OAAAA;AAAA,MAAAlK,KAAK,wBAAWK;AAAA,MAAA,MAAA8J,OAAAA;AAAA,MAAAnK,KAAK;;;;;QAI3CA,EAAa,CAAA;AAAA,MAAA,GAEjBK;AAAA,MAAA,MAAAgK,OAAAA;AAAA,MAAArK,KAAK,oBAAMK;AAAA,MAAA,MAAAiK,OAAAA;AAAA,MAAAtK,KAAK,oBAAUK;AAAA,MAAA,MAAAkK,OAAAA;AAAA,MAAAvK,KAAK,wBAAWK;AAAA,MAAA,MAAAmK,OAAAA;AAAA,MAAAxK,KAAK,yBAK/CK;AAAA,MAAA,MAAAqK,OAAAA;AAAA,MAAA1K,KAAK,oBAAMK;AAAA,MAAA,MAAAsK,OAAAA;AAAA,MAAA3K,KAAK,oBAAqBK;AAAA,MAAA,MAAAuK,OAAAA;AAAA,MAAA5K,KAAK,wBAK1CK;AAAA,MAAA,MAAAyK,OAAAA;AAAA,MAAA9K,EAAK,CAAA,EAAA;AAAA,MAAIA,KAAK,oBAAMK;AAAA,MAAA,MAAA0K,OAAAA;AAAA,MAAA/K,KAAK,oBAAWK;AAAA,MAAA,MAAA2K,OAAAA;AAAA,MAAAhL,KAAK,yBAKzCK;AAAA,MAAA,MAAA6K,OAAAA;AAAA,MAAAlL,KAAK,oBAAMK;AAAA,MAAA,MAAA8K,OAAAA;AAAA,MAAAnL,EAAK,CAAA,EAAA;AAAA,MAAIA,KAAK,oBAAqBK;AAAA,MAAA,MAAA+K,OAAAA;AAAA,MAAApL,KAAK,wBAKnDK;AAAA,MAAA,MAAAiL,OAAAA;AAAA,MAAAtL,KAAK,oBAAMK;AAAA,MAAA,MAAAkL,OAAAA;AAAA,MAAAvL,KAAK,oBAAWK;AAAA,MAAA,MAAAmL,QAAAA;AAAA,MAAAxL,KAAK,0BAKhCK;AAAA,MAAA,MAAAqL,QAAAA;AAAA,MAAA1L,EAAK,CAAA,EAAA;AAAA,MAAIA,OAAa,qBAAMK;AAAA,MAAA,MAAAsL,QAAAA;AAAA,MAAA3L,EAAK,CAAA,EAAA;AAAA,MAAIA,OAAa;;;;;QAAWA,EAAU,CAAA;AAAA,MAAA;;;;;QAASA,EAAU,CAAA;AAAA,MAAA;;MAK1FA,EAAI,CAAA,EAAC;AAAA,MAAIA,KAAK;AAAA,MAAIA,EAAU,CAAA,IAAG,qBAAMK;AAAA,MAAA,MAAAwL,QAAAA;AAAA,MAAA7L,EAAK,CAAA,EAAA;AAAA,MAAIA,OAAa;;;;;QAAWA,EAAU,CAAA;AAAA,MAAA;;;;;QAASA,EAAU,CAAA;AAAA,MAAA;;MAKnGA,EAAI,CAAA,EAAC;AAAA,MAAIA,KAAK;AAAA,MAAIA,EAAU,CAAA,IAAG;;MAAMA,EAAI,CAAA,EAAC;AAAA,MAAIA,KAAK;AAAA,MAAIA,EAAU,CAAA,IAAG;;;;;QAAWA,EAAU,CAAA;AAAA,MAAA;;;;;QAASA,EAAU,CAAA;AAAA,MAAA,GAK5GK;AAAA,MAAA,MAAA0L,QAAAA;AAAA,MAAA/L,EAAK,CAAA,EAAA;AAAA,MAAIA,OAAa;;MAAMA,EAAI,CAAA,EAAC;AAAA,MAAIA,KAAK;AAAA,MAAIA,EAAU,CAAA,IAAG;;;;;QAAWA,EAAU,CAAA;AAAA,MAAA;;;;;QAASA,EAAU,CAAA;AAAA,MAAA;AAAA;;;;;;;;;;;;QA1DjGA,EAAK,CAAA;AAAA;AAAA;;QACDA,EAAS,CAAA;AAAA;AAAA;;QACZA,EAAM,CAAA;AAAA;AAAA;;;aAIJ,MAAAiJ,EAAI,OAAA,EAAA,IAAAA,EAAA;AAAA,aAAJ,MAAAA,EAAI,MAAAA,IAAA,OAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;MANPjJ,EAAK,CAAA;;MACDA,EAAS,CAAA;;;;;;;;;;;;;;;cA9ET,OAAAmJ,EAAgB,IAAAhD,GAChB,EAAA,eAAAiD,IAAwB,OAAS,IAAAjD,KACjC,WAAAkD,EAAoB,IAAAlD,GACpB,EAAA,eAAAmD,IAAwB,EAAC,IAAAnD;AAM9B,QAAAoD,IAAU,CAAA0C,GAAsBzC,GAAgBC,MAAuB;AACrE,UAAAyC,IAAgBD,EAAU,SAAS;SAEpCE,GAAIC,CAAE,IAAK,CAAAF,EAAc,MAAMA,EAAc,IAAI,IACjDG,GAAIC,CAAE,IAAK,CAAAJ,EAAc,MAAMA,EAAc,IAAI;WAE/C7E,GAAIC,CAAE,IAAImC;QAEbD,MAAWf,EAAO;AACpB,MAAA0D,KAAM9E,GACNgF,KAAMhF,GACN+E,KAAM9E,GACNgF,KAAMhF;AAAA;cAEEkC,GAAM;AAAA,QACP,KAAAf,EAAO;AAAA,QACP,KAAAA,EAAO;AAAA,QACP,KAAAA,EAAO;AACV,UAAA2D,KAAM9E;;;QAIH,KAAAmB,EAAO;AAAA,QACP,KAAAA,EAAO;AAAA,QACP,KAAAA,EAAO;AACV,UAAA6D,KAAMhF;;;;cAKFkC,GAAM;AAAA,QACP,KAAAf,EAAO;AAAA,QACP,KAAAA,EAAO;AAAA,QACP,KAAAA,EAAO;AACV,UAAA0D,KAAM9E;;;QAIH,KAAAoB,EAAO;AAAA,QACP,KAAAA,EAAO;AAAA,QACP,KAAAA,EAAO;AACV,UAAA4D,KAAMhF;;;;;AAMN,UAAAtJ,IAAI,KAAK,IAAIoO,GAAIE,CAAE,GACnBrQ,IAAI,KAAK,IAAIoQ,GAAIE,CAAE,GACnBxP,IAAI,KAAK,IAAIuP,IAAKF,CAAE,GACpBvR,IAAI,KAAK,IAAI0R,IAAKF,CAAE;;SAGrBH;AAAA,MACH,UAAQ;AAAA,QACN,GAAAlO;AAAA,QAAG,GAAA/B;AAAA,QAAG,GAAAc;AAAA,QAAG,GAAAlC;AAAA,QACT,QAAM;AAAA,UACJ,MAAMmD;AAAA,UACN,MAAM/B;AAAA,UACN,MAAM+B,IAAIjB;AAAA,UACV,MAAMd,IAAIpB;AAAA;;;;;;;;;;;;;;;;;SAhEfgP,EAAA,GAAAC,IAAOV,EAAM,QAAQ;UAErBS,EAAA,GAAAE,IAAa,KAAKR,CAAa;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACPjClD,GAAU,WACVA,GAAU;ACLN,MAAMqC,IAAS,CAACpG,MAA2B,UAAUA,CAAK;AAEjEoG,EAAO,QAAQ;AAEfA,EAAO,MAAM;AAEbA,EAAO,QAAQ;AAEfA,EAAO,SAAS;AAEhBA,EAAO,OAAO;AAEdA,EAAO,WAAW;AAElBA,EAAO,YAAY;AAEnBA,EAAO,eAAe;AAEtBA,EAAO,cAAc;;;ECuCPzI,EAAM,CAAA;AAAA,EAAA;;;;;;;;;;;;;;;;;;AALpB,MAAAiB,EAMGC,GAAAlG,GAAAoG,CAAA;;;;;UAJapB,EAAS,CAAA;AAAA,QAAA;AAAA;;;;UACPA,EAAa,CAAA;AAAA,QAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAnDvB,QAAAuM,IAAWpJ;QAGN,OAAAgG,EAAY,IAAAhD,KACZ,QAAAoD,EAAwE,IAAApD,KACxE,WAAAkD,EAAoB,IAAAlD,GAE3BqG,IAAwB,MAExBC,GAEAC,IAAsB;QAEpBC,IAAU,CAAAnD,MAAoB,CAAAoD,MAAiB;AACnD,IAAAJ,IAAgBhD,GAChBiD,IAASpD,EAAU,eAAeuD,EAAI,SAASA,EAAI,OAAO,GAC1DF,IAAevD,GAEAyD,EAAI,OACZ,kBAAkBA,EAAI,SAAS,GAEtCL,EAAS,MAAM;AAAA,KAGXM,IAAiB,CAAAD,MAAiB;QAClCJ,GAAa;AACR,YAAA,CAAAzO,GAAG/B,CAAC,IAAIqN,EAAU,eAAeuD,EAAI,SAASA,EAAI,OAAO,GAE1DnD,IAAK,CAAsB1L,IAAI0O,EAAO,CAAC,GAAGzQ,IAAIyQ,EAAO,CAAC,CAAA;AAE5D,MAAA7C,EAAA,GAAAT,IAAQI,EAAOmD,GAAcF,GAAe/C,CAAK,CAAA,GAEjD8C,EAAS,UAAUpD,CAAK;AAAA;KAItB2D,IAAa,CAAAF,MAAiB;AAElC,IADeA,EAAI,OACZ,sBAAsBA,EAAI,SAAS,GAE1CJ,IAAgB,MAEhBE,IAAevD,GAEfoD,EAAS,SAAS;AAAA;;;;;;;;;;;;;;+KCwCdpK,EAAA4K,GAAA,MAAAC;AAAA,MAAAhN,KAAK,EAAE,GAAMmC,EAAA4K,GAAA,MAAAE;AAAA,MAAAjN,KAAK,EAAE,GAAMmC,EAAA4K,GAAA,MAAAG;AAAA,MAAAlN,KAAK,EAAE,GAAMmC,EAAA4K,GAAA,MAAAI;AAAA,MAAAnN,KAAK,EAAE,gDAK9CmC,EAAAiL,GAAA,MAAAC;AAAA,MAAArN,KAAK,EAAE,GAAMmC,EAAAiL,GAAA,MAAAE;AAAA,MAAAtN,KAAK,EAAE,GAAMmC,EAAAiL,GAAA,MAAAG;AAAA,MAAAvN,KAAK,EAAE,GAAMmC,EAAAiL,GAAA,MAAAI;AAAA,MAAAxN,KAAK,EAAE,sDAK/CmC,EAAA4H,GAAA,KAAAC;AAAA,MAAAhK,EAAK,CAAA,EAAA;AAAA,MAAKA,OAAa,CAAC;MAAKA,EAAI,CAAA,EAAC;AAAA,MAAKA,OAAa;AAAA,MAAIA,EAAI,CAAA,EAAC,EAAE;;;;QAAUA,EAAU,CAAA;AAAA,MAAA;;;;QAASA,EAAU,CAAA;AAAA,MAAA;MAKtGA,EAAI,CAAA,EAAC;AAAA,MAAKA,KAAK;AAAA,MAAKA,EAAU,CAAA,IAAG,CAAC,GAAKmC,EAAAiI,GAAA,KAAAE;AAAA,MAAAtK,EAAK,CAAA,EAAA;AAAA,MAAKA,OAAa,CAAC;;;;QAAUA,EAAU,CAAA;AAAA,MAAA;;;;QAASA,EAAU,CAAA;AAAA,MAAA,gEAKtGmC,EAAAsI,GAAA,KAAAC;AAAA,MAAA1K,EAAK,CAAA,EAAA;AAAA,MAAKA,OAAa,CAAC;MAAKA,EAAI,CAAA,EAAC;AAAA,MAAKA,KAAK;AAAA,MAAKA,EAAU,CAAA,IAAG,CAAC;;;;QAAUA,EAAU,CAAA;AAAA,MAAA;;;;QAASA,EAAU,CAAA;AAAA,MAAA;MAKtGA,EAAI,CAAA,EAAC;AAAA,MAAKA,KAAK;AAAA,MAAKA,EAAU,CAAA,IAAG,CAAC,GAAKmC,EAAA0I,GAAA,KAAAE;AAAA,MAAA/K,EAAK,CAAA,EAAA;AAAA,MAAKA,OAAa,CAAC;;;;QAAUA,EAAU,CAAA;AAAA,MAAA;;;;QAASA,EAAU,CAAA;AAAA,MAAA;AAAA;;AA5B3G,MAAAiB,EAGwDC,GAAA6L,GAAA3L,CAAA,eAExDH,EAGwDC,GAAAkM,GAAAhM,CAAA,eAExDH,EAG+GC,GAAA6I,GAAA3I,CAAA,eAE/GH,EAG+GC,GAAAkJ,GAAAhJ,CAAA,eAE/GH,EAG+GC,GAAAuJ,GAAArJ,CAAA,eAE/GH,EAG+GC,GAAA2J,GAAAzJ,CAAA;;;;YA1B7FpB,EAAI,CAAA,EAACyI,EAAO,KAAK;AAAA,eAAjBzI,EAAI,CAAA,EAACyI,EAAO,KAAK,EAAA,MAAA,MAAA,SAAA;AAAA;;;;YAKjBzI,EAAI,CAAA,EAACyI,EAAO,KAAK;AAAA,eAAjBzI,EAAI,CAAA,EAACyI,EAAO,KAAK,EAAA,MAAA,MAAA,SAAA;AAAA;;;;YAKjBzI,EAAI,CAAA,EAACyI,EAAO,GAAG;AAAA,eAAfzI,EAAI,CAAA,EAACyI,EAAO,GAAG,EAAA,MAAA,MAAA,SAAA;AAAA;;;;YAKfzI,EAAI,CAAA,EAACyI,EAAO,KAAK;AAAA,eAAjBzI,EAAI,CAAA,EAACyI,EAAO,KAAK,EAAA,MAAA,MAAA,SAAA;AAAA;;;;YAKjBzI,EAAI,CAAA,EAACyI,EAAO,MAAM;AAAA,eAAlBzI,EAAI,CAAA,EAACyI,EAAO,MAAM,EAAA,MAAA,MAAA,SAAA;AAAA;;;;YAKlBzI,EAAI,CAAA,EAACyI,EAAO,IAAI;AAAA,eAAhBzI,EAAI,CAAA,EAACyI,EAAO,IAAI,EAAA,MAAA,MAAA,SAAA;AAAA;;;;aAxB5BpI;AAAA,MAAA,KAAA2M,OAAAA;AAAA,MAAAhN,KAAK,sBAAQK;AAAA,MAAA,KAAA4M,OAAAA;AAAA,MAAAjN,KAAK,sBAAQK;AAAA,MAAA,KAAA6M,OAAAA;AAAA,MAAAlN,KAAK,sBAAQK;AAAA,MAAA,KAAA8M,OAAAA;AAAA,MAAAnN,KAAK,sBAK5CK;AAAA,MAAA,KAAAgN,OAAAA;AAAA,MAAArN,KAAK,sBAAQK;AAAA,MAAA,KAAAiN,OAAAA;AAAA,MAAAtN,KAAK,sBAAQK;AAAA,MAAA,KAAAkN,OAAAA;AAAA,MAAAvN,KAAK,sBAAQK;AAAA,MAAA,KAAAmN,OAAAA;AAAA,MAAAxN,KAAK,sBAK7CK;AAAA,MAAA,MAAA2J,OAAAA;AAAA,MAAAhK,EAAK,CAAA,EAAA;AAAA,MAAKA,OAAa;;MAAMA,EAAI,CAAA,EAAC;AAAA,MAAKA,OAAa;AAAA,MAAIA,EAAI,CAAA,EAAC;;;;;QAAYA,EAAU,CAAA;AAAA,MAAA;;;;;QAASA,EAAU,CAAA;AAAA,MAAA;;MAKtGA,EAAI,CAAA,EAAC;AAAA,MAAKA,KAAK;AAAA,MAAKA,EAAU,CAAA,IAAG,oBAAMK;AAAA,MAAA,MAAAiK,OAAAA;AAAA,MAAAtK,EAAK,CAAA,EAAA;AAAA,MAAKA,OAAa;;;;;QAAWA,EAAU,CAAA;AAAA,MAAA;;;;;QAASA,EAAU,CAAA;AAAA,MAAA,GAKtGK;AAAA,MAAA,MAAAqK,OAAAA;AAAA,MAAA1K,EAAK,CAAA,EAAA;AAAA,MAAKA,OAAa;;MAAMA,EAAI,CAAA,EAAC;AAAA,MAAKA,KAAK;AAAA,MAAKA,EAAU,CAAA,IAAG;;;;;QAAWA,EAAU,CAAA;AAAA,MAAA;;;;;QAASA,EAAU,CAAA;AAAA,MAAA;;MAKtGA,EAAI,CAAA,EAAC;AAAA,MAAKA,KAAK;AAAA,MAAKA,EAAU,CAAA,IAAG,oBAAMK;AAAA,MAAA,MAAA0K,OAAAA;AAAA,MAAA/K,EAAK,CAAA,EAAA;AAAA,MAAKA,OAAa;;;;;QAAWA,EAAU,CAAA;AAAA,MAAA;;;;;QAASA,EAAU,CAAA;AAAA,MAAA;AAAA;;;;;;;;;;;;QApCpGA,EAAK,CAAA;AAAA;AAAA;;QACDA,EAAS,CAAA;AAAA;AAAA;;QACZA,EAAM,CAAA;AAAA;AAAA;;;aAIJ,MAAAiJ,EAAI,OAAA,EAAA,GAAAA,EAAA;AAAA,aAAJ,MAAAA,EAAI,MAAAA,IAAA,MAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;MANPjJ,EAAK,CAAA;;MACDA,EAAS,CAAA;;;;;;;;;;;;;;;cA5ET,OAAAmJ,EAAc,IAAAhD,KAEd,WAAAkD,EAAoB,IAAAlD,GAEpB,EAAA,eAAAmD,IAAwB,EAAC,IAAAnD;AAM9B,QAAAoD,IAAU,CAAAkE,GAAkBjE,GAAgBC,MAAuB;AACjE,UAAAyC,IAAgBuB,EAAQ,SAAS;SAElCtB,GAAIC,CAAE,IAAK,CAAAF,EAAc,MAAMA,EAAc,IAAI,IACjDG,GAAIC,CAAE,IAAK,CAAAJ,EAAc,MAAMA,EAAc,IAAI;WAE/C7E,GAAIC,CAAE,IAAImC;QAEbD,MAAWf,EAAO;AACpB,MAAA0D,KAAM9E,GACNgF,KAAMhF,GACN+E,KAAM9E,GACNgF,KAAMhF;AAAA;cAEEkC,GAAM;AAAA,QACP,KAAAf,EAAO;AACV,UAAA2D,KAAM9E;;;QAIH,KAAAmB,EAAO;AACV,UAAA6D,KAAMhF;;;QAIH,KAAAmB,EAAO;AACV,UAAA0D,KAAM9E;;;QAIH,KAAAoB,EAAO;AACV,UAAA4D,KAAMhF;;;;AAMN,UAAAtJ,IAAI,KAAK,IAAIoO,GAAIE,CAAE,GACnBrQ,IAAI,KAAK,IAAIoQ,GAAIE,CAAE,GACnBxP,IAAI,KAAK,IAAIuP,IAAKF,CAAE,GACpBvR,IAAI,KAAK,IAAI0R,IAAKF,CAAE,GAEpBtF,KAAMqF,IAAKE,KAAM,GACjBtF,KAAMqF,IAAKE,KAAM,GAEjBtF,IAAKlK,IAAI,GACTmK,IAAKrM,IAAI;;SAGV6S;AAAA,MACH,UAAQ;AAAA,QACH,GAAAA,EAAQ;AAAA,QACX,IAAA3G;AAAA,QAAI,IAAAC;AAAA,QAAI,IAAAC;AAAA,QAAI,IAAAC;AAAA,QACZ,QAAM;AAAA,UACJ,MAAMlJ;AAAA,UACN,MAAM/B;AAAA,UACN,MAAM+B,IAAIjB;AAAA,UACV,MAAMd,IAAIpB;AAAA;;;;;;;;;;;;;;;;;SA7DfgP,EAAA,GAAAC,IAAOV,EAAM,QAAQ;UAErBS,EAAA,GAAAE,IAAa,KAAKR,CAAa;AAAA;;;;;;;;;;;;;;;;;;;;;;MC6K1BtJ,EAAC,CAAA;AAAA,MAAGA,EAAC,CAAA,IAAG,CAAC;MACTA,EAAC,CAAA;AAAA,MAAGA,EAAC,CAAA,IAAG,CAAC,GACTmC,EAAA4K,GAAA,MAAAG;AAAA,MAAAlN,OAAI,CAAC,GACLmC,EAAA4K,GAAA,MAAAI;AAAA,MAAAnN,OAAI,CAAC;MAILA,EAAC,CAAA;AAAA,MAAGA,EAAC,CAAA,IAAG,CAAC;MACTA,EAAC,CAAA;AAAA,MAAGA,EAAC,CAAA,IAAG,CAAC,GACTmC,EAAAiL,GAAA,MAAAG;AAAA,MAAAvN,OAAI,CAAC,GACLmC,EAAAiL,GAAA,MAAAI;AAAA,MAAAxN,OAAI,CAAC;AAAA;;AAZX,MAAAiB,EAKeC,GAAA6L,GAAA3L,CAAA,GAEfH,EAKeC,GAAAkM,GAAAhM,CAAA;AAAA;;;;MAVTpB,EAAC,CAAA;AAAA,MAAGA,EAAC,CAAA,IAAG;;MACRA,EAAC,CAAA;AAAA,MAAGA,EAAC,CAAA,IAAG,qBACRK;AAAA,MAAA,MAAA6M,OAAAA;AAAA,MAAAlN,OAAI,qBACJK;AAAA,MAAA,MAAA8M,OAAAA;AAAA,MAAAnN,OAAI;;MAIJA,EAAC,CAAA;AAAA,MAAGA,EAAC,CAAA,IAAG;;MACRA,EAAC,CAAA;AAAA,MAAGA,EAAC,CAAA,IAAG,qBACRK;AAAA,MAAA,MAAAkN,OAAAA;AAAA,MAAAvN,OAAI,qBACJK;AAAA,MAAA,MAAAmN,OAAAA;AAAA,MAAAxN,OAAI;;;;;;;;;;IAbPA,EAAM,CAAA,KAAA0N,GAAA1N,CAAA;AAAA;;;;;;AAJb,MAAAiB,EAmBGC,GAAAlG,GAAAoG,CAAA;;;;MAfIpB,EAAM,CAAA;;;;;;;;;;AAjLL,QAAAuM,IAAWpJ;QAGN,kBAAAwK,EAA8E,IAAAxH,KAC9E,aAAAyH,EAAwB,IAAAzH,KACxB,WAAAkD,EAAoB,IAAAlD,GAE3B0H,GAEApB,GAEArL,GAEArD,GAAW,GAAWjB,GAAWlC,GAEjCkT,IAAiB,IAEjBC,IAAgB,IAEhBC,GAEAC;AAEE,QAAAC,IAAiB,CAAAtB,MAAiB;AACtC,IAAAoB,IAAkB,YAAY,OAE1BJ,MAAgB,gBAClBnB,IAASpD,EAAU,eAAeuD,EAAI,SAASA,EAAI,OAAO,CAAA,GAC1DxL,IAASqL,QAET1O,IAAI0O,EAAO,CAAC,CAAA,QACZ,IAAIA,EAAO,CAAC,CAAA,GACZ7C,EAAA,GAAA9M,IAAI,CAAC,GACL8M,EAAA,GAAAhP,IAAI,CAAC;AAAA,KAIHuT,IAAe,CAAAC,MAAyB;UACtCxB,IAAMwB,KAAcH;QAEtBxB;UACFrL,IAASiI,EAAU,eAAeuD,EAAI,SAASA,EAAI,OAAO,GAEtDmB,GAAa;AACT,cAAAM,IAAK,IAAI,KAAK,IAAIjN,EAAO,CAAC,IAAIqL,EAAO,CAAC,CAAA,GACtC6B,IAAK,IAAI,KAAK,IAAIlN,EAAO,CAAC,IAAIqL,EAAO,CAAC,CAAA;aAE5C3P,IAAIgR,IAAiB,KAAK,IAAIO,GAAIC,CAAE,IAAID,CAAE,GAC1CzE,EAAA,GAAAhP,IAAIkT,IAAiBhR,IAAIwR,CAAE,GAE3B1E,EAAA,GAAA7L,IAAI,KAAK,IAAIqD,EAAO,CAAC,GAAGqL,EAAO,CAAC,IAAI3P,IAAI,CAAC,CAAA,GACzC8M,EAAA,GAAA,IAAI,KAAK,IAAIxI,EAAO,CAAC,GAAGqL,EAAO,CAAC,IAAI7R,IAAI,CAAC,CAAA;AAAA;cAEnCyT,IAAK,KAAK,IAAIjN,EAAO,CAAC,IAAIqL,EAAO,CAAC,CAAA,GAClC6B,IAAK,KAAK,IAAIlN,EAAO,CAAC,IAAIqL,EAAO,CAAC,CAAA;aAExC3P,IAAIgR,IAAiB,KAAK,IAAIO,GAAIC,CAAE,IAAID,CAAE,GAC1CzE,EAAA,GAAAhP,IAAIkT,IAAiBhR,IAAIwR,CAAE,QAE3BvQ,IAAI,KAAK,IAAIqD,EAAO,CAAC,GAAGqL,EAAO,CAAC,CAAA,CAAA,QAChC,IAAI,KAAK,IAAIrL,EAAO,CAAC,GAAGqL,EAAO,CAAC,CAAA,CAAA;AAAA;IAIhC2B,MACFH,IAAgBG;AAAA,KAGdG,IAAe,CAAA3B,MAAiB;AAChC,IAAAgB,MAAgB,WAClBhB,EAAI,yBAAwB;AAExB,UAAA4B,IAAiB,YAAY,IAAG,IAAKR;AAEvC,QAAAJ,MAAgB,SAAO;AAErB,UAAAY,IAAiB;AAAG;AAGxB,MAAA5B,EAAI,gBAAe,GAEfH,IACFgC,YAGAhC,IAASpD,EAAU,eAAeuD,EAAI,SAASA,EAAI,OAAO,CAAA,GAC1DxL,IAASqL,QAET1O,IAAI0O,EAAO,CAAC,CAAA,QACZ,IAAIA,EAAO,CAAC,CAAA,GACZ7C,EAAA,GAAA9M,IAAI,CAAC,GACL8M,EAAA,GAAAhP,IAAI,CAAC;AAAA;MAEE6R,MACL+B,IAAiB,OAAO1R,IAAIlC,IAAI,OAClCgS,EAAI,gBAAe,GACnB6B,QAEA7E,EAAA,GAAA6C,IAAS,IAAI,GACbrL,IAAS,MAET6M,IAAgB;AAAA,KAKhBQ,IAAW,MAAA;QAEX3R,IAAIlC,IAAI,IAAE;YACNuO,IAAK;AAAA,QACT,MAAM/C,GAAU;AAAA,QAChB,UAAQ;AAAA,UACN,QAAM;AAAA,YACJ,MAAMrI;AAAA,YACN,MAAM;AAAA,YACN,MAAMA,IAAIjB;AAAA,YACV,MAAM,IAAIlC;AAAA;UAEZ,IAAImD,IAAIjB,IAAI;AAAA,UACZ,IAAI,IAAIlC,IAAI;AAAA,UACZ,IAAIkC,IAAI;AAAA,UACR,IAAIlC,IAAI;AAAA;;AAIZ,MAAA2R,EAAS,UAAUpD,CAAK;AAAA;AAG1B,IAAAS,EAAA,GAAA6C,IAAS,IAAI,GACbrL,IAAS,MAET6M,IAAgB;AAAA,KAGZS,IAAa,CAAA9B,MAAkB;IAC/BA,EAAI,QAAQ,YACdkB,IAAiB,IACjBK,MAGEvB,EAAI,QAAQ,cACdmB,IAAgB,IAChBI;KAIEQ,IAAW,CAAA/B,MAAkB;IAC7BA,EAAI,QAAQ,YACdkB,IAAiB,IACjBK,MAGEvB,EAAI,QAAQ,cACdmB,IAAgB,IAChBI;;AAIJ,EAAAjL,GAAO,OACL,SAAS,iBAAiB,SAASyL,CAAO,GAC1C,SAAS,iBAAiB,WAAWD,CAAS,GAE9Cf,EAAiB,eAAeO,CAAa,GAC7CP,EAAiB,eAAeQ,CAAW,GAC3CR,EAAiB,aAAaY,CAAW;AAGvC,aAAS,oBAAoB,SAASI,CAAO,GAC7C,SAAS,oBAAoB,WAAWD,CAAS;AAAA;;;AAM1C,MAAAb,IAASe;;;;;;;;;;;;;;;;;;;;;;;;;;;AChLT,MAAAC,KAAiB,CAC5BC,MACG;AAEE,EAAAA,EAAA,oBAAoB,WAAWC,EAAiB,GAChDD,EAAA,oBAAoB1I,GAAU,SAAS4I,EAAa;AAE3D;","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13]}